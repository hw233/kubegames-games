// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ATT.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 牌型
type PokerType int32

const (
	PokerType_ZERO          PokerType = 0
	PokerType_DUIZI         PokerType = 1
	PokerType_LIANGDUI      PokerType = 2
	PokerType_SANTIAO       PokerType = 3
	PokerType_SHUNZI        PokerType = 4
	PokerType_TONGHUA       PokerType = 5
	PokerType_HULU          PokerType = 6
	PokerType_SIMEI         PokerType = 7
	PokerType_TONGHUASHUN   PokerType = 8
	PokerType_TONGHUADASHUN PokerType = 9
	PokerType_LUCKY5        PokerType = 10
)

var PokerType_name = map[int32]string{
	0:  "ZERO",
	1:  "DUIZI",
	2:  "LIANGDUI",
	3:  "SANTIAO",
	4:  "SHUNZI",
	5:  "TONGHUA",
	6:  "HULU",
	7:  "SIMEI",
	8:  "TONGHUASHUN",
	9:  "TONGHUADASHUN",
	10: "LUCKY5",
}

var PokerType_value = map[string]int32{
	"ZERO":          0,
	"DUIZI":         1,
	"LIANGDUI":      2,
	"SANTIAO":       3,
	"SHUNZI":        4,
	"TONGHUA":       5,
	"HULU":          6,
	"SIMEI":         7,
	"TONGHUASHUN":   8,
	"TONGHUADASHUN": 9,
	"LUCKY5":        10,
}

func (x PokerType) String() string {
	return proto.EnumName(PokerType_name, int32(x))
}

func (PokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{0}
}

type MsgId int32

const (
	MsgId_ZERO_O         MsgId = 0
	MsgId_ENTER_ROOM_Res MsgId = 1
	MsgId_BET_Req        MsgId = 2
	MsgId_BET_Res        MsgId = 3
	MsgId_DEALCARD_Req   MsgId = 4
	MsgId_DEALCARD_Res   MsgId = 5
	MsgId_CHANGECARD_Req MsgId = 6
	MsgId_CHANGECARD_Res MsgId = 7
	MsgId_COUNT_Req      MsgId = 8
	MsgId_COUNT_Res      MsgId = 9
	MsgId_TEST_Req       MsgId = 10
)

var MsgId_name = map[int32]string{
	0:  "ZERO_O",
	1:  "ENTER_ROOM_Res",
	2:  "BET_Req",
	3:  "BET_Res",
	4:  "DEALCARD_Req",
	5:  "DEALCARD_Res",
	6:  "CHANGECARD_Req",
	7:  "CHANGECARD_Res",
	8:  "COUNT_Req",
	9:  "COUNT_Res",
	10: "TEST_Req",
}

var MsgId_value = map[string]int32{
	"ZERO_O":         0,
	"ENTER_ROOM_Res": 1,
	"BET_Req":        2,
	"BET_Res":        3,
	"DEALCARD_Req":   4,
	"DEALCARD_Res":   5,
	"CHANGECARD_Req": 6,
	"CHANGECARD_Res": 7,
	"COUNT_Req":      8,
	"COUNT_Res":      9,
	"TEST_Req":       10,
}

func (x MsgId) String() string {
	return proto.EnumName(MsgId_name, int32(x))
}

func (MsgId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{1}
}

//游戏阶段
type GameStatus int32

const (
	GameStatus_game_End   GameStatus = 0
	GameStatus_game_Start GameStatus = 1
	GameStatus_dealcard   GameStatus = 2
)

var GameStatus_name = map[int32]string{
	0: "game_End",
	1: "game_Start",
	2: "dealcard",
}

var GameStatus_value = map[string]int32{
	"game_End":   0,
	"game_Start": 1,
	"dealcard":   2,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}

func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{2}
}

type EnterRoomRes struct {
	TableInfo            *TableInfo `protobuf:"bytes,1,opt,name=tableInfo,proto3" json:"tableInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *EnterRoomRes) Reset()         { *m = EnterRoomRes{} }
func (m *EnterRoomRes) String() string { return proto.CompactTextString(m) }
func (*EnterRoomRes) ProtoMessage()    {}
func (*EnterRoomRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{0}
}

func (m *EnterRoomRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterRoomRes.Unmarshal(m, b)
}
func (m *EnterRoomRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterRoomRes.Marshal(b, m, deterministic)
}
func (m *EnterRoomRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterRoomRes.Merge(m, src)
}
func (m *EnterRoomRes) XXX_Size() int {
	return xxx_messageInfo_EnterRoomRes.Size(m)
}
func (m *EnterRoomRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterRoomRes.DiscardUnknown(m)
}

var xxx_messageInfo_EnterRoomRes proto.InternalMessageInfo

func (m *EnterRoomRes) GetTableInfo() *TableInfo {
	if m != nil {
		return m.TableInfo
	}
	return nil
}

//牌桌信息
type TableInfo struct {
	TableId              int32       `protobuf:"varint,1,opt,name=tableId,proto3" json:"tableId,omitempty"`
	TableName            string      `protobuf:"bytes,2,opt,name=tableName,proto3" json:"tableName,omitempty"`
	UserInfoArr          []*UserInfo `protobuf:"bytes,3,rep,name=userInfoArr,proto3" json:"userInfoArr,omitempty"`
	Poker                []int32     `protobuf:"varint,4,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	GameStatus           GameStatus  `protobuf:"varint,5,opt,name=gameStatus,proto3,enum=msg.GameStatus" json:"gameStatus,omitempty"`
	Bets                 []int32     `protobuf:"varint,6,rep,packed,name=bets,proto3" json:"bets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TableInfo) Reset()         { *m = TableInfo{} }
func (m *TableInfo) String() string { return proto.CompactTextString(m) }
func (*TableInfo) ProtoMessage()    {}
func (*TableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{1}
}

func (m *TableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableInfo.Unmarshal(m, b)
}
func (m *TableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableInfo.Marshal(b, m, deterministic)
}
func (m *TableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableInfo.Merge(m, src)
}
func (m *TableInfo) XXX_Size() int {
	return xxx_messageInfo_TableInfo.Size(m)
}
func (m *TableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TableInfo proto.InternalMessageInfo

func (m *TableInfo) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

func (m *TableInfo) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *TableInfo) GetUserInfoArr() []*UserInfo {
	if m != nil {
		return m.UserInfoArr
	}
	return nil
}

func (m *TableInfo) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *TableInfo) GetGameStatus() GameStatus {
	if m != nil {
		return m.GameStatus
	}
	return GameStatus_game_End
}

func (m *TableInfo) GetBets() []int32 {
	if m != nil {
		return m.Bets
	}
	return nil
}

// 玩家信息
type UserInfo struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Head                 string   `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	NickName             string   `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Gold                 int64    `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`
	Sex                  int32    `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty"`
	Bet                  int32    `protobuf:"varint,6,opt,name=bet,proto3" json:"bet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{2}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *UserInfo) GetNickName() string {
	if m != nil {
		return m.NickName
	}
	return ""
}

func (m *UserInfo) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *UserInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *UserInfo) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

type BetReq struct {
	Bet                  int32    `protobuf:"varint,1,opt,name=bet,proto3" json:"bet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetReq) Reset()         { *m = BetReq{} }
func (m *BetReq) String() string { return proto.CompactTextString(m) }
func (*BetReq) ProtoMessage()    {}
func (*BetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{3}
}

func (m *BetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetReq.Unmarshal(m, b)
}
func (m *BetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetReq.Marshal(b, m, deterministic)
}
func (m *BetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetReq.Merge(m, src)
}
func (m *BetReq) XXX_Size() int {
	return xxx_messageInfo_BetReq.Size(m)
}
func (m *BetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BetReq.DiscardUnknown(m)
}

var xxx_messageInfo_BetReq proto.InternalMessageInfo

func (m *BetReq) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

type BetRes struct {
	Poker                []int32   `protobuf:"varint,1,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	PokerType            PokerType `protobuf:"varint,2,opt,name=pokerType,proto3,enum=msg.PokerType" json:"pokerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BetRes) Reset()         { *m = BetRes{} }
func (m *BetRes) String() string { return proto.CompactTextString(m) }
func (*BetRes) ProtoMessage()    {}
func (*BetRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{4}
}

func (m *BetRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetRes.Unmarshal(m, b)
}
func (m *BetRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetRes.Marshal(b, m, deterministic)
}
func (m *BetRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetRes.Merge(m, src)
}
func (m *BetRes) XXX_Size() int {
	return xxx_messageInfo_BetRes.Size(m)
}
func (m *BetRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BetRes.DiscardUnknown(m)
}

var xxx_messageInfo_BetRes proto.InternalMessageInfo

func (m *BetRes) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *BetRes) GetPokerType() PokerType {
	if m != nil {
		return m.PokerType
	}
	return PokerType_ZERO
}

type DealcardReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealcardReq) Reset()         { *m = DealcardReq{} }
func (m *DealcardReq) String() string { return proto.CompactTextString(m) }
func (*DealcardReq) ProtoMessage()    {}
func (*DealcardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{5}
}

func (m *DealcardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealcardReq.Unmarshal(m, b)
}
func (m *DealcardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealcardReq.Marshal(b, m, deterministic)
}
func (m *DealcardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealcardReq.Merge(m, src)
}
func (m *DealcardReq) XXX_Size() int {
	return xxx_messageInfo_DealcardReq.Size(m)
}
func (m *DealcardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DealcardReq.DiscardUnknown(m)
}

var xxx_messageInfo_DealcardReq proto.InternalMessageInfo

type DealcardRes struct {
	Poker                []int32  `protobuf:"varint,1,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealcardRes) Reset()         { *m = DealcardRes{} }
func (m *DealcardRes) String() string { return proto.CompactTextString(m) }
func (*DealcardRes) ProtoMessage()    {}
func (*DealcardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{6}
}

func (m *DealcardRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealcardRes.Unmarshal(m, b)
}
func (m *DealcardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealcardRes.Marshal(b, m, deterministic)
}
func (m *DealcardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealcardRes.Merge(m, src)
}
func (m *DealcardRes) XXX_Size() int {
	return xxx_messageInfo_DealcardRes.Size(m)
}
func (m *DealcardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DealcardRes.DiscardUnknown(m)
}

var xxx_messageInfo_DealcardRes proto.InternalMessageInfo

func (m *DealcardRes) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

type ChangeCardReq struct {
	Indexs               []int32  `protobuf:"varint,1,rep,packed,name=indexs,proto3" json:"indexs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeCardReq) Reset()         { *m = ChangeCardReq{} }
func (m *ChangeCardReq) String() string { return proto.CompactTextString(m) }
func (*ChangeCardReq) ProtoMessage()    {}
func (*ChangeCardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{7}
}

func (m *ChangeCardReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeCardReq.Unmarshal(m, b)
}
func (m *ChangeCardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeCardReq.Marshal(b, m, deterministic)
}
func (m *ChangeCardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeCardReq.Merge(m, src)
}
func (m *ChangeCardReq) XXX_Size() int {
	return xxx_messageInfo_ChangeCardReq.Size(m)
}
func (m *ChangeCardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeCardReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeCardReq proto.InternalMessageInfo

func (m *ChangeCardReq) GetIndexs() []int32 {
	if m != nil {
		return m.Indexs
	}
	return nil
}

type ChangeCardRes struct {
	Poker                []int32  `protobuf:"varint,1,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeCardRes) Reset()         { *m = ChangeCardRes{} }
func (m *ChangeCardRes) String() string { return proto.CompactTextString(m) }
func (*ChangeCardRes) ProtoMessage()    {}
func (*ChangeCardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{8}
}

func (m *ChangeCardRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeCardRes.Unmarshal(m, b)
}
func (m *ChangeCardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeCardRes.Marshal(b, m, deterministic)
}
func (m *ChangeCardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeCardRes.Merge(m, src)
}
func (m *ChangeCardRes) XXX_Size() int {
	return xxx_messageInfo_ChangeCardRes.Size(m)
}
func (m *ChangeCardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeCardRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeCardRes proto.InternalMessageInfo

func (m *ChangeCardRes) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

type GameEndRes struct {
	PokerType            PokerType `protobuf:"varint,1,opt,name=pokerType,proto3,enum=msg.PokerType" json:"pokerType,omitempty"`
	Gold                 int64     `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`
	Score                int64     `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	PayKey               int32     `protobuf:"varint,4,opt,name=payKey,proto3" json:"payKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GameEndRes) Reset()         { *m = GameEndRes{} }
func (m *GameEndRes) String() string { return proto.CompactTextString(m) }
func (*GameEndRes) ProtoMessage()    {}
func (*GameEndRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{9}
}

func (m *GameEndRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEndRes.Unmarshal(m, b)
}
func (m *GameEndRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEndRes.Marshal(b, m, deterministic)
}
func (m *GameEndRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEndRes.Merge(m, src)
}
func (m *GameEndRes) XXX_Size() int {
	return xxx_messageInfo_GameEndRes.Size(m)
}
func (m *GameEndRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEndRes.DiscardUnknown(m)
}

var xxx_messageInfo_GameEndRes proto.InternalMessageInfo

func (m *GameEndRes) GetPokerType() PokerType {
	if m != nil {
		return m.PokerType
	}
	return PokerType_ZERO
}

func (m *GameEndRes) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func (m *GameEndRes) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *GameEndRes) GetPayKey() int32 {
	if m != nil {
		return m.PayKey
	}
	return 0
}

type GameEndReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameEndReq) Reset()         { *m = GameEndReq{} }
func (m *GameEndReq) String() string { return proto.CompactTextString(m) }
func (*GameEndReq) ProtoMessage()    {}
func (*GameEndReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{10}
}

func (m *GameEndReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameEndReq.Unmarshal(m, b)
}
func (m *GameEndReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameEndReq.Marshal(b, m, deterministic)
}
func (m *GameEndReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameEndReq.Merge(m, src)
}
func (m *GameEndReq) XXX_Size() int {
	return xxx_messageInfo_GameEndReq.Size(m)
}
func (m *GameEndReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GameEndReq.DiscardUnknown(m)
}

var xxx_messageInfo_GameEndReq proto.InternalMessageInfo

type TestReq struct {
	PokerType            PokerType `protobuf:"varint,1,opt,name=pokerType,proto3,enum=msg.PokerType" json:"pokerType,omitempty"`
	IsOpen               bool      `protobuf:"varint,2,opt,name=isOpen,proto3" json:"isOpen,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TestReq) Reset()         { *m = TestReq{} }
func (m *TestReq) String() string { return proto.CompactTextString(m) }
func (*TestReq) ProtoMessage()    {}
func (*TestReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c955bf1ac2de1d0, []int{11}
}

func (m *TestReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReq.Unmarshal(m, b)
}
func (m *TestReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReq.Marshal(b, m, deterministic)
}
func (m *TestReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReq.Merge(m, src)
}
func (m *TestReq) XXX_Size() int {
	return xxx_messageInfo_TestReq.Size(m)
}
func (m *TestReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReq.DiscardUnknown(m)
}

var xxx_messageInfo_TestReq proto.InternalMessageInfo

func (m *TestReq) GetPokerType() PokerType {
	if m != nil {
		return m.PokerType
	}
	return PokerType_ZERO
}

func (m *TestReq) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func init() {
	proto.RegisterEnum("msg.PokerType", PokerType_name, PokerType_value)
	proto.RegisterEnum("msg.MsgId", MsgId_name, MsgId_value)
	proto.RegisterEnum("msg.GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterType((*EnterRoomRes)(nil), "msg.EnterRoomRes")
	proto.RegisterType((*TableInfo)(nil), "msg.TableInfo")
	proto.RegisterType((*UserInfo)(nil), "msg.UserInfo")
	proto.RegisterType((*BetReq)(nil), "msg.BetReq")
	proto.RegisterType((*BetRes)(nil), "msg.BetRes")
	proto.RegisterType((*DealcardReq)(nil), "msg.DealcardReq")
	proto.RegisterType((*DealcardRes)(nil), "msg.DealcardRes")
	proto.RegisterType((*ChangeCardReq)(nil), "msg.ChangeCardReq")
	proto.RegisterType((*ChangeCardRes)(nil), "msg.ChangeCardRes")
	proto.RegisterType((*GameEndRes)(nil), "msg.GameEndRes")
	proto.RegisterType((*GameEndReq)(nil), "msg.GameEndReq")
	proto.RegisterType((*TestReq)(nil), "msg.TestReq")
}

func init() { proto.RegisterFile("ATT.proto", fileDescriptor_8c955bf1ac2de1d0) }

var fileDescriptor_8c955bf1ac2de1d0 = []byte{
	// 677 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xcb, 0x6a, 0xdb, 0x50,
	0x10, 0x8d, 0x2c, 0x4b, 0x96, 0xc6, 0x8f, 0xdc, 0x5e, 0x42, 0x11, 0xa1, 0x0b, 0xa3, 0x52, 0x6a,
	0x42, 0x48, 0x20, 0xa5, 0xd0, 0x45, 0x37, 0x8a, 0x2d, 0x6c, 0x11, 0x47, 0x2a, 0xd7, 0xd2, 0xa2,
	0xd9, 0x18, 0x39, 0xba, 0x75, 0x42, 0x62, 0xc9, 0xd6, 0x55, 0x20, 0x81, 0x7e, 0x41, 0xff, 0xa0,
	0x9f, 0xd2, 0xaf, 0xe8, 0x2f, 0x95, 0xfb, 0xf0, 0xa3, 0x2d, 0xa1, 0x74, 0x37, 0xe7, 0xcc, 0xcc,
	0x99, 0xd1, 0x19, 0x49, 0x60, 0x7b, 0x71, 0x7c, 0xb2, 0x2c, 0x8b, 0xaa, 0xc0, 0xfa, 0x82, 0xcd,
	0xdd, 0x8f, 0xd0, 0xf2, 0xf3, 0x8a, 0x96, 0xa4, 0x28, 0x16, 0x84, 0x32, 0x7c, 0x0c, 0x76, 0x95,
	0xce, 0xee, 0x69, 0x90, 0x7f, 0x29, 0x1c, 0xad, 0xab, 0xf5, 0x9a, 0x67, 0x9d, 0x93, 0x05, 0x9b,
	0x9f, 0xc4, 0x6b, 0x96, 0x6c, 0x0b, 0xdc, 0x9f, 0x1a, 0xd8, 0x9b, 0x04, 0x76, 0xa0, 0x21, 0x53,
	0x99, 0xe8, 0x34, 0xc8, 0x1a, 0xe2, 0x57, 0x4a, 0x35, 0x4c, 0x17, 0xd4, 0xa9, 0x75, 0xb5, 0x9e,
	0x4d, 0xb6, 0x04, 0x3e, 0x85, 0xe6, 0x03, 0xa3, 0x25, 0xd7, 0xf0, 0xca, 0xd2, 0xd1, 0xbb, 0x7a,
	0xaf, 0x79, 0xd6, 0x16, 0x53, 0x13, 0xc5, 0x93, 0xdd, 0x0a, 0x7c, 0x00, 0xc6, 0xb2, 0xb8, 0xa3,
	0xa5, 0x53, 0xef, 0xea, 0x3d, 0x83, 0x48, 0x80, 0x4f, 0x01, 0xe6, 0xe9, 0x82, 0x4e, 0xaa, 0xb4,
	0x7a, 0x60, 0x8e, 0xd1, 0xd5, 0x7a, 0x9d, 0xb3, 0x7d, 0xa1, 0x32, 0xdc, 0xd0, 0x64, 0xa7, 0x04,
	0x63, 0xa8, 0xcf, 0x68, 0xc5, 0x1c, 0x53, 0xa8, 0x88, 0xd8, 0xfd, 0xa6, 0x81, 0xb5, 0x1e, 0x8a,
	0x5f, 0x82, 0x29, 0xc6, 0x0e, 0xc4, 0xf3, 0xe8, 0x44, 0x21, 0xde, 0x78, 0x43, 0xd3, 0x4c, 0x3d,
	0x89, 0x88, 0xf1, 0x21, 0x58, 0xf9, 0xed, 0xf5, 0x9d, 0x78, 0x42, 0x5d, 0xf0, 0x1b, 0xcc, 0xeb,
	0xe7, 0xc5, 0x7d, 0xe6, 0xd4, 0x85, 0x8a, 0x88, 0x31, 0x02, 0x9d, 0xd1, 0x47, 0xb1, 0xa6, 0x41,
	0x78, 0xc8, 0x99, 0x19, 0xad, 0x1c, 0x53, 0x32, 0x33, 0x5a, 0xb9, 0x87, 0x60, 0x9e, 0xd3, 0x8a,
	0xd0, 0xd5, 0x3a, 0xa7, 0x6d, 0x73, 0x63, 0x95, 0x63, 0x5b, 0x37, 0xb4, 0x5d, 0x37, 0x8e, 0xc1,
	0x16, 0x41, 0xfc, 0xb4, 0x94, 0x96, 0x77, 0xd4, 0x21, 0x3f, 0xad, 0x59, 0xb2, 0x2d, 0x70, 0xdb,
	0xd0, 0x1c, 0xd0, 0xf4, 0xfe, 0x3a, 0x2d, 0x33, 0x42, 0x57, 0xee, 0xeb, 0x5d, 0xf8, 0xcc, 0x04,
	0xf7, 0x2d, 0xb4, 0xfb, 0x37, 0x69, 0x3e, 0xa7, 0x7d, 0xd9, 0xc5, 0xed, 0xba, 0xcd, 0x33, 0xfa,
	0xc8, 0x54, 0x9d, 0x42, 0xee, 0x9b, 0xdf, 0x0b, 0x9f, 0xd3, 0xfb, 0x0a, 0xc0, 0x0f, 0xe5, 0xe7,
	0x99, 0x7a, 0x11, 0xb7, 0xfb, 0x6b, 0xff, 0xd8, 0x7f, 0xe3, 0x70, 0x6d, 0xc7, 0xe1, 0x03, 0x30,
	0xd8, 0x75, 0x51, 0xca, 0x73, 0xe8, 0x44, 0x02, 0xbe, 0xe4, 0x32, 0x7d, 0xba, 0xa0, 0x4f, 0xe2,
	0x1a, 0x06, 0x51, 0xc8, 0x6d, 0xed, 0x4c, 0x5f, 0xb9, 0x11, 0x34, 0x62, 0xca, 0x84, 0xf5, 0xff,
	0xb7, 0x08, 0xf7, 0x80, 0x45, 0x4b, 0x9a, 0x8b, 0x55, 0x2c, 0xa2, 0xd0, 0xd1, 0x77, 0x0d, 0xec,
	0x4d, 0x03, 0xb6, 0xa0, 0x7e, 0xe5, 0x93, 0x08, 0xed, 0x61, 0x1b, 0x8c, 0x41, 0x12, 0x5c, 0x05,
	0x48, 0xc3, 0x2d, 0xb0, 0xc6, 0x81, 0x17, 0x0e, 0x07, 0x49, 0x80, 0x6a, 0xb8, 0x09, 0x8d, 0x89,
	0x17, 0xc6, 0x81, 0x17, 0x21, 0x1d, 0x03, 0x98, 0x93, 0x51, 0x12, 0x5e, 0x05, 0xa8, 0xce, 0x13,
	0x71, 0x14, 0x0e, 0x47, 0x89, 0x87, 0x0c, 0x2e, 0x34, 0x4a, 0xc6, 0x09, 0x32, 0xb9, 0xd0, 0x24,
	0xb8, 0xf4, 0x03, 0xd4, 0xc0, 0xfb, 0xd0, 0x54, 0x15, 0xbc, 0x09, 0x59, 0xf8, 0x05, 0xb4, 0x15,
	0x31, 0x90, 0x94, 0xcd, 0x15, 0xc7, 0x49, 0xff, 0xe2, 0xf3, 0x7b, 0x04, 0x47, 0x3f, 0x34, 0x30,
	0x2e, 0xd9, 0x3c, 0xc8, 0x38, 0xcb, 0xf7, 0x9a, 0xf2, 0xcd, 0x30, 0x74, 0xfc, 0x30, 0xf6, 0xc9,
	0x94, 0x44, 0xd1, 0xe5, 0x94, 0x50, 0x86, 0x34, 0x3e, 0xfb, 0xdc, 0x8f, 0xa7, 0x84, 0xae, 0xe4,
	0x86, 0x12, 0x30, 0xa4, 0x63, 0x04, 0xad, 0x81, 0xef, 0x8d, 0xfb, 0x1e, 0x19, 0x88, 0x74, 0xfd,
	0x0f, 0x86, 0x21, 0x83, 0x2b, 0xf6, 0x47, 0x5e, 0x38, 0xf4, 0x37, 0x55, 0xe6, 0x5f, 0x1c, 0x43,
	0x0d, 0xdc, 0x06, 0xbb, 0x1f, 0x25, 0xa1, 0x9c, 0x63, 0xed, 0x42, 0x86, 0x6c, 0x6e, 0x53, 0xec,
	0x4f, 0x64, 0x12, 0x8e, 0x3e, 0xc8, 0xb3, 0xa9, 0x2f, 0xba, 0x05, 0x16, 0xff, 0xbe, 0xa7, 0x7e,
	0x9e, 0xa1, 0x3d, 0xdc, 0x91, 0x3f, 0x84, 0xe9, 0xa4, 0x4a, 0xcb, 0x4a, 0x1a, 0x9c, 0xa9, 0xb7,
	0x1a, 0xd5, 0x66, 0xa6, 0xf8, 0x0b, 0xbe, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x88, 0xe6, 0x0a,
	0xc6, 0x12, 0x05, 0x00, 0x00,
}
