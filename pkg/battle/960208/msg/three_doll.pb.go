// Code generated by protoc-gen-go. DO NOT EDIT.
// source: three_doll.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 客户端到服务器发送消息的类型
type ReceiveMessageType int32

const (
	ReceiveMessageType_C2SStartID     ReceiveMessageType = 0
	ReceiveMessageType_C2SRobBanker   ReceiveMessageType = 1
	ReceiveMessageType_C2SBetChips    ReceiveMessageType = 2
	ReceiveMessageType_C2SShowCards   ReceiveMessageType = 3
	ReceiveMessageType_C2SDemandCards ReceiveMessageType = 4
	ReceiveMessageType_C2SPullRecords ReceiveMessageType = 5
)

var ReceiveMessageType_name = map[int32]string{
	0: "C2SStartID",
	1: "C2SRobBanker",
	2: "C2SBetChips",
	3: "C2SShowCards",
	4: "C2SDemandCards",
	5: "C2SPullRecords",
}

var ReceiveMessageType_value = map[string]int32{
	"C2SStartID":     0,
	"C2SRobBanker":   1,
	"C2SBetChips":    2,
	"C2SShowCards":   3,
	"C2SDemandCards": 4,
	"C2SPullRecords": 5,
}

func (x ReceiveMessageType) String() string {
	return proto.EnumName(ReceiveMessageType_name, int32(x))
}

func (ReceiveMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{0}
}

// 服务器发送给客户端的消息类型
type SendToClientMessageType int32

const (
	SendToClientMessageType_S2CStartID         SendToClientMessageType = 0
	SendToClientMessageType_S2CUserSitDown     SendToClientMessageType = 1
	SendToClientMessageType_S2CGameStatus      SendToClientMessageType = 2
	SendToClientMessageType_S2CSceneMessage    SendToClientMessageType = 3
	SendToClientMessageType_S2CDealCards       SendToClientMessageType = 4
	SendToClientMessageType_S2CRobBankerInfo   SendToClientMessageType = 5
	SendToClientMessageType_S2CRobBankerResult SendToClientMessageType = 6
	SendToClientMessageType_S2CBetMultiple     SendToClientMessageType = 7
	SendToClientMessageType_S2CBetChipsInfo    SendToClientMessageType = 8
	SendToClientMessageType_S2CShowCards       SendToClientMessageType = 9
	SendToClientMessageType_S2CSettleResult    SendToClientMessageType = 10
	SendToClientMessageType_S2CRecords         SendToClientMessageType = 11
)

var SendToClientMessageType_name = map[int32]string{
	0:  "S2CStartID",
	1:  "S2CUserSitDown",
	2:  "S2CGameStatus",
	3:  "S2CSceneMessage",
	4:  "S2CDealCards",
	5:  "S2CRobBankerInfo",
	6:  "S2CRobBankerResult",
	7:  "S2CBetMultiple",
	8:  "S2CBetChipsInfo",
	9:  "S2CShowCards",
	10: "S2CSettleResult",
	11: "S2CRecords",
}

var SendToClientMessageType_value = map[string]int32{
	"S2CStartID":         0,
	"S2CUserSitDown":     1,
	"S2CGameStatus":      2,
	"S2CSceneMessage":    3,
	"S2CDealCards":       4,
	"S2CRobBankerInfo":   5,
	"S2CRobBankerResult": 6,
	"S2CBetMultiple":     7,
	"S2CBetChipsInfo":    8,
	"S2CShowCards":       9,
	"S2CSettleResult":    10,
	"S2CRecords":         11,
}

func (x SendToClientMessageType) String() string {
	return proto.EnumName(SendToClientMessageType_name, int32(x))
}

func (SendToClientMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{1}
}

//游戏阶段
type GameStatus int32

const (
	GameStatus_GameInit     GameStatus = 0
	GameStatus_GameReady    GameStatus = 1
	GameStatus_CountDown    GameStatus = 2
	GameStatus_StartGame    GameStatus = 3
	GameStatus_RobBanker    GameStatus = 4
	GameStatus_EndRob       GameStatus = 5
	GameStatus_BetChips     GameStatus = 6
	GameStatus_EndBet       GameStatus = 7
	GameStatus_ShowCards    GameStatus = 8
	GameStatus_EndShow      GameStatus = 9
	GameStatus_SettleStatus GameStatus = 10
	GameStatus_GameOver     GameStatus = 11
)

var GameStatus_name = map[int32]string{
	0:  "GameInit",
	1:  "GameReady",
	2:  "CountDown",
	3:  "StartGame",
	4:  "RobBanker",
	5:  "EndRob",
	6:  "BetChips",
	7:  "EndBet",
	8:  "ShowCards",
	9:  "EndShow",
	10: "SettleStatus",
	11: "GameOver",
}

var GameStatus_value = map[string]int32{
	"GameInit":     0,
	"GameReady":    1,
	"CountDown":    2,
	"StartGame":    3,
	"RobBanker":    4,
	"EndRob":       5,
	"BetChips":     6,
	"EndBet":       7,
	"ShowCards":    8,
	"EndShow":      9,
	"SettleStatus": 10,
	"GameOver":     11,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}

func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{2}
}

// 用户状态
type UserStatus int32

const (
	UserStatus_UserInit    UserStatus = 0
	UserStatus_SitDown     UserStatus = 1
	UserStatus_Ready       UserStatus = 2
	UserStatus_RobAction   UserStatus = 3
	UserStatus_BetAction   UserStatus = 4
	UserStatus_ShowedCards UserStatus = 5
)

var UserStatus_name = map[int32]string{
	0: "UserInit",
	1: "SitDown",
	2: "Ready",
	3: "RobAction",
	4: "BetAction",
	5: "ShowedCards",
}

var UserStatus_value = map[string]int32{
	"UserInit":    0,
	"SitDown":     1,
	"Ready":       2,
	"RobAction":   3,
	"BetAction":   4,
	"ShowedCards": 5,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{3}
}

//牌的类型
type CardsType int32

const (
	CardsType_Unknown       CardsType = 0
	CardsType_ZeroPoint     CardsType = 1
	CardsType_OnePoint      CardsType = 2
	CardsType_TwoPoint      CardsType = 3
	CardsType_ThreePoint    CardsType = 4
	CardsType_FourPoint     CardsType = 5
	CardsType_FivePoint     CardsType = 6
	CardsType_SixPoint      CardsType = 7
	CardsType_SevenPoint    CardsType = 8
	CardsType_EightPoint    CardsType = 9
	CardsType_NinePoint     CardsType = 10
	CardsType_ThreeDoll     CardsType = 11
	CardsType_Boom          CardsType = 12
	CardsType_ExplosionNine CardsType = 13
)

var CardsType_name = map[int32]string{
	0:  "Unknown",
	1:  "ZeroPoint",
	2:  "OnePoint",
	3:  "TwoPoint",
	4:  "ThreePoint",
	5:  "FourPoint",
	6:  "FivePoint",
	7:  "SixPoint",
	8:  "SevenPoint",
	9:  "EightPoint",
	10: "NinePoint",
	11: "ThreeDoll",
	12: "Boom",
	13: "ExplosionNine",
}

var CardsType_value = map[string]int32{
	"Unknown":       0,
	"ZeroPoint":     1,
	"OnePoint":      2,
	"TwoPoint":      3,
	"ThreePoint":    4,
	"FourPoint":     5,
	"FivePoint":     6,
	"SixPoint":      7,
	"SevenPoint":    8,
	"EightPoint":    9,
	"NinePoint":     10,
	"ThreeDoll":     11,
	"Boom":          12,
	"ExplosionNine": 13,
}

func (x CardsType) String() string {
	return proto.EnumName(CardsType_name, int32(x))
}

func (CardsType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{4}
}

//配牌类型
type DemandType int32

const (
	DemandType_NoDemand           DemandType = 0
	DemandType_MustWin            DemandType = 1
	DemandType_MustLose           DemandType = 2
	DemandType_ExplosionNineCards DemandType = 3
	DemandType_BoomCards          DemandType = 4
	DemandType_ThreeDollCards     DemandType = 5
	DemandType_WinAll             DemandType = 6
	DemandType_LoseAll            DemandType = 7
	DemandType_MustRob            DemandType = 8
	DemandType_PutIn              DemandType = 9
)

var DemandType_name = map[int32]string{
	0: "NoDemand",
	1: "MustWin",
	2: "MustLose",
	3: "ExplosionNineCards",
	4: "BoomCards",
	5: "ThreeDollCards",
	6: "WinAll",
	7: "LoseAll",
	8: "MustRob",
	9: "PutIn",
}

var DemandType_value = map[string]int32{
	"NoDemand":           0,
	"MustWin":            1,
	"MustLose":           2,
	"ExplosionNineCards": 3,
	"BoomCards":          4,
	"ThreeDollCards":     5,
	"WinAll":             6,
	"LoseAll":            7,
	"MustRob":            8,
	"PutIn":              9,
}

func (x DemandType) String() string {
	return proto.EnumName(DemandType_name, int32(x))
}

func (DemandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{5}
}

// 发送用户坐下信息
type UserSitDownRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId,proto3" json:"ChairId"`
	UserName             string   `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName"`
	Head                 string   `protobuf:"bytes,4,opt,name=Head,proto3" json:"Head"`
	Coin                 int64    `protobuf:"varint,5,opt,name=Coin,proto3" json:"Coin"`
	Address              string   `protobuf:"bytes,6,opt,name=address,proto3" json:"address"`
	Sex                  int32    `protobuf:"varint,7,opt,name=Sex,proto3" json:"Sex"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSitDownRes) Reset()         { *m = UserSitDownRes{} }
func (m *UserSitDownRes) String() string { return proto.CompactTextString(m) }
func (*UserSitDownRes) ProtoMessage()    {}
func (*UserSitDownRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{0}
}

func (m *UserSitDownRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSitDownRes.Unmarshal(m, b)
}
func (m *UserSitDownRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSitDownRes.Marshal(b, m, deterministic)
}
func (m *UserSitDownRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSitDownRes.Merge(m, src)
}
func (m *UserSitDownRes) XXX_Size() int {
	return xxx_messageInfo_UserSitDownRes.Size(m)
}
func (m *UserSitDownRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSitDownRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserSitDownRes proto.InternalMessageInfo

func (m *UserSitDownRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserSitDownRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *UserSitDownRes) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserSitDownRes) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *UserSitDownRes) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *UserSitDownRes) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserSitDownRes) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

// 发送游戏状态
type StatusMessageRes struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status"`
	StatusTime           int32    `protobuf:"varint,2,opt,name=StatusTime,proto3" json:"StatusTime"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusMessageRes) Reset()         { *m = StatusMessageRes{} }
func (m *StatusMessageRes) String() string { return proto.CompactTextString(m) }
func (*StatusMessageRes) ProtoMessage()    {}
func (*StatusMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{1}
}

func (m *StatusMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMessageRes.Unmarshal(m, b)
}
func (m *StatusMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMessageRes.Marshal(b, m, deterministic)
}
func (m *StatusMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessageRes.Merge(m, src)
}
func (m *StatusMessageRes) XXX_Size() int {
	return xxx_messageInfo_StatusMessageRes.Size(m)
}
func (m *StatusMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessageRes proto.InternalMessageInfo

func (m *StatusMessageRes) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StatusMessageRes) GetStatusTime() int32 {
	if m != nil {
		return m.StatusTime
	}
	return 0
}

// 场景消息
type SceneMessageRes struct {
	GameStatus           int32       `protobuf:"varint,1,opt,name=GameStatus,proto3" json:"GameStatus"`
	StatusTimeLeft       int64       `protobuf:"varint,2,opt,name=StatusTimeLeft,proto3" json:"StatusTimeLeft"`
	RoomCost             int64       `protobuf:"varint,3,opt,name=RoomCost,proto3" json:"RoomCost"`
	MinLimit             int64       `protobuf:"varint,4,opt,name=MinLimit,proto3" json:"MinLimit"`
	RoomID               int64       `protobuf:"varint,5,opt,name=RoomID,proto3" json:"RoomID"`
	Reconnect            bool        `protobuf:"varint,6,opt,name=Reconnect,proto3" json:"Reconnect"`
	UserData             []*UserInfo `protobuf:"bytes,7,rep,name=UserData,proto3" json:"UserData"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SceneMessageRes) Reset()         { *m = SceneMessageRes{} }
func (m *SceneMessageRes) String() string { return proto.CompactTextString(m) }
func (*SceneMessageRes) ProtoMessage()    {}
func (*SceneMessageRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{2}
}

func (m *SceneMessageRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneMessageRes.Unmarshal(m, b)
}
func (m *SceneMessageRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneMessageRes.Marshal(b, m, deterministic)
}
func (m *SceneMessageRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneMessageRes.Merge(m, src)
}
func (m *SceneMessageRes) XXX_Size() int {
	return xxx_messageInfo_SceneMessageRes.Size(m)
}
func (m *SceneMessageRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneMessageRes.DiscardUnknown(m)
}

var xxx_messageInfo_SceneMessageRes proto.InternalMessageInfo

func (m *SceneMessageRes) GetGameStatus() int32 {
	if m != nil {
		return m.GameStatus
	}
	return 0
}

func (m *SceneMessageRes) GetStatusTimeLeft() int64 {
	if m != nil {
		return m.StatusTimeLeft
	}
	return 0
}

func (m *SceneMessageRes) GetRoomCost() int64 {
	if m != nil {
		return m.RoomCost
	}
	return 0
}

func (m *SceneMessageRes) GetMinLimit() int64 {
	if m != nil {
		return m.MinLimit
	}
	return 0
}

func (m *SceneMessageRes) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *SceneMessageRes) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *SceneMessageRes) GetUserData() []*UserInfo {
	if m != nil {
		return m.UserData
	}
	return nil
}

// 玩家数据
type UserInfo struct {
	UserName             string   `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName"`
	Head                 string   `protobuf:"bytes,2,opt,name=Head,proto3" json:"Head"`
	Coin                 int64    `protobuf:"varint,3,opt,name=Coin,proto3" json:"Coin"`
	ChairId              int32    `protobuf:"varint,4,opt,name=ChairId,proto3" json:"ChairId"`
	Cards                []byte   `protobuf:"bytes,5,opt,name=Cards,proto3" json:"Cards"`
	CardsType            int32    `protobuf:"varint,6,opt,name=CardsType,proto3" json:"CardsType"`
	Status               int32    `protobuf:"varint,8,opt,name=Status,proto3" json:"Status"`
	UserId               int64    `protobuf:"varint,9,opt,name=userId,proto3" json:"userId"`
	BetMultiple          int64    `protobuf:"varint,10,opt,name=BetMultiple,proto3" json:"BetMultiple"`
	IsRob                bool     `protobuf:"varint,11,opt,name=IsRob,proto3" json:"IsRob"`
	IsBanker             bool     `protobuf:"varint,12,opt,name=IsBanker,proto3" json:"IsBanker"`
	Address              string   `protobuf:"bytes,13,opt,name=address,proto3" json:"address"`
	Sex                  int32    `protobuf:"varint,14,opt,name=Sex,proto3" json:"Sex"`
	Multiples            []int64  `protobuf:"varint,15,rep,packed,name=Multiples,proto3" json:"Multiples"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{3}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *UserInfo) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *UserInfo) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *UserInfo) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *UserInfo) GetCardsType() int32 {
	if m != nil {
		return m.CardsType
	}
	return 0
}

func (m *UserInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserInfo) GetBetMultiple() int64 {
	if m != nil {
		return m.BetMultiple
	}
	return 0
}

func (m *UserInfo) GetIsRob() bool {
	if m != nil {
		return m.IsRob
	}
	return false
}

func (m *UserInfo) GetIsBanker() bool {
	if m != nil {
		return m.IsBanker
	}
	return false
}

func (m *UserInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *UserInfo) GetMultiples() []int64 {
	if m != nil {
		return m.Multiples
	}
	return nil
}

// 发牌信息
type DealRes struct {
	Cards                []byte   `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards"`
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,3,opt,name=ChairId,proto3" json:"ChairId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealRes) Reset()         { *m = DealRes{} }
func (m *DealRes) String() string { return proto.CompactTextString(m) }
func (*DealRes) ProtoMessage()    {}
func (*DealRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{4}
}

func (m *DealRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealRes.Unmarshal(m, b)
}
func (m *DealRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealRes.Marshal(b, m, deterministic)
}
func (m *DealRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealRes.Merge(m, src)
}
func (m *DealRes) XXX_Size() int {
	return xxx_messageInfo_DealRes.Size(m)
}
func (m *DealRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DealRes.DiscardUnknown(m)
}

var xxx_messageInfo_DealRes proto.InternalMessageInfo

func (m *DealRes) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *DealRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DealRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

// 用户抢庄信息
type RobInfoRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId,proto3" json:"ChairId"`
	IsRob                bool     `protobuf:"varint,3,opt,name=IsRob,proto3" json:"IsRob"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobInfoRes) Reset()         { *m = RobInfoRes{} }
func (m *RobInfoRes) String() string { return proto.CompactTextString(m) }
func (*RobInfoRes) ProtoMessage()    {}
func (*RobInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{5}
}

func (m *RobInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobInfoRes.Unmarshal(m, b)
}
func (m *RobInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobInfoRes.Marshal(b, m, deterministic)
}
func (m *RobInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobInfoRes.Merge(m, src)
}
func (m *RobInfoRes) XXX_Size() int {
	return xxx_messageInfo_RobInfoRes.Size(m)
}
func (m *RobInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RobInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_RobInfoRes proto.InternalMessageInfo

func (m *RobInfoRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RobInfoRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *RobInfoRes) GetIsRob() bool {
	if m != nil {
		return m.IsRob
	}
	return false
}

// 抢庄结果信息
type RobResultRes struct {
	BankerUserId         int64    `protobuf:"varint,1,opt,name=bankerUserId,proto3" json:"bankerUserId"`
	BankerChairId        int32    `protobuf:"varint,2,opt,name=bankerChairId,proto3" json:"bankerChairId"`
	Candidates           []int32  `protobuf:"varint,3,rep,packed,name=Candidates,proto3" json:"Candidates"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobResultRes) Reset()         { *m = RobResultRes{} }
func (m *RobResultRes) String() string { return proto.CompactTextString(m) }
func (*RobResultRes) ProtoMessage()    {}
func (*RobResultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{6}
}

func (m *RobResultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobResultRes.Unmarshal(m, b)
}
func (m *RobResultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobResultRes.Marshal(b, m, deterministic)
}
func (m *RobResultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobResultRes.Merge(m, src)
}
func (m *RobResultRes) XXX_Size() int {
	return xxx_messageInfo_RobResultRes.Size(m)
}
func (m *RobResultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RobResultRes.DiscardUnknown(m)
}

var xxx_messageInfo_RobResultRes proto.InternalMessageInfo

func (m *RobResultRes) GetBankerUserId() int64 {
	if m != nil {
		return m.BankerUserId
	}
	return 0
}

func (m *RobResultRes) GetBankerChairId() int32 {
	if m != nil {
		return m.BankerChairId
	}
	return 0
}

func (m *RobResultRes) GetCandidates() []int32 {
	if m != nil {
		return m.Candidates
	}
	return nil
}

// 投注倍率信息
type BetMultipleRes struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId,proto3" json:"ChairId"`
	Multiples            []int64  `protobuf:"varint,3,rep,packed,name=Multiples,proto3" json:"Multiples"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetMultipleRes) Reset()         { *m = BetMultipleRes{} }
func (m *BetMultipleRes) String() string { return proto.CompactTextString(m) }
func (*BetMultipleRes) ProtoMessage()    {}
func (*BetMultipleRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{7}
}

func (m *BetMultipleRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetMultipleRes.Unmarshal(m, b)
}
func (m *BetMultipleRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetMultipleRes.Marshal(b, m, deterministic)
}
func (m *BetMultipleRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetMultipleRes.Merge(m, src)
}
func (m *BetMultipleRes) XXX_Size() int {
	return xxx_messageInfo_BetMultipleRes.Size(m)
}
func (m *BetMultipleRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BetMultipleRes.DiscardUnknown(m)
}

var xxx_messageInfo_BetMultipleRes proto.InternalMessageInfo

func (m *BetMultipleRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BetMultipleRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *BetMultipleRes) GetMultiples() []int64 {
	if m != nil {
		return m.Multiples
	}
	return nil
}

// 用户投注信息
type BetInfoRes struct {
	BetMultiple          int64    `protobuf:"varint,1,opt,name=BetMultiple,proto3" json:"BetMultiple"`
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,3,opt,name=ChairId,proto3" json:"ChairId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetInfoRes) Reset()         { *m = BetInfoRes{} }
func (m *BetInfoRes) String() string { return proto.CompactTextString(m) }
func (*BetInfoRes) ProtoMessage()    {}
func (*BetInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{8}
}

func (m *BetInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetInfoRes.Unmarshal(m, b)
}
func (m *BetInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetInfoRes.Marshal(b, m, deterministic)
}
func (m *BetInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetInfoRes.Merge(m, src)
}
func (m *BetInfoRes) XXX_Size() int {
	return xxx_messageInfo_BetInfoRes.Size(m)
}
func (m *BetInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BetInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_BetInfoRes proto.InternalMessageInfo

func (m *BetInfoRes) GetBetMultiple() int64 {
	if m != nil {
		return m.BetMultiple
	}
	return 0
}

func (m *BetInfoRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BetInfoRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

// 摊派信息
type ShowCardsRes struct {
	Cards                []byte   `protobuf:"bytes,1,opt,name=Cards,proto3" json:"Cards"`
	UserId               int64    `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,3,opt,name=ChairId,proto3" json:"ChairId"`
	CardsType            int32    `protobuf:"varint,4,opt,name=CardsType,proto3" json:"CardsType"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCardsRes) Reset()         { *m = ShowCardsRes{} }
func (m *ShowCardsRes) String() string { return proto.CompactTextString(m) }
func (*ShowCardsRes) ProtoMessage()    {}
func (*ShowCardsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{9}
}

func (m *ShowCardsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCardsRes.Unmarshal(m, b)
}
func (m *ShowCardsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCardsRes.Marshal(b, m, deterministic)
}
func (m *ShowCardsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCardsRes.Merge(m, src)
}
func (m *ShowCardsRes) XXX_Size() int {
	return xxx_messageInfo_ShowCardsRes.Size(m)
}
func (m *ShowCardsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCardsRes.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCardsRes proto.InternalMessageInfo

func (m *ShowCardsRes) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *ShowCardsRes) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ShowCardsRes) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *ShowCardsRes) GetCardsType() int32 {
	if m != nil {
		return m.CardsType
	}
	return 0
}

// 结算结果信息
type SettleResultRes struct {
	ResultList           []*SettleResult `protobuf:"bytes,1,rep,name=ResultList,proto3" json:"ResultList"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SettleResultRes) Reset()         { *m = SettleResultRes{} }
func (m *SettleResultRes) String() string { return proto.CompactTextString(m) }
func (*SettleResultRes) ProtoMessage()    {}
func (*SettleResultRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{10}
}

func (m *SettleResultRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleResultRes.Unmarshal(m, b)
}
func (m *SettleResultRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleResultRes.Marshal(b, m, deterministic)
}
func (m *SettleResultRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleResultRes.Merge(m, src)
}
func (m *SettleResultRes) XXX_Size() int {
	return xxx_messageInfo_SettleResultRes.Size(m)
}
func (m *SettleResultRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleResultRes.DiscardUnknown(m)
}

var xxx_messageInfo_SettleResultRes proto.InternalMessageInfo

func (m *SettleResultRes) GetResultList() []*SettleResult {
	if m != nil {
		return m.ResultList
	}
	return nil
}

// 结算结果
type SettleResult struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	ChairId              int32    `protobuf:"varint,2,opt,name=ChairId,proto3" json:"ChairId"`
	Result               int64    `protobuf:"varint,3,opt,name=Result,proto3" json:"Result"`
	IsBanker             bool     `protobuf:"varint,4,opt,name=IsBanker,proto3" json:"IsBanker"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleResult) Reset()         { *m = SettleResult{} }
func (m *SettleResult) String() string { return proto.CompactTextString(m) }
func (*SettleResult) ProtoMessage()    {}
func (*SettleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{11}
}

func (m *SettleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleResult.Unmarshal(m, b)
}
func (m *SettleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleResult.Marshal(b, m, deterministic)
}
func (m *SettleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleResult.Merge(m, src)
}
func (m *SettleResult) XXX_Size() int {
	return xxx_messageInfo_SettleResult.Size(m)
}
func (m *SettleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleResult.DiscardUnknown(m)
}

var xxx_messageInfo_SettleResult proto.InternalMessageInfo

func (m *SettleResult) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SettleResult) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *SettleResult) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *SettleResult) GetIsBanker() bool {
	if m != nil {
		return m.IsBanker
	}
	return false
}

// 战绩列表信息
type GameRecordsRes struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=Records,proto3" json:"Records"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GameRecordsRes) Reset()         { *m = GameRecordsRes{} }
func (m *GameRecordsRes) String() string { return proto.CompactTextString(m) }
func (*GameRecordsRes) ProtoMessage()    {}
func (*GameRecordsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{12}
}

func (m *GameRecordsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRecordsRes.Unmarshal(m, b)
}
func (m *GameRecordsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRecordsRes.Marshal(b, m, deterministic)
}
func (m *GameRecordsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRecordsRes.Merge(m, src)
}
func (m *GameRecordsRes) XXX_Size() int {
	return xxx_messageInfo_GameRecordsRes.Size(m)
}
func (m *GameRecordsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRecordsRes.DiscardUnknown(m)
}

var xxx_messageInfo_GameRecordsRes proto.InternalMessageInfo

func (m *GameRecordsRes) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

// 战绩
type Record struct {
	Time                 int32    `protobuf:"varint,1,opt,name=Time,proto3" json:"Time"`
	GameNum              string   `protobuf:"bytes,2,opt,name=GameNum,proto3" json:"GameNum"`
	RoomLevel            int32    `protobuf:"varint,3,opt,name=RoomLevel,proto3" json:"RoomLevel"`
	Result               int64    `protobuf:"varint,4,opt,name=Result,proto3" json:"Result"`
	Status               int32    `protobuf:"varint,5,opt,name=Status,proto3" json:"Status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{13}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Record) GetGameNum() string {
	if m != nil {
		return m.GameNum
	}
	return ""
}

func (m *Record) GetRoomLevel() int32 {
	if m != nil {
		return m.RoomLevel
	}
	return 0
}

func (m *Record) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *Record) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 抢庄请求
type RobBankerReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	IsRob                bool     `protobuf:"varint,3,opt,name=IsRob,proto3" json:"IsRob"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobBankerReq) Reset()         { *m = RobBankerReq{} }
func (m *RobBankerReq) String() string { return proto.CompactTextString(m) }
func (*RobBankerReq) ProtoMessage()    {}
func (*RobBankerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{14}
}

func (m *RobBankerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobBankerReq.Unmarshal(m, b)
}
func (m *RobBankerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobBankerReq.Marshal(b, m, deterministic)
}
func (m *RobBankerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobBankerReq.Merge(m, src)
}
func (m *RobBankerReq) XXX_Size() int {
	return xxx_messageInfo_RobBankerReq.Size(m)
}
func (m *RobBankerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RobBankerReq.DiscardUnknown(m)
}

var xxx_messageInfo_RobBankerReq proto.InternalMessageInfo

func (m *RobBankerReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RobBankerReq) GetIsRob() bool {
	if m != nil {
		return m.IsRob
	}
	return false
}

// 投注请求
type BetChipsReq struct {
	BetMultiple          int64    `protobuf:"varint,1,opt,name=BetMultiple,proto3" json:"BetMultiple"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetChipsReq) Reset()         { *m = BetChipsReq{} }
func (m *BetChipsReq) String() string { return proto.CompactTextString(m) }
func (*BetChipsReq) ProtoMessage()    {}
func (*BetChipsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{15}
}

func (m *BetChipsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetChipsReq.Unmarshal(m, b)
}
func (m *BetChipsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetChipsReq.Marshal(b, m, deterministic)
}
func (m *BetChipsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetChipsReq.Merge(m, src)
}
func (m *BetChipsReq) XXX_Size() int {
	return xxx_messageInfo_BetChipsReq.Size(m)
}
func (m *BetChipsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BetChipsReq.DiscardUnknown(m)
}

var xxx_messageInfo_BetChipsReq proto.InternalMessageInfo

func (m *BetChipsReq) GetBetMultiple() int64 {
	if m != nil {
		return m.BetMultiple
	}
	return 0
}

// 摊牌请求
type ShowCardsReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCardsReq) Reset()         { *m = ShowCardsReq{} }
func (m *ShowCardsReq) String() string { return proto.CompactTextString(m) }
func (*ShowCardsReq) ProtoMessage()    {}
func (*ShowCardsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{16}
}

func (m *ShowCardsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCardsReq.Unmarshal(m, b)
}
func (m *ShowCardsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCardsReq.Marshal(b, m, deterministic)
}
func (m *ShowCardsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCardsReq.Merge(m, src)
}
func (m *ShowCardsReq) XXX_Size() int {
	return xxx_messageInfo_ShowCardsReq.Size(m)
}
func (m *ShowCardsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCardsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCardsReq proto.InternalMessageInfo

func (m *ShowCardsReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 要牌请求
type DemandCardsReq struct {
	DemandType           int32    `protobuf:"varint,1,opt,name=DemandType,proto3" json:"DemandType"`
	Cards                []byte   `protobuf:"bytes,2,opt,name=Cards,proto3" json:"Cards"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemandCardsReq) Reset()         { *m = DemandCardsReq{} }
func (m *DemandCardsReq) String() string { return proto.CompactTextString(m) }
func (*DemandCardsReq) ProtoMessage()    {}
func (*DemandCardsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{17}
}

func (m *DemandCardsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemandCardsReq.Unmarshal(m, b)
}
func (m *DemandCardsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemandCardsReq.Marshal(b, m, deterministic)
}
func (m *DemandCardsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemandCardsReq.Merge(m, src)
}
func (m *DemandCardsReq) XXX_Size() int {
	return xxx_messageInfo_DemandCardsReq.Size(m)
}
func (m *DemandCardsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DemandCardsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DemandCardsReq proto.InternalMessageInfo

func (m *DemandCardsReq) GetDemandType() int32 {
	if m != nil {
		return m.DemandType
	}
	return 0
}

func (m *DemandCardsReq) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

// 拉去日志请求
type PullRecordsReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRecordsReq) Reset()         { *m = PullRecordsReq{} }
func (m *PullRecordsReq) String() string { return proto.CompactTextString(m) }
func (*PullRecordsReq) ProtoMessage()    {}
func (*PullRecordsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dd2bfad62a8d862, []int{18}
}

func (m *PullRecordsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRecordsReq.Unmarshal(m, b)
}
func (m *PullRecordsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRecordsReq.Marshal(b, m, deterministic)
}
func (m *PullRecordsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRecordsReq.Merge(m, src)
}
func (m *PullRecordsReq) XXX_Size() int {
	return xxx_messageInfo_PullRecordsReq.Size(m)
}
func (m *PullRecordsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRecordsReq.DiscardUnknown(m)
}

var xxx_messageInfo_PullRecordsReq proto.InternalMessageInfo

func (m *PullRecordsReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto.RegisterEnum("msg.ReceiveMessageType", ReceiveMessageType_name, ReceiveMessageType_value)
	proto.RegisterEnum("msg.SendToClientMessageType", SendToClientMessageType_name, SendToClientMessageType_value)
	proto.RegisterEnum("msg.GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterEnum("msg.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterEnum("msg.CardsType", CardsType_name, CardsType_value)
	proto.RegisterEnum("msg.DemandType", DemandType_name, DemandType_value)
	proto.RegisterType((*UserSitDownRes)(nil), "msg.UserSitDownRes")
	proto.RegisterType((*StatusMessageRes)(nil), "msg.StatusMessageRes")
	proto.RegisterType((*SceneMessageRes)(nil), "msg.SceneMessageRes")
	proto.RegisterType((*UserInfo)(nil), "msg.UserInfo")
	proto.RegisterType((*DealRes)(nil), "msg.DealRes")
	proto.RegisterType((*RobInfoRes)(nil), "msg.RobInfoRes")
	proto.RegisterType((*RobResultRes)(nil), "msg.RobResultRes")
	proto.RegisterType((*BetMultipleRes)(nil), "msg.BetMultipleRes")
	proto.RegisterType((*BetInfoRes)(nil), "msg.BetInfoRes")
	proto.RegisterType((*ShowCardsRes)(nil), "msg.ShowCardsRes")
	proto.RegisterType((*SettleResultRes)(nil), "msg.SettleResultRes")
	proto.RegisterType((*SettleResult)(nil), "msg.SettleResult")
	proto.RegisterType((*GameRecordsRes)(nil), "msg.GameRecordsRes")
	proto.RegisterType((*Record)(nil), "msg.Record")
	proto.RegisterType((*RobBankerReq)(nil), "msg.RobBankerReq")
	proto.RegisterType((*BetChipsReq)(nil), "msg.BetChipsReq")
	proto.RegisterType((*ShowCardsReq)(nil), "msg.ShowCardsReq")
	proto.RegisterType((*DemandCardsReq)(nil), "msg.DemandCardsReq")
	proto.RegisterType((*PullRecordsReq)(nil), "msg.PullRecordsReq")
}

func init() { proto.RegisterFile("three_doll.proto", fileDescriptor_2dd2bfad62a8d862) }

var fileDescriptor_2dd2bfad62a8d862 = []byte{
	// 1256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdf, 0x8e, 0xdb, 0xc4,
	0x17, 0xae, 0xed, 0x38, 0x7f, 0x4e, 0xb2, 0xd9, 0xe9, 0xfc, 0xaa, 0xfe, 0x2c, 0x84, 0xaa, 0xc8,
	0x82, 0x2a, 0xe4, 0xa2, 0x88, 0x70, 0xc1, 0x0d, 0x37, 0x8d, 0xb3, 0x85, 0xa0, 0xdd, 0x6d, 0xb1,
	0x53, 0x55, 0xe2, 0x86, 0x3a, 0xeb, 0xe9, 0xae, 0x55, 0x67, 0x66, 0x89, 0x27, 0xdb, 0xed, 0x25,
	0x12, 0x3c, 0x08, 0xaf, 0xc0, 0x15, 0xcf, 0xc2, 0x23, 0x70, 0xc9, 0x13, 0xa0, 0x33, 0x33, 0xb6,
	0xc7, 0x4b, 0x57, 0x88, 0x8a, 0x3b, 0x7f, 0x67, 0xc6, 0xe7, 0xcf, 0xf7, 0x9d, 0x73, 0xe2, 0x00,
	0x91, 0x17, 0x3b, 0xc6, 0xbe, 0xcf, 0x44, 0x51, 0x3c, 0xba, 0xdc, 0x09, 0x29, 0xa8, 0xb7, 0x2d,
	0xcf, 0xc3, 0x5f, 0x1d, 0x18, 0x3f, 0x2f, 0xd9, 0x2e, 0xc9, 0xe5, 0x52, 0xbc, 0xe1, 0x31, 0x2b,
	0xe9, 0x7d, 0xe8, 0xee, 0x4b, 0xb6, 0x5b, 0x65, 0x81, 0x33, 0x71, 0xa6, 0x5e, 0x6c, 0x10, 0x0d,
	0xa0, 0x17, 0x5d, 0xa4, 0x39, 0x1e, 0xb8, 0x13, 0x67, 0xea, 0xc7, 0x15, 0xa4, 0x1f, 0x40, 0x1f,
	0x7d, 0x9c, 0xa6, 0x5b, 0x16, 0x78, 0x13, 0x67, 0x3a, 0x88, 0x6b, 0x4c, 0x29, 0x74, 0xbe, 0x66,
	0x69, 0x16, 0x74, 0x94, 0x5d, 0x3d, 0xa3, 0x2d, 0x12, 0x39, 0x0f, 0x7c, 0xe5, 0x5f, 0x3d, 0xa3,
	0xf7, 0x34, 0xcb, 0x76, 0xac, 0x2c, 0x83, 0xae, 0xba, 0x5a, 0x41, 0x4a, 0xc0, 0x4b, 0xd8, 0x75,
	0xd0, 0x53, 0x31, 0xf1, 0x31, 0xfc, 0x06, 0x48, 0x22, 0x53, 0xb9, 0x2f, 0x4f, 0x58, 0x59, 0xa6,
	0xe7, 0xcc, 0x64, 0xad, 0x6d, 0x2a, 0x6b, 0x3f, 0x36, 0x88, 0x3e, 0x00, 0xd0, 0x4f, 0xeb, 0x7c,
	0xcb, 0x4c, 0xe2, 0x96, 0x25, 0xfc, 0xd3, 0x81, 0xc3, 0xe4, 0x8c, 0x71, 0x66, 0xf9, 0x7a, 0x00,
	0xf0, 0x55, 0xba, 0x65, 0x2d, 0x7f, 0x96, 0x85, 0x3e, 0x84, 0x71, 0xe3, 0xe1, 0x98, 0xbd, 0x92,
	0xca, 0xaf, 0x17, 0xdf, 0xb0, 0x22, 0x2f, 0xb1, 0x10, 0xdb, 0x48, 0x94, 0x52, 0xf1, 0xe2, 0xc5,
	0x35, 0xc6, 0xb3, 0x93, 0x9c, 0x1f, 0xe7, 0xdb, 0x5c, 0x2a, 0x6e, 0xbc, 0xb8, 0xc6, 0x58, 0x0b,
	0xde, 0x5b, 0x2d, 0x0d, 0x43, 0x06, 0xd1, 0x0f, 0x61, 0x10, 0xb3, 0x33, 0xc1, 0x39, 0x3b, 0x93,
	0x8a, 0xa5, 0x7e, 0xdc, 0x18, 0xe8, 0x27, 0x5a, 0x85, 0x65, 0x2a, 0xd3, 0xa0, 0x37, 0xf1, 0xa6,
	0xc3, 0xf9, 0xc1, 0xa3, 0x6d, 0x79, 0xfe, 0x08, 0x8d, 0x2b, 0xfe, 0x4a, 0xc4, 0xf5, 0x71, 0xf8,
	0x87, 0xab, 0xef, 0xa2, 0xb9, 0xa5, 0x9e, 0x73, 0x8b, 0x7a, 0xee, 0x3b, 0xd4, 0xf3, 0xda, 0xea,
	0x55, 0xbd, 0xd1, 0x69, 0xf7, 0xc6, 0x3d, 0xf0, 0xa3, 0x74, 0x97, 0x95, 0xaa, 0x94, 0x51, 0xac,
	0x01, 0x56, 0xa2, 0x1e, 0xd6, 0x6f, 0x2f, 0x99, 0xaa, 0xc4, 0x8f, 0x1b, 0x83, 0xa5, 0x65, 0xbf,
	0xa5, 0x65, 0xd3, 0x99, 0x83, 0x56, 0x67, 0x4e, 0x60, 0xb8, 0x60, 0xf2, 0x64, 0x5f, 0xc8, 0xfc,
	0xb2, 0x60, 0x01, 0xa8, 0x43, 0xdb, 0x84, 0x59, 0xac, 0xca, 0x58, 0x6c, 0x82, 0xa1, 0x62, 0x4d,
	0x03, 0xac, 0x7c, 0x55, 0x2e, 0x52, 0xfe, 0x9a, 0xed, 0x82, 0x91, 0x3a, 0xa8, 0xb1, 0xdd, 0x8f,
	0x07, 0xef, 0xec, 0xc7, 0x71, 0xdd, 0x8f, 0x58, 0x4d, 0x15, 0xa9, 0x0c, 0x0e, 0x27, 0xde, 0xd4,
	0x8b, 0x1b, 0x43, 0xf8, 0x2d, 0xf4, 0x96, 0x2c, 0x2d, 0xb0, 0xb1, 0x6a, 0x32, 0x1c, 0x9b, 0x8c,
	0xa6, 0x2c, 0xf7, 0xb6, 0x81, 0xf3, 0x5a, 0xa4, 0x86, 0x6b, 0x80, 0x58, 0x6c, 0x94, 0xa8, 0xef,
	0x35, 0xb0, 0x35, 0x1d, 0x9e, 0x45, 0x47, 0x78, 0x0d, 0xa3, 0x58, 0x6c, 0x62, 0x56, 0xee, 0x0b,
	0x89, 0x7e, 0x43, 0x18, 0x6d, 0x14, 0x19, 0xcf, 0x6d, 0xef, 0x2d, 0x1b, 0xfd, 0x08, 0x0e, 0x34,
	0x6e, 0x47, 0x6a, 0x1b, 0x71, 0xa0, 0xa2, 0x94, 0x67, 0x79, 0x96, 0x4a, 0x56, 0x06, 0xde, 0xc4,
	0xc3, 0x81, 0x6a, 0x2c, 0xe1, 0x4b, 0x18, 0x5b, 0x6a, 0xbd, 0x5f, 0x4d, 0x2d, 0x11, 0xbc, 0x9b,
	0x22, 0xbc, 0x04, 0x58, 0x30, 0x59, 0x31, 0x76, 0xa3, 0x61, 0x9c, 0xbf, 0x37, 0xcc, 0xbf, 0xd7,
	0x44, 0xc2, 0x28, 0xb9, 0x10, 0x6f, 0x94, 0xa4, 0xff, 0xa1, 0xd6, 0xed, 0x51, 0xe9, 0xdc, 0x18,
	0x95, 0x70, 0x09, 0x87, 0x09, 0x93, 0x52, 0x91, 0x66, 0x64, 0xfb, 0x0c, 0x40, 0x83, 0xe3, 0xbc,
	0x94, 0x81, 0xa3, 0x36, 0xc1, 0x5d, 0xb5, 0x09, 0x5a, 0x37, 0xad, 0x4b, 0x2a, 0x77, 0xeb, 0xec,
	0x3d, 0xd8, 0xc7, 0x95, 0xa5, 0xde, 0x35, 0x6b, 0xc1, 0xa0, 0xd6, 0x88, 0x75, 0xda, 0x23, 0x16,
	0x7e, 0x01, 0x63, 0x5c, 0xaa, 0xb8, 0xc1, 0x0c, 0x67, 0x1f, 0x43, 0xcf, 0x20, 0x93, 0xf7, 0x50,
	0xe5, 0xad, 0x6d, 0x71, 0x75, 0x16, 0xfe, 0xe4, 0x60, 0x34, 0x7c, 0xc6, 0x65, 0xa4, 0x16, 0xbb,
	0x5e, 0xd2, 0xea, 0x19, 0xb3, 0x44, 0xbf, 0xa7, 0xfb, 0xad, 0xd9, 0x5b, 0x15, 0x54, 0x0b, 0x54,
	0x88, 0xed, 0x31, 0xbb, 0x62, 0x85, 0xe1, 0xb9, 0x31, 0x58, 0x35, 0x74, 0x5a, 0x35, 0x34, 0xeb,
	0xc8, 0xb7, 0xd7, 0x51, 0xf8, 0xa5, 0x9a, 0x17, 0x5d, 0x4c, 0xcc, 0x7e, 0xb8, 0x95, 0xb5, 0x77,
	0x4f, 0xdb, 0xa7, 0xaa, 0x07, 0xa3, 0x8b, 0xfc, 0xb2, 0xc4, 0x97, 0xff, 0xb1, 0x25, 0xc3, 0x87,
	0xad, 0x06, 0xbb, 0x35, 0x5c, 0xf8, 0x04, 0xc6, 0x4b, 0xb6, 0x4d, 0x79, 0x56, 0xdf, 0x7c, 0x00,
	0xa0, 0x2d, 0xaa, 0x87, 0xcc, 0xef, 0x59, 0x63, 0x69, 0x5a, 0xd5, 0xb5, 0x5a, 0x35, 0x9c, 0xc2,
	0xf8, 0xd9, 0xbe, 0x28, 0x6a, 0x79, 0x6e, 0x8d, 0x38, 0xfb, 0xd1, 0x01, 0x1a, 0xb3, 0x33, 0x96,
	0x5f, 0x55, 0xbf, 0xa2, 0xca, 0xed, 0x18, 0x20, 0x9a, 0x27, 0x89, 0x4c, 0x77, 0x72, 0xb5, 0x24,
	0x77, 0x28, 0x81, 0x51, 0x34, 0x4f, 0x6a, 0xca, 0x88, 0x43, 0x0f, 0x61, 0x18, 0xcd, 0x93, 0x8a,
	0x06, 0xe2, 0x9a, 0x2b, 0x75, 0x99, 0xc4, 0xa3, 0x14, 0xc6, 0xd1, 0x3c, 0xb1, 0x0a, 0x22, 0x1d,
	0x63, 0xb3, 0x92, 0x23, 0xfe, 0xec, 0x67, 0x17, 0xfe, 0x9f, 0x30, 0x9e, 0xad, 0x45, 0x54, 0xe4,
	0x8c, 0xcb, 0x1b, 0x89, 0x24, 0xf3, 0xa8, 0x49, 0x84, 0xc2, 0x38, 0x99, 0x47, 0xd6, 0x67, 0x0f,
	0x71, 0xe8, 0x5d, 0x38, 0x48, 0xe6, 0x51, 0xf3, 0x23, 0x4f, 0x5c, 0xfa, 0x3f, 0x38, 0xc4, 0xd7,
	0xac, 0x8f, 0x03, 0xe2, 0x61, 0x86, 0xc9, 0x3c, 0xc2, 0x85, 0x5e, 0x65, 0x73, 0x0f, 0x48, 0x32,
	0x8f, 0xea, 0xb2, 0x70, 0xc7, 0x10, 0x9f, 0xde, 0x07, 0x6a, 0x5b, 0x75, 0x2b, 0x91, 0xae, 0x89,
	0x6d, 0xe9, 0x4a, 0x7a, 0x26, 0x50, 0x45, 0x83, 0x72, 0xd0, 0x37, 0x81, 0x1a, 0x2a, 0x06, 0x55,
	0x3e, 0xd6, 0xa0, 0x12, 0x30, 0xb5, 0x55, 0x3c, 0x0c, 0x67, 0xbf, 0x39, 0xf6, 0xc7, 0x0b, 0x1d,
	0x41, 0x1f, 0xd1, 0x8a, 0xe7, 0x92, 0xdc, 0xa1, 0x07, 0x30, 0xd0, 0x13, 0x97, 0x66, 0x6f, 0x89,
	0x83, 0x30, 0x12, 0x7b, 0xae, 0x29, 0x70, 0x11, 0x2a, 0x8e, 0xf0, 0x0a, 0xf1, 0x10, 0x36, 0x5a,
	0x75, 0x28, 0x40, 0xf7, 0x88, 0x67, 0xb1, 0xd8, 0x10, 0x1f, 0xbd, 0xd6, 0xa2, 0x75, 0xcd, 0xc9,
	0x82, 0x49, 0xd2, 0x53, 0x3e, 0xea, 0x94, 0xfb, 0x74, 0x08, 0xbd, 0x23, 0x9e, 0xa1, 0x85, 0x0c,
	0x54, 0x45, 0x2a, 0x79, 0xc3, 0x30, 0x54, 0xd9, 0x3d, 0xbd, 0x62, 0x3b, 0x32, 0x9c, 0xa5, 0x00,
	0x4a, 0x93, 0x3a, 0x73, 0xfd, 0x89, 0xa2, 0x32, 0x1f, 0x42, 0xaf, 0xd1, 0x6a, 0x00, 0xbe, 0x2e,
	0xc1, 0x35, 0x49, 0x3e, 0x3e, 0x93, 0xb9, 0xe0, 0x3a, 0xe7, 0x05, 0x93, 0x06, 0x76, 0xb0, 0xbf,
	0x30, 0x36, 0x33, 0x9d, 0xe3, 0xcf, 0x7e, 0x77, 0xac, 0x6d, 0x8a, 0x4e, 0x9f, 0xf3, 0xd7, 0x1c,
	0x9d, 0x2a, 0x6e, 0xbe, 0x63, 0x3b, 0xf1, 0x4c, 0xe4, 0x5c, 0x12, 0x07, 0xc3, 0x3f, 0xe5, 0x4c,
	0x23, 0x17, 0xd1, 0xfa, 0x8d, 0x39, 0xf3, 0x90, 0xf3, 0x35, 0x7e, 0x4d, 0x6b, 0xdc, 0xc1, 0x57,
	0x9f, 0x88, 0xfd, 0x4e, 0x43, 0x5f, 0xc1, 0xfc, 0xca, 0x9c, 0x76, 0xf1, 0xdd, 0x24, 0xbf, 0xd6,
	0xa8, 0xa7, 0xf4, 0x62, 0x57, 0x8c, 0x6b, 0xdc, 0x47, 0x7c, 0x94, 0x9f, 0x5f, 0x48, 0x8d, 0x07,
	0xf8, 0xf2, 0x69, 0x5e, 0x05, 0x06, 0x84, 0x2a, 0xd4, 0x52, 0x14, 0x05, 0x19, 0xd2, 0x3e, 0x74,
	0x16, 0x42, 0x6c, 0xc9, 0x08, 0xfb, 0xf5, 0xe8, 0xfa, 0xb2, 0x10, 0x65, 0x2e, 0x38, 0xbe, 0x40,
	0x0e, 0x66, 0xbf, 0x38, 0xf6, 0x9c, 0x63, 0xdc, 0x53, 0xa1, 0xb1, 0x26, 0xf0, 0x64, 0x5f, 0xca,
	0x17, 0x39, 0xd7, 0xc5, 0x21, 0x38, 0x16, 0x25, 0x23, 0x2e, 0xb6, 0x6a, 0xcb, 0x55, 0x35, 0x7a,
	0x48, 0x26, 0x7e, 0xae, 0x36, 0x53, 0x57, 0xa7, 0x62, 0xf8, 0x44, 0xe9, 0x5f, 0xe4, 0xfc, 0x71,
	0x51, 0x90, 0x2e, 0x46, 0x40, 0x87, 0x08, 0x7a, 0x55, 0x38, 0x6c, 0x97, 0x3e, 0xea, 0xf5, 0x6c,
	0x2f, 0x57, 0x9c, 0x0c, 0x36, 0x5d, 0xf5, 0xdf, 0xe3, 0xf3, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff,
	0xd2, 0xdd, 0x01, 0x85, 0x8f, 0x0c, 0x00, 0x00,
}
