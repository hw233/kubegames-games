// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_zjh_s2c.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//发送给客户端所有消息协议封包，buff是具体的结构体内容，需要端对照相应的协议解析
type S2CMsg struct {
	MainCmd              int32    `protobuf:"varint,1,opt,name=mainCmd,proto3" json:"mainCmd"`
	SubCmd               int32    `protobuf:"varint,2,opt,name=subCmd,proto3" json:"subCmd"`
	Buff                 []byte   `protobuf:"bytes,3,opt,name=buff,proto3" json:"buff"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CMsg) Reset()         { *m = S2CMsg{} }
func (m *S2CMsg) String() string { return proto.CompactTextString(m) }
func (*S2CMsg) ProtoMessage()    {}
func (*S2CMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{0}
}

func (m *S2CMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CMsg.Unmarshal(m, b)
}
func (m *S2CMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CMsg.Marshal(b, m, deterministic)
}
func (m *S2CMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CMsg.Merge(m, src)
}
func (m *S2CMsg) XXX_Size() int {
	return xxx_messageInfo_S2CMsg.Size(m)
}
func (m *S2CMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2CMsg proto.InternalMessageInfo

func (m *S2CMsg) GetMainCmd() int32 {
	if m != nil {
		return m.MainCmd
	}
	return 0
}

func (m *S2CMsg) GetSubCmd() int32 {
	if m != nil {
		return m.SubCmd
	}
	return 0
}

func (m *S2CMsg) GetBuff() []byte {
	if m != nil {
		return m.Buff
	}
	return nil
}

type S2CSeeOtherCards struct {
	UserCards            []*S2CUserSeeCards `protobuf:"bytes,1,rep,name=userCards,proto3" json:"userCards"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2CSeeOtherCards) Reset()         { *m = S2CSeeOtherCards{} }
func (m *S2CSeeOtherCards) String() string { return proto.CompactTextString(m) }
func (*S2CSeeOtherCards) ProtoMessage()    {}
func (*S2CSeeOtherCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{1}
}

func (m *S2CSeeOtherCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CSeeOtherCards.Unmarshal(m, b)
}
func (m *S2CSeeOtherCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CSeeOtherCards.Marshal(b, m, deterministic)
}
func (m *S2CSeeOtherCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSeeOtherCards.Merge(m, src)
}
func (m *S2CSeeOtherCards) XXX_Size() int {
	return xxx_messageInfo_S2CSeeOtherCards.Size(m)
}
func (m *S2CSeeOtherCards) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSeeOtherCards.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSeeOtherCards proto.InternalMessageInfo

func (m *S2CSeeOtherCards) GetUserCards() []*S2CUserSeeCards {
	if m != nil {
		return m.UserCards
	}
	return nil
}

type S2CUid struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUid) Reset()         { *m = S2CUid{} }
func (m *S2CUid) String() string { return proto.CompactTextString(m) }
func (*S2CUid) ProtoMessage()    {}
func (*S2CUid) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{2}
}

func (m *S2CUid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUid.Unmarshal(m, b)
}
func (m *S2CUid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUid.Marshal(b, m, deterministic)
}
func (m *S2CUid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUid.Merge(m, src)
}
func (m *S2CUid) XXX_Size() int {
	return xxx_messageInfo_S2CUid.Size(m)
}
func (m *S2CUid) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUid.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUid proto.InternalMessageInfo

func (m *S2CUid) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

//房间数组
type S2CRoomInfoArr struct {
	RoomArr              []*S2CRoomInfo `protobuf:"bytes,1,rep,name=roomArr,proto3" json:"roomArr"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CRoomInfoArr) Reset()         { *m = S2CRoomInfoArr{} }
func (m *S2CRoomInfoArr) String() string { return proto.CompactTextString(m) }
func (*S2CRoomInfoArr) ProtoMessage()    {}
func (*S2CRoomInfoArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{3}
}

func (m *S2CRoomInfoArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRoomInfoArr.Unmarshal(m, b)
}
func (m *S2CRoomInfoArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRoomInfoArr.Marshal(b, m, deterministic)
}
func (m *S2CRoomInfoArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRoomInfoArr.Merge(m, src)
}
func (m *S2CRoomInfoArr) XXX_Size() int {
	return xxx_messageInfo_S2CRoomInfoArr.Size(m)
}
func (m *S2CRoomInfoArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRoomInfoArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRoomInfoArr proto.InternalMessageInfo

func (m *S2CRoomInfoArr) GetRoomArr() []*S2CRoomInfo {
	if m != nil {
		return m.RoomArr
	}
	return nil
}

//房间信息
type S2CRoomInfo struct {
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level"`
	MinLimit             int64    `protobuf:"varint,2,opt,name=minLimit,proto3" json:"minLimit"`
	MinAction            int64    `protobuf:"varint,3,opt,name=minAction,proto3" json:"minAction"`
	Tax                  int64    `protobuf:"varint,4,opt,name=tax,proto3" json:"tax"`
	MaxAllIn             int64    `protobuf:"varint,5,opt,name=maxAllIn,proto3" json:"maxAllIn"`
	Id                   int32    `protobuf:"varint,6,opt,name=id,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRoomInfo) Reset()         { *m = S2CRoomInfo{} }
func (m *S2CRoomInfo) String() string { return proto.CompactTextString(m) }
func (*S2CRoomInfo) ProtoMessage()    {}
func (*S2CRoomInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{4}
}

func (m *S2CRoomInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRoomInfo.Unmarshal(m, b)
}
func (m *S2CRoomInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRoomInfo.Marshal(b, m, deterministic)
}
func (m *S2CRoomInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRoomInfo.Merge(m, src)
}
func (m *S2CRoomInfo) XXX_Size() int {
	return xxx_messageInfo_S2CRoomInfo.Size(m)
}
func (m *S2CRoomInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRoomInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRoomInfo proto.InternalMessageInfo

func (m *S2CRoomInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *S2CRoomInfo) GetMinLimit() int64 {
	if m != nil {
		return m.MinLimit
	}
	return 0
}

func (m *S2CRoomInfo) GetMinAction() int64 {
	if m != nil {
		return m.MinAction
	}
	return 0
}

func (m *S2CRoomInfo) GetTax() int64 {
	if m != nil {
		return m.Tax
	}
	return 0
}

func (m *S2CRoomInfo) GetMaxAllIn() int64 {
	if m != nil {
		return m.MaxAllIn
	}
	return 0
}

func (m *S2CRoomInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//牌桌信息
type S2CTableInfo struct {
	CurStatus            int32            `protobuf:"varint,1,opt,name=curStatus,proto3" json:"curStatus"`
	Round                int32            `protobuf:"varint,2,opt,name=round,proto3" json:"round"`
	PoolAmount           int64            `protobuf:"varint,3,opt,name=poolAmount,proto3" json:"poolAmount"`
	TotalRound           int32            `protobuf:"varint,4,opt,name=totalRound,proto3" json:"totalRound"`
	MinAction            int64            `protobuf:"varint,5,opt,name=minAction,proto3" json:"minAction"`
	MaxAction            int64            `protobuf:"varint,6,opt,name=maxAction,proto3" json:"maxAction"`
	UserInfoArr          []*S2CUserInfo   `protobuf:"bytes,7,rep,name=userInfoArr,proto3" json:"userInfoArr"`
	TriggerTime          int32            `protobuf:"varint,8,opt,name=triggerTime,proto3" json:"triggerTime"`
	TriggerEvent         string           `protobuf:"bytes,9,opt,name=triggerEvent,proto3" json:"triggerEvent"`
	CurUserInfo          *S2CUserInfo     `protobuf:"bytes,10,opt,name=curUserInfo,proto3" json:"curUserInfo"`
	Banker               *S2CUserInfo     `protobuf:"bytes,11,opt,name=banker,proto3" json:"banker"`
	RaiseAmount          []int64          `protobuf:"varint,12,rep,packed,name=raiseAmount,proto3" json:"raiseAmount"`
	Level                int32            `protobuf:"varint,13,opt,name=level,proto3" json:"level"`
	LeftActionTime       int32            `protobuf:"varint,14,opt,name=leftActionTime,proto3" json:"leftActionTime"`
	RoomId               int64            `protobuf:"varint,15,opt,name=roomId,proto3" json:"roomId"`
	IsSawCards           bool             `protobuf:"varint,16,opt,name=isSawCards,proto3" json:"isSawCards"`
	UserCards            *S2CUserSeeCards `protobuf:"bytes,17,opt,name=userCards,proto3" json:"userCards"`
	Limit                int64            `protobuf:"varint,18,opt,name=limit,proto3" json:"limit"`
	IsAllIn              bool             `protobuf:"varint,19,opt,name=isAllIn,proto3" json:"isAllIn"`
	IsActioned           bool             `protobuf:"varint,20,opt,name=isActioned,proto3" json:"isActioned"`
	UserStatus           int32            `protobuf:"varint,21,opt,name=user_status,json=userStatus,proto3" json:"user_status"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CTableInfo) Reset()         { *m = S2CTableInfo{} }
func (m *S2CTableInfo) String() string { return proto.CompactTextString(m) }
func (*S2CTableInfo) ProtoMessage()    {}
func (*S2CTableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{5}
}

func (m *S2CTableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CTableInfo.Unmarshal(m, b)
}
func (m *S2CTableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CTableInfo.Marshal(b, m, deterministic)
}
func (m *S2CTableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CTableInfo.Merge(m, src)
}
func (m *S2CTableInfo) XXX_Size() int {
	return xxx_messageInfo_S2CTableInfo.Size(m)
}
func (m *S2CTableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CTableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CTableInfo proto.InternalMessageInfo

func (m *S2CTableInfo) GetCurStatus() int32 {
	if m != nil {
		return m.CurStatus
	}
	return 0
}

func (m *S2CTableInfo) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *S2CTableInfo) GetPoolAmount() int64 {
	if m != nil {
		return m.PoolAmount
	}
	return 0
}

func (m *S2CTableInfo) GetTotalRound() int32 {
	if m != nil {
		return m.TotalRound
	}
	return 0
}

func (m *S2CTableInfo) GetMinAction() int64 {
	if m != nil {
		return m.MinAction
	}
	return 0
}

func (m *S2CTableInfo) GetMaxAction() int64 {
	if m != nil {
		return m.MaxAction
	}
	return 0
}

func (m *S2CTableInfo) GetUserInfoArr() []*S2CUserInfo {
	if m != nil {
		return m.UserInfoArr
	}
	return nil
}

func (m *S2CTableInfo) GetTriggerTime() int32 {
	if m != nil {
		return m.TriggerTime
	}
	return 0
}

func (m *S2CTableInfo) GetTriggerEvent() string {
	if m != nil {
		return m.TriggerEvent
	}
	return ""
}

func (m *S2CTableInfo) GetCurUserInfo() *S2CUserInfo {
	if m != nil {
		return m.CurUserInfo
	}
	return nil
}

func (m *S2CTableInfo) GetBanker() *S2CUserInfo {
	if m != nil {
		return m.Banker
	}
	return nil
}

func (m *S2CTableInfo) GetRaiseAmount() []int64 {
	if m != nil {
		return m.RaiseAmount
	}
	return nil
}

func (m *S2CTableInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CTableInfo) GetLeftActionTime() int32 {
	if m != nil {
		return m.LeftActionTime
	}
	return 0
}

func (m *S2CTableInfo) GetRoomId() int64 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *S2CTableInfo) GetIsSawCards() bool {
	if m != nil {
		return m.IsSawCards
	}
	return false
}

func (m *S2CTableInfo) GetUserCards() *S2CUserSeeCards {
	if m != nil {
		return m.UserCards
	}
	return nil
}

func (m *S2CTableInfo) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *S2CTableInfo) GetIsAllIn() bool {
	if m != nil {
		return m.IsAllIn
	}
	return false
}

func (m *S2CTableInfo) GetIsActioned() bool {
	if m != nil {
		return m.IsActioned
	}
	return false
}

func (m *S2CTableInfo) GetUserStatus() int32 {
	if m != nil {
		return m.UserStatus
	}
	return 0
}

//比牌结果
type S2CCompareRes struct {
	WinId                int64    `protobuf:"varint,1,opt,name=winId,proto3" json:"winId"`
	LoseIds              []int64  `protobuf:"varint,2,rep,packed,name=loseIds,proto3" json:"loseIds"`
	FirstAmount          int64    `protobuf:"varint,3,opt,name=firstAmount,proto3" json:"firstAmount"`
	FirstId              int64    `protobuf:"varint,4,opt,name=firstId,proto3" json:"firstId"`
	IsSystem             bool     `protobuf:"varint,5,opt,name=isSystem,proto3" json:"isSystem"`
	ComparedId           int64    `protobuf:"varint,6,opt,name=comparedId,proto3" json:"comparedId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CCompareRes) Reset()         { *m = S2CCompareRes{} }
func (m *S2CCompareRes) String() string { return proto.CompactTextString(m) }
func (*S2CCompareRes) ProtoMessage()    {}
func (*S2CCompareRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{6}
}

func (m *S2CCompareRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CCompareRes.Unmarshal(m, b)
}
func (m *S2CCompareRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CCompareRes.Marshal(b, m, deterministic)
}
func (m *S2CCompareRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCompareRes.Merge(m, src)
}
func (m *S2CCompareRes) XXX_Size() int {
	return xxx_messageInfo_S2CCompareRes.Size(m)
}
func (m *S2CCompareRes) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCompareRes.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCompareRes proto.InternalMessageInfo

func (m *S2CCompareRes) GetWinId() int64 {
	if m != nil {
		return m.WinId
	}
	return 0
}

func (m *S2CCompareRes) GetLoseIds() []int64 {
	if m != nil {
		return m.LoseIds
	}
	return nil
}

func (m *S2CCompareRes) GetFirstAmount() int64 {
	if m != nil {
		return m.FirstAmount
	}
	return 0
}

func (m *S2CCompareRes) GetFirstId() int64 {
	if m != nil {
		return m.FirstId
	}
	return 0
}

func (m *S2CCompareRes) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

func (m *S2CCompareRes) GetComparedId() int64 {
	if m != nil {
		return m.ComparedId
	}
	return 0
}

//用户信息
type S2CUserInfo struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`
	Ticker               int64    `protobuf:"varint,3,opt,name=ticker,proto3" json:"ticker"`
	Head                 string   `protobuf:"bytes,4,opt,name=head,proto3" json:"head"`
	Amount               int64    `protobuf:"varint,5,opt,name=amount,proto3" json:"amount"`
	CurActionAmount      int64    `protobuf:"varint,6,opt,name=curActionAmount,proto3" json:"curActionAmount"`
	ChairId              int32    `protobuf:"varint,7,opt,name=chairId,proto3" json:"chairId"`
	CurRaiseAmount       int64    `protobuf:"varint,8,opt,name=curRaiseAmount,proto3" json:"curRaiseAmount"`
	CurStatus            int32    `protobuf:"varint,9,opt,name=curStatus,proto3" json:"curStatus"`
	FollowAmount         int64    `protobuf:"varint,10,opt,name=followAmount,proto3" json:"followAmount"`
	AllInAmount          int64    `protobuf:"varint,11,opt,name=allInAmount,proto3" json:"allInAmount"`
	IsLastRoundFirstUid  bool     `protobuf:"varint,12,opt,name=isLastRoundFirstUid,proto3" json:"isLastRoundFirstUid"`
	Sex                  int32    `protobuf:"varint,13,opt,name=sex,proto3" json:"sex"`
	IsSawCard            bool     `protobuf:"varint,14,opt,name=isSawCard,proto3" json:"isSawCard"`
	IsFollowAllTheWay    bool     `protobuf:"varint,15,opt,name=isFollowAllTheWay,proto3" json:"isFollowAllTheWay"`
	Ip                   string   `protobuf:"bytes,16,opt,name=ip,proto3" json:"ip"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserInfo) Reset()         { *m = S2CUserInfo{} }
func (m *S2CUserInfo) String() string { return proto.CompactTextString(m) }
func (*S2CUserInfo) ProtoMessage()    {}
func (*S2CUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{7}
}

func (m *S2CUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserInfo.Unmarshal(m, b)
}
func (m *S2CUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserInfo.Marshal(b, m, deterministic)
}
func (m *S2CUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserInfo.Merge(m, src)
}
func (m *S2CUserInfo) XXX_Size() int {
	return xxx_messageInfo_S2CUserInfo.Size(m)
}
func (m *S2CUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserInfo proto.InternalMessageInfo

func (m *S2CUserInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CUserInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *S2CUserInfo) GetTicker() int64 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

func (m *S2CUserInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *S2CUserInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CUserInfo) GetCurActionAmount() int64 {
	if m != nil {
		return m.CurActionAmount
	}
	return 0
}

func (m *S2CUserInfo) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *S2CUserInfo) GetCurRaiseAmount() int64 {
	if m != nil {
		return m.CurRaiseAmount
	}
	return 0
}

func (m *S2CUserInfo) GetCurStatus() int32 {
	if m != nil {
		return m.CurStatus
	}
	return 0
}

func (m *S2CUserInfo) GetFollowAmount() int64 {
	if m != nil {
		return m.FollowAmount
	}
	return 0
}

func (m *S2CUserInfo) GetAllInAmount() int64 {
	if m != nil {
		return m.AllInAmount
	}
	return 0
}

func (m *S2CUserInfo) GetIsLastRoundFirstUid() bool {
	if m != nil {
		return m.IsLastRoundFirstUid
	}
	return false
}

func (m *S2CUserInfo) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *S2CUserInfo) GetIsSawCard() bool {
	if m != nil {
		return m.IsSawCard
	}
	return false
}

func (m *S2CUserInfo) GetIsFollowAllTheWay() bool {
	if m != nil {
		return m.IsFollowAllTheWay
	}
	return false
}

func (m *S2CUserInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type S2CUserInfoArr struct {
	UserInfoArr          []*S2CUserInfo `protobuf:"bytes,1,rep,name=userInfoArr,proto3" json:"userInfoArr"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CUserInfoArr) Reset()         { *m = S2CUserInfoArr{} }
func (m *S2CUserInfoArr) String() string { return proto.CompactTextString(m) }
func (*S2CUserInfoArr) ProtoMessage()    {}
func (*S2CUserInfoArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{8}
}

func (m *S2CUserInfoArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserInfoArr.Unmarshal(m, b)
}
func (m *S2CUserInfoArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserInfoArr.Marshal(b, m, deterministic)
}
func (m *S2CUserInfoArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserInfoArr.Merge(m, src)
}
func (m *S2CUserInfoArr) XXX_Size() int {
	return xxx_messageInfo_S2CUserInfoArr.Size(m)
}
func (m *S2CUserInfoArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserInfoArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserInfoArr proto.InternalMessageInfo

func (m *S2CUserInfoArr) GetUserInfoArr() []*S2CUserInfo {
	if m != nil {
		return m.UserInfoArr
	}
	return nil
}

//用户发言的内容
type S2CUserActionInfo struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Option               string   `protobuf:"bytes,2,opt,name=option,proto3" json:"option"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	UserName             string   `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName"`
	CurAmount            int64    `protobuf:"varint,5,opt,name=curAmount,proto3" json:"curAmount"`
	PoolAmount           int64    `protobuf:"varint,6,opt,name=poolAmount,proto3" json:"poolAmount"`
	MinAction            int64    `protobuf:"varint,7,opt,name=minAction,proto3" json:"minAction"`
	Score                int64    `protobuf:"varint,8,opt,name=score,proto3" json:"score"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserActionInfo) Reset()         { *m = S2CUserActionInfo{} }
func (m *S2CUserActionInfo) String() string { return proto.CompactTextString(m) }
func (*S2CUserActionInfo) ProtoMessage()    {}
func (*S2CUserActionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{9}
}

func (m *S2CUserActionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserActionInfo.Unmarshal(m, b)
}
func (m *S2CUserActionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserActionInfo.Marshal(b, m, deterministic)
}
func (m *S2CUserActionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserActionInfo.Merge(m, src)
}
func (m *S2CUserActionInfo) XXX_Size() int {
	return xxx_messageInfo_S2CUserActionInfo.Size(m)
}
func (m *S2CUserActionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserActionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserActionInfo proto.InternalMessageInfo

func (m *S2CUserActionInfo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CUserActionInfo) GetOption() string {
	if m != nil {
		return m.Option
	}
	return ""
}

func (m *S2CUserActionInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CUserActionInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *S2CUserActionInfo) GetCurAmount() int64 {
	if m != nil {
		return m.CurAmount
	}
	return 0
}

func (m *S2CUserActionInfo) GetPoolAmount() int64 {
	if m != nil {
		return m.PoolAmount
	}
	return 0
}

func (m *S2CUserActionInfo) GetMinAction() int64 {
	if m != nil {
		return m.MinAction
	}
	return 0
}

func (m *S2CUserActionInfo) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

//玩家看牌之后返回的结果
type S2CUserSeeCards struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Cards                []byte   `protobuf:"bytes,2,opt,name=cards,proto3" json:"cards"`
	CardType             int32    `protobuf:"varint,3,opt,name=card_type,json=cardType,proto3" json:"card_type"`
	ChairId              int32    `protobuf:"varint,4,opt,name=chairId,proto3" json:"chairId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserSeeCards) Reset()         { *m = S2CUserSeeCards{} }
func (m *S2CUserSeeCards) String() string { return proto.CompactTextString(m) }
func (*S2CUserSeeCards) ProtoMessage()    {}
func (*S2CUserSeeCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{10}
}

func (m *S2CUserSeeCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserSeeCards.Unmarshal(m, b)
}
func (m *S2CUserSeeCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserSeeCards.Marshal(b, m, deterministic)
}
func (m *S2CUserSeeCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserSeeCards.Merge(m, src)
}
func (m *S2CUserSeeCards) XXX_Size() int {
	return xxx_messageInfo_S2CUserSeeCards.Size(m)
}
func (m *S2CUserSeeCards) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserSeeCards.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserSeeCards proto.InternalMessageInfo

func (m *S2CUserSeeCards) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CUserSeeCards) GetCards() []byte {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *S2CUserSeeCards) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *S2CUserSeeCards) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

//游戏结束，给所有玩家返回胜者和赢的金额
//返回玩家自己的、与自己比过牌的玩家的牌和牌型
type S2CEndGame struct {
	Winner               *S2CUserInfo       `protobuf:"bytes,1,opt,name=winner,proto3" json:"winner"`
	WinAmount            int64              `protobuf:"varint,2,opt,name=winAmount,proto3" json:"winAmount"`
	ComparedUserArr      []*S2CUserSeeCards `protobuf:"bytes,3,rep,name=comparedUserArr,proto3" json:"comparedUserArr"`
	LoserAmount          []*S2CUserAmount   `protobuf:"bytes,4,rep,name=loserAmount,proto3" json:"loserAmount"`
	AllUserAmount        []*S2CUserAmount   `protobuf:"bytes,5,rep,name=allUserAmount,proto3" json:"allUserAmount"`
	IsAutoCompare        bool               `protobuf:"varint,6,opt,name=isAutoCompare,proto3" json:"isAutoCompare"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *S2CEndGame) Reset()         { *m = S2CEndGame{} }
func (m *S2CEndGame) String() string { return proto.CompactTextString(m) }
func (*S2CEndGame) ProtoMessage()    {}
func (*S2CEndGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{11}
}

func (m *S2CEndGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CEndGame.Unmarshal(m, b)
}
func (m *S2CEndGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CEndGame.Marshal(b, m, deterministic)
}
func (m *S2CEndGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CEndGame.Merge(m, src)
}
func (m *S2CEndGame) XXX_Size() int {
	return xxx_messageInfo_S2CEndGame.Size(m)
}
func (m *S2CEndGame) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CEndGame.DiscardUnknown(m)
}

var xxx_messageInfo_S2CEndGame proto.InternalMessageInfo

func (m *S2CEndGame) GetWinner() *S2CUserInfo {
	if m != nil {
		return m.Winner
	}
	return nil
}

func (m *S2CEndGame) GetWinAmount() int64 {
	if m != nil {
		return m.WinAmount
	}
	return 0
}

func (m *S2CEndGame) GetComparedUserArr() []*S2CUserSeeCards {
	if m != nil {
		return m.ComparedUserArr
	}
	return nil
}

func (m *S2CEndGame) GetLoserAmount() []*S2CUserAmount {
	if m != nil {
		return m.LoserAmount
	}
	return nil
}

func (m *S2CEndGame) GetAllUserAmount() []*S2CUserAmount {
	if m != nil {
		return m.AllUserAmount
	}
	return nil
}

func (m *S2CEndGame) GetIsAutoCompare() bool {
	if m != nil {
		return m.IsAutoCompare
	}
	return false
}

type S2CUserAmount struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	LoseReason           int32    `protobuf:"varint,3,opt,name=loseReason,proto3" json:"loseReason"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserAmount) Reset()         { *m = S2CUserAmount{} }
func (m *S2CUserAmount) String() string { return proto.CompactTextString(m) }
func (*S2CUserAmount) ProtoMessage()    {}
func (*S2CUserAmount) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{12}
}

func (m *S2CUserAmount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserAmount.Unmarshal(m, b)
}
func (m *S2CUserAmount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserAmount.Marshal(b, m, deterministic)
}
func (m *S2CUserAmount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserAmount.Merge(m, src)
}
func (m *S2CUserAmount) XXX_Size() int {
	return xxx_messageInfo_S2CUserAmount.Size(m)
}
func (m *S2CUserAmount) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserAmount.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserAmount proto.InternalMessageInfo

func (m *S2CUserAmount) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CUserAmount) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CUserAmount) GetLoseReason() int32 {
	if m != nil {
		return m.LoseReason
	}
	return 0
}

//倒计时
type S2CTickerStart struct {
	Ticker               int32    `protobuf:"varint,1,opt,name=ticker,proto3" json:"ticker"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CTickerStart) Reset()         { *m = S2CTickerStart{} }
func (m *S2CTickerStart) String() string { return proto.CompactTextString(m) }
func (*S2CTickerStart) ProtoMessage()    {}
func (*S2CTickerStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{13}
}

func (m *S2CTickerStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CTickerStart.Unmarshal(m, b)
}
func (m *S2CTickerStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CTickerStart.Marshal(b, m, deterministic)
}
func (m *S2CTickerStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CTickerStart.Merge(m, src)
}
func (m *S2CTickerStart) XXX_Size() int {
	return xxx_messageInfo_S2CTickerStart.Size(m)
}
func (m *S2CTickerStart) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CTickerStart.DiscardUnknown(m)
}

var xxx_messageInfo_S2CTickerStart proto.InternalMessageInfo

func (m *S2CTickerStart) GetTicker() int32 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

//玩家发起比牌通知其他人
type S2CPubCompare struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CPubCompare) Reset()         { *m = S2CPubCompare{} }
func (m *S2CPubCompare) String() string { return proto.CompactTextString(m) }
func (*S2CPubCompare) ProtoMessage()    {}
func (*S2CPubCompare) Descriptor() ([]byte, []int) {
	return fileDescriptor_99f35a235abcc0e9, []int{14}
}

func (m *S2CPubCompare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CPubCompare.Unmarshal(m, b)
}
func (m *S2CPubCompare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CPubCompare.Marshal(b, m, deterministic)
}
func (m *S2CPubCompare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CPubCompare.Merge(m, src)
}
func (m *S2CPubCompare) XXX_Size() int {
	return xxx_messageInfo_S2CPubCompare.Size(m)
}
func (m *S2CPubCompare) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CPubCompare.DiscardUnknown(m)
}

var xxx_messageInfo_S2CPubCompare proto.InternalMessageInfo

func (m *S2CPubCompare) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterType((*S2CMsg)(nil), "msg.S2CMsg")
	proto.RegisterType((*S2CSeeOtherCards)(nil), "msg.S2CSeeOtherCards")
	proto.RegisterType((*S2CUid)(nil), "msg.S2CUid")
	proto.RegisterType((*S2CRoomInfoArr)(nil), "msg.S2CRoomInfoArr")
	proto.RegisterType((*S2CRoomInfo)(nil), "msg.S2CRoomInfo")
	proto.RegisterType((*S2CTableInfo)(nil), "msg.S2CTableInfo")
	proto.RegisterType((*S2CCompareRes)(nil), "msg.S2CCompareRes")
	proto.RegisterType((*S2CUserInfo)(nil), "msg.S2CUserInfo")
	proto.RegisterType((*S2CUserInfoArr)(nil), "msg.S2CUserInfoArr")
	proto.RegisterType((*S2CUserActionInfo)(nil), "msg.S2CUserActionInfo")
	proto.RegisterType((*S2CUserSeeCards)(nil), "msg.S2CUserSeeCards")
	proto.RegisterType((*S2CEndGame)(nil), "msg.S2CEndGame")
	proto.RegisterType((*S2CUserAmount)(nil), "msg.S2CUserAmount")
	proto.RegisterType((*S2CTickerStart)(nil), "msg.S2CTickerStart")
	proto.RegisterType((*S2CPubCompare)(nil), "msg.S2CPubCompare")
}

func init() { proto.RegisterFile("game_zjh_s2c.proto", fileDescriptor_99f35a235abcc0e9) }

var fileDescriptor_99f35a235abcc0e9 = []byte{
	// 1114 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdb, 0x6e, 0x2b, 0x35,
	0x14, 0x55, 0xae, 0x4d, 0x76, 0xd2, 0x9b, 0x4f, 0xa9, 0x46, 0x87, 0xa3, 0x43, 0x18, 0x21, 0x14,
	0x21, 0x54, 0xa1, 0xc0, 0x03, 0x0f, 0x08, 0x29, 0x0a, 0xa7, 0x28, 0xd2, 0xe1, 0x80, 0x3c, 0xad,
	0x78, 0xac, 0x9c, 0x19, 0x27, 0x35, 0xcc, 0x25, 0xb2, 0x3d, 0xbd, 0xf0, 0x2b, 0xfc, 0x01, 0x3f,
	0xc0, 0x87, 0xf0, 0x15, 0x7c, 0x00, 0xef, 0xc8, 0xdb, 0x9e, 0xc6, 0x33, 0x6d, 0x0f, 0xbc, 0xcd,
	0x5a, 0xdb, 0x97, 0x65, 0xef, 0xb5, 0xf7, 0x18, 0xc8, 0x86, 0x65, 0xfc, 0xea, 0xb7, 0x5f, 0xae,
	0xaf, 0xd4, 0x2c, 0x3e, 0xdb, 0xca, 0x42, 0x17, 0xa4, 0x93, 0xa9, 0x4d, 0xf8, 0x0e, 0xfa, 0xd1,
	0x6c, 0xf1, 0x83, 0xda, 0x90, 0x00, 0xf6, 0x32, 0x26, 0xf2, 0x45, 0x96, 0x04, 0xad, 0x49, 0x6b,
	0xda, 0xa3, 0x15, 0x24, 0xa7, 0xd0, 0x57, 0xe5, 0xca, 0x04, 0xda, 0x18, 0x70, 0x88, 0x10, 0xe8,
	0xae, 0xca, 0xf5, 0x3a, 0xe8, 0x4c, 0x5a, 0xd3, 0x31, 0xc5, 0xef, 0xf0, 0x1c, 0x8e, 0xa2, 0xd9,
	0x22, 0xe2, 0xfc, 0x47, 0x7d, 0xcd, 0xe5, 0x82, 0xc9, 0x44, 0x91, 0x19, 0x0c, 0x4b, 0xe5, 0x40,
	0xd0, 0x9a, 0x74, 0xa6, 0xa3, 0xd9, 0xc9, 0x59, 0xa6, 0x36, 0x67, 0xd1, 0x6c, 0x71, 0xa9, 0xb8,
	0x8c, 0x38, 0xc7, 0x18, 0xdd, 0x0d, 0x0b, 0x5f, 0xa2, 0xae, 0x4b, 0x91, 0x90, 0x23, 0xe8, 0x94,
	0xc2, 0x6a, 0xea, 0x50, 0xf3, 0x19, 0x7e, 0x03, 0x07, 0xd1, 0x6c, 0x41, 0x8b, 0x22, 0x5b, 0xe6,
	0xeb, 0x62, 0x2e, 0x25, 0xf9, 0x0c, 0xf6, 0x64, 0x51, 0x64, 0x73, 0x29, 0xdd, 0xfa, 0x47, 0xd5,
	0xfa, 0xd5, 0x28, 0x5a, 0x0d, 0x08, 0x7f, 0x6f, 0xc1, 0xc8, 0x0b, 0x90, 0x13, 0xe8, 0xa5, 0xfc,
	0x86, 0xa7, 0xb8, 0xc3, 0x90, 0x5a, 0x40, 0x5e, 0xc2, 0x20, 0x13, 0xf9, 0x5b, 0x91, 0x09, 0x8d,
	0xa7, 0xee, 0xd0, 0x07, 0x4c, 0x5e, 0xc1, 0x30, 0x13, 0xf9, 0x3c, 0xd6, 0xa2, 0xc8, 0xf1, 0xf0,
	0x1d, 0xba, 0x23, 0x8c, 0x5e, 0xcd, 0xee, 0x82, 0xae, 0xd5, 0xab, 0xd9, 0x1d, 0xae, 0xc5, 0xee,
	0xe6, 0x69, 0xba, 0xcc, 0x83, 0x9e, 0x5b, 0xcb, 0x61, 0x72, 0x00, 0x6d, 0x91, 0x04, 0x7d, 0xbc,
	0xd7, 0xb6, 0x48, 0xc2, 0xbf, 0x7a, 0x30, 0x8e, 0x66, 0x8b, 0x0b, 0xb6, 0x4a, 0x39, 0xca, 0x7b,
	0x05, 0xc3, 0xb8, 0x94, 0x91, 0x66, 0xba, 0x54, 0x2e, 0x31, 0x3b, 0xc2, 0x88, 0x97, 0x45, 0x99,
	0x57, 0x99, 0xb1, 0x80, 0xbc, 0x06, 0xd8, 0x16, 0x45, 0x3a, 0xcf, 0x8a, 0x32, 0xd7, 0x4e, 0xa1,
	0xc7, 0x98, 0xb8, 0x2e, 0x34, 0x4b, 0x29, 0x4e, 0xed, 0xe2, 0x54, 0x8f, 0xa9, 0x1f, 0xb0, 0xd7,
	0x3c, 0xa0, 0x89, 0xb2, 0x3b, 0x17, 0xed, 0xbb, 0x68, 0x45, 0x90, 0x19, 0x8c, 0x4c, 0x16, 0x5d,
	0x66, 0x82, 0xbd, 0x7a, 0x3a, 0x2e, 0x5d, 0x88, 0xfa, 0x83, 0xc8, 0x04, 0x46, 0x5a, 0x8a, 0xcd,
	0x86, 0xcb, 0x0b, 0x91, 0xf1, 0x60, 0x80, 0x82, 0x7c, 0x8a, 0x84, 0x30, 0x76, 0xf0, 0xcd, 0x0d,
	0xcf, 0x75, 0x30, 0xc4, 0x5c, 0xd5, 0x38, 0xb3, 0x73, 0x5c, 0xca, 0x6a, 0x87, 0x00, 0x26, 0xad,
	0xa7, 0x77, 0xf6, 0x06, 0x91, 0x29, 0xf4, 0x57, 0x2c, 0xff, 0x95, 0xcb, 0x60, 0xf4, 0xcc, 0x70,
	0x17, 0x37, 0x1a, 0x25, 0x13, 0x8a, 0xbb, 0x4b, 0x1d, 0x4f, 0x3a, 0xd3, 0x0e, 0xf5, 0xa9, 0x9d,
	0x91, 0xf6, 0x6d, 0x2e, 0xac, 0x91, 0x3e, 0x85, 0x83, 0x94, 0xaf, 0xb5, 0xbd, 0x1d, 0x3c, 0xde,
	0x01, 0x86, 0x1b, 0xac, 0x29, 0x32, 0xe3, 0xd0, 0x65, 0x12, 0x1c, 0xe2, 0x95, 0x3a, 0x64, 0x72,
	0x25, 0x54, 0xc4, 0x6e, 0x6d, 0xf5, 0x1c, 0x4d, 0x5a, 0xd3, 0x01, 0xf5, 0x98, 0x7a, 0x71, 0x1d,
	0xe3, 0x21, 0xfe, 0xab, 0xb8, 0x50, 0x29, 0x3a, 0x9b, 0xe0, 0x56, 0x16, 0x98, 0x06, 0x20, 0x94,
	0x75, 0xe9, 0x0b, 0xdc, 0xa6, 0x82, 0x56, 0x83, 0xd5, 0xca, 0x93, 0xe0, 0xa4, 0xd2, 0x50, 0x31,
	0xe4, 0x23, 0x9b, 0xf3, 0x2b, 0x65, 0x5d, 0xfa, 0x81, 0x35, 0x94, 0xa1, 0xac, 0x4d, 0xc3, 0x3f,
	0x5b, 0xb0, 0x1f, 0xcd, 0x16, 0x8b, 0x22, 0xdb, 0x32, 0xc9, 0x29, 0x47, 0x09, 0xb7, 0x22, 0x5f,
	0x56, 0x75, 0x6d, 0x81, 0x91, 0x90, 0x16, 0x8a, 0x2f, 0x13, 0x15, 0xb4, 0xf1, 0x82, 0x2b, 0x68,
	0xae, 0x7f, 0x2d, 0xa4, 0xd2, 0x35, 0x4f, 0xfb, 0x94, 0x99, 0x8b, 0x70, 0x99, 0xb8, 0xda, 0xab,
	0xa0, 0xa9, 0x3f, 0xa1, 0xa2, 0x7b, 0xa5, 0x79, 0x86, 0x6e, 0x1e, 0xd0, 0x07, 0x6c, 0x8e, 0x16,
	0x5b, 0x55, 0xc9, 0x32, 0x71, 0x6e, 0xf6, 0x98, 0xf0, 0x9f, 0x0e, 0x76, 0x8b, 0x07, 0xc3, 0x9c,
	0x42, 0x1f, 0x9d, 0x5b, 0x09, 0x77, 0xc8, 0xec, 0x61, 0xbe, 0xde, 0xb1, 0x8c, 0x63, 0x2d, 0x0e,
	0xe9, 0x03, 0x36, 0x73, 0xb4, 0x88, 0x8d, 0xc9, 0xac, 0x6c, 0x87, 0x4c, 0xff, 0xbc, 0xe6, 0xcc,
	0xca, 0x1d, 0x52, 0xfc, 0x36, 0x63, 0x99, 0x3d, 0xa2, 0xad, 0x3b, 0x87, 0xc8, 0x14, 0x0e, 0xe3,
	0x52, 0xda, 0x1b, 0x77, 0x77, 0x60, 0xc5, 0x36, 0x69, 0x73, 0x0f, 0xf1, 0x35, 0x13, 0x46, 0xe2,
	0x9e, 0xed, 0xe3, 0x0e, 0x1a, 0x2b, 0xc6, 0xa5, 0xa4, 0x9e, 0x8b, 0x07, 0xb8, 0x44, 0x83, 0xad,
	0xb7, 0x9c, 0x61, 0xb3, 0xe5, 0x84, 0x30, 0x5e, 0x17, 0x69, 0x5a, 0xdc, 0xba, 0x35, 0x00, 0xd7,
	0xa8, 0x71, 0x26, 0x5b, 0xcc, 0x38, 0xc7, 0x0d, 0x19, 0xd9, 0x6c, 0x79, 0x14, 0xf9, 0x02, 0x5e,
	0x08, 0xf5, 0x96, 0x29, 0x8d, 0x1d, 0xe7, 0xdc, 0x64, 0xea, 0x52, 0x24, 0xc1, 0x18, 0xd3, 0xf3,
	0x54, 0xc8, 0xf4, 0x55, 0xc5, 0xef, 0x5c, 0x71, 0x99, 0x4f, 0xa3, 0xf3, 0xa1, 0x10, 0xb0, 0xaa,
	0x06, 0x74, 0x47, 0x90, 0xcf, 0xe1, 0x58, 0xa8, 0x73, 0xab, 0x2a, 0x4d, 0x2f, 0xae, 0xf9, 0xcf,
	0xec, 0x1e, 0x6b, 0x6b, 0x40, 0x1f, 0x07, 0xb0, 0x0f, 0x6f, 0xb1, 0xbc, 0x86, 0xb4, 0x2d, 0xb6,
	0xe1, 0x77, 0xf8, 0x8f, 0xb9, 0xf4, 0x9a, 0x54, 0xa3, 0xb1, 0xb5, 0xfe, 0x47, 0x63, 0x0b, 0xff,
	0x6e, 0xc1, 0xb1, 0x0b, 0xda, 0x1c, 0xbd, 0xd7, 0x43, 0xa7, 0xd0, 0x2f, 0xb6, 0xd8, 0x55, 0xad,
	0x83, 0x1c, 0xf2, 0x3c, 0xd1, 0xa9, 0x79, 0xc2, 0xf7, 0x5c, 0xb7, 0xe1, 0x39, 0x9b, 0xc3, 0xb9,
	0x6f, 0xa5, 0x1d, 0xd1, 0xf8, 0x41, 0xf4, 0x1f, 0xfd, 0x20, 0x6a, 0x3f, 0x80, 0xbd, 0xe6, 0x0f,
	0xe0, 0x04, 0x7a, 0x2a, 0x2e, 0x24, 0x77, 0xf6, 0xb1, 0x20, 0xbc, 0x81, 0xc3, 0x46, 0xcb, 0x79,
	0xf6, 0xa0, 0x27, 0xd0, 0x8b, 0xb1, 0x5f, 0xb5, 0xf1, 0xe5, 0x60, 0x01, 0xf9, 0x10, 0x86, 0xe6,
	0xe3, 0x4a, 0xdf, 0x6f, 0x39, 0x9e, 0xb4, 0x47, 0x07, 0x86, 0xb8, 0xb8, 0xdf, 0x72, 0xdf, 0xd5,
	0xdd, 0x9a, 0xab, 0xc3, 0x3f, 0xda, 0x00, 0xd1, 0x6c, 0xf1, 0x26, 0x4f, 0xbe, 0x37, 0x07, 0x9f,
	0x42, 0xff, 0x56, 0xe4, 0x39, 0x97, 0xb8, 0xe7, 0x93, 0x1d, 0xdd, 0xc6, 0xcd, 0x21, 0x6f, 0x45,
	0x65, 0x51, 0xfb, 0x8f, 0xdf, 0x11, 0xe4, 0x5b, 0x38, 0xac, 0xda, 0x00, 0xa6, 0x4f, 0x9a, 0xea,
	0x7d, 0xfe, 0xe9, 0xd2, 0x1c, 0x4c, 0xbe, 0x82, 0x91, 0xe9, 0x5d, 0x55, 0x0a, 0xba, 0x38, 0x97,
	0xf8, 0x73, 0x6d, 0x84, 0xfa, 0xc3, 0xc8, 0xd7, 0xb0, 0xcf, 0xd2, 0x74, 0x17, 0x0d, 0x7a, 0xcf,
	0xce, 0xab, 0x0f, 0x24, 0x9f, 0xc0, 0xbe, 0x50, 0xf3, 0x52, 0x17, 0xae, 0xc9, 0x62, 0x56, 0x07,
	0xb4, 0x4e, 0x86, 0x57, 0xd8, 0x87, 0xbd, 0x69, 0xef, 0xf1, 0x22, 0xf3, 0x6f, 0xa6, 0xf2, 0xdc,
	0x6b, 0x00, 0xa3, 0x97, 0x72, 0xa6, 0xdc, 0xe3, 0xa7, 0x47, 0x3d, 0x26, 0x9c, 0x62, 0xdd, 0x5c,
	0x60, 0x83, 0x8b, 0x34, 0x93, 0xda, 0xeb, 0x7e, 0xf6, 0xf5, 0xe2, 0x50, 0xf8, 0x31, 0x4a, 0xf9,
	0xa9, 0x5c, 0x39, 0x6d, 0x8f, 0x1f, 0x7a, 0xab, 0x3e, 0x3e, 0x54, 0xbf, 0xfc, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x87, 0x62, 0x9a, 0xb4, 0xbe, 0x0a, 0x00, 0x00,
}
