// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pai9.proto

package paigow

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 客户端到服务器发送消息的类型
type ReceiveMessageType int32

const (
	ReceiveMessageType_StartID        ReceiveMessageType = 0
	ReceiveMessageType_QiangZhuangReq ReceiveMessageType = 1
	ReceiveMessageType_BetMultiReq    ReceiveMessageType = 2
	ReceiveMessageType_TestReq        ReceiveMessageType = 3
)

var ReceiveMessageType_name = map[int32]string{
	0: "StartID",
	1: "QiangZhuangReq",
	2: "BetMultiReq",
	3: "TestReq",
}

var ReceiveMessageType_value = map[string]int32{
	"StartID":        0,
	"QiangZhuangReq": 1,
	"BetMultiReq":    2,
	"TestReq":        3,
}

func (x ReceiveMessageType) String() string {
	return proto.EnumName(ReceiveMessageType_name, int32(x))
}

func (ReceiveMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{0}
}

// 服务器发送给客户端的消息类型
type SendToClientMessageType int32

const (
	SendToClientMessageType_RestartID       SendToClientMessageType = 0
	SendToClientMessageType_ZhuangResp      SendToClientMessageType = 1
	SendToClientMessageType_PokerInfoResp   SendToClientMessageType = 2
	SendToClientMessageType_SettleAllResp   SendToClientMessageType = 3
	SendToClientMessageType_Status          SendToClientMessageType = 4
	SendToClientMessageType_SceneResp       SendToClientMessageType = 5
	SendToClientMessageType_UserListResp    SendToClientMessageType = 6
	SendToClientMessageType_QiangZhuangResp SendToClientMessageType = 7
	SendToClientMessageType_BetMultiResp    SendToClientMessageType = 8
	SendToClientMessageType_UserBetMulti    SendToClientMessageType = 9
	SendToClientMessageType_DealPokerInfo   SendToClientMessageType = 10
)

var SendToClientMessageType_name = map[int32]string{
	0:  "RestartID",
	1:  "ZhuangResp",
	2:  "PokerInfoResp",
	3:  "SettleAllResp",
	4:  "Status",
	5:  "SceneResp",
	6:  "UserListResp",
	7:  "QiangZhuangResp",
	8:  "BetMultiResp",
	9:  "UserBetMulti",
	10: "DealPokerInfo",
}

var SendToClientMessageType_value = map[string]int32{
	"RestartID":       0,
	"ZhuangResp":      1,
	"PokerInfoResp":   2,
	"SettleAllResp":   3,
	"Status":          4,
	"SceneResp":       5,
	"UserListResp":    6,
	"QiangZhuangResp": 7,
	"BetMultiResp":    8,
	"UserBetMulti":    9,
	"DealPokerInfo":   10,
}

func (x SendToClientMessageType) String() string {
	return proto.EnumName(SendToClientMessageType_name, int32(x))
}

func (SendToClientMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{1}
}

//游戏阶段
type GameStatus int32

const (
	GameStatus_StartStatus GameStatus = 0
	GameStatus_Shuffle     GameStatus = 7
	GameStatus_QiangZhuang GameStatus = 1
	GameStatus_SendZhuang  GameStatus = 2
	GameStatus_Bet         GameStatus = 3
	GameStatus_DealPoker   GameStatus = 4
	GameStatus_ShowPoker   GameStatus = 5
	GameStatus_SettleAll   GameStatus = 6
)

var GameStatus_name = map[int32]string{
	0: "StartStatus",
	7: "Shuffle",
	1: "QiangZhuang",
	2: "SendZhuang",
	3: "Bet",
	4: "DealPoker",
	5: "ShowPoker",
	6: "SettleAll",
}

var GameStatus_value = map[string]int32{
	"StartStatus": 0,
	"Shuffle":     7,
	"QiangZhuang": 1,
	"SendZhuang":  2,
	"Bet":         3,
	"DealPoker":   4,
	"ShowPoker":   5,
	"SettleAll":   6,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}

func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{2}
}

type PokerType int32

const (
	PokerType_Zero PokerType = 0
	// 至尊
	PokerType_ZhiZun PokerType = 31
	// 双天
	PokerType_ShuangTian PokerType = 30
	// 双地
	PokerType_ShuangDi PokerType = 29
	// 双人
	PokerType_ShuangRen PokerType = 28
	// 双鹅
	PokerType_ShuangE PokerType = 27
	// 双梅
	PokerType_ShuangMei PokerType = 26
	// 双长三
	PokerType_ShuangChangSan PokerType = 25
	// 双板凳
	PokerType_ShuangBanDeng PokerType = 24
	// 双斧头
	PokerType_ShuangFuTou PokerType = 23
	// 双红头
	PokerType_ShuangHongTou PokerType = 22
	// 双高脚
	PokerType_ShuangGaoJiao PokerType = 21
	// 双零霖
	PokerType_ShuangLingLin PokerType = 20
	// 杂九
	PokerType_ZaJiu PokerType = 19
	// 杂八
	PokerType_ZaBa PokerType = 18
	// 杂七
	PokerType_ZaQi PokerType = 17
	// 杂五
	PokerType_ZaWu PokerType = 16
	// 天王
	PokerType_TianWang PokerType = 15
	// 地王
	PokerType_DiWang PokerType = 14
	// 天杠
	PokerType_TianGang PokerType = 13
	// 地杠
	PokerType_DiGang PokerType = 12
	// 天高九
	PokerType_TianGaoJiu PokerType = 11
	// 地高九
	PokerType_DiGaoJiu PokerType = 10
)

var PokerType_name = map[int32]string{
	0:  "Zero",
	31: "ZhiZun",
	30: "ShuangTian",
	29: "ShuangDi",
	28: "ShuangRen",
	27: "ShuangE",
	26: "ShuangMei",
	25: "ShuangChangSan",
	24: "ShuangBanDeng",
	23: "ShuangFuTou",
	22: "ShuangHongTou",
	21: "ShuangGaoJiao",
	20: "ShuangLingLin",
	19: "ZaJiu",
	18: "ZaBa",
	17: "ZaQi",
	16: "ZaWu",
	15: "TianWang",
	14: "DiWang",
	13: "TianGang",
	12: "DiGang",
	11: "TianGaoJiu",
	10: "DiGaoJiu",
}

var PokerType_value = map[string]int32{
	"Zero":           0,
	"ZhiZun":         31,
	"ShuangTian":     30,
	"ShuangDi":       29,
	"ShuangRen":      28,
	"ShuangE":        27,
	"ShuangMei":      26,
	"ShuangChangSan": 25,
	"ShuangBanDeng":  24,
	"ShuangFuTou":    23,
	"ShuangHongTou":  22,
	"ShuangGaoJiao":  21,
	"ShuangLingLin":  20,
	"ZaJiu":          19,
	"ZaBa":           18,
	"ZaQi":           17,
	"ZaWu":           16,
	"TianWang":       15,
	"DiWang":         14,
	"TianGang":       13,
	"DiGang":         12,
	"TianGaoJiu":     11,
	"DiGaoJiu":       10,
}

func (x PokerType) String() string {
	return proto.EnumName(PokerType_name, int32(x))
}

func (PokerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{3}
}

type StatusMessage struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	StatusTime           int32    `protobuf:"varint,2,opt,name=StatusTime,proto3" json:"StatusTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusMessage) Reset()         { *m = StatusMessage{} }
func (m *StatusMessage) String() string { return proto.CompactTextString(m) }
func (*StatusMessage) ProtoMessage()    {}
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{0}
}

func (m *StatusMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMessage.Unmarshal(m, b)
}
func (m *StatusMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMessage.Marshal(b, m, deterministic)
}
func (m *StatusMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessage.Merge(m, src)
}
func (m *StatusMessage) XXX_Size() int {
	return xxx_messageInfo_StatusMessage.Size(m)
}
func (m *StatusMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessage proto.InternalMessageInfo

func (m *StatusMessage) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StatusMessage) GetStatusTime() int32 {
	if m != nil {
		return m.StatusTime
	}
	return 0
}

// 抢庄倍数消息
type QiangZhuangReqMsg struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QiangZhuangReqMsg) Reset()         { *m = QiangZhuangReqMsg{} }
func (m *QiangZhuangReqMsg) String() string { return proto.CompactTextString(m) }
func (*QiangZhuangReqMsg) ProtoMessage()    {}
func (*QiangZhuangReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{1}
}

func (m *QiangZhuangReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QiangZhuangReqMsg.Unmarshal(m, b)
}
func (m *QiangZhuangReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QiangZhuangReqMsg.Marshal(b, m, deterministic)
}
func (m *QiangZhuangReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QiangZhuangReqMsg.Merge(m, src)
}
func (m *QiangZhuangReqMsg) XXX_Size() int {
	return xxx_messageInfo_QiangZhuangReqMsg.Size(m)
}
func (m *QiangZhuangReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_QiangZhuangReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_QiangZhuangReqMsg proto.InternalMessageInfo

func (m *QiangZhuangReqMsg) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *QiangZhuangReqMsg) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 下注倍数消息
type BetMultiReqMsg struct {
	UserID               int32    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetMultiReqMsg) Reset()         { *m = BetMultiReqMsg{} }
func (m *BetMultiReqMsg) String() string { return proto.CompactTextString(m) }
func (*BetMultiReqMsg) ProtoMessage()    {}
func (*BetMultiReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{2}
}

func (m *BetMultiReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetMultiReqMsg.Unmarshal(m, b)
}
func (m *BetMultiReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetMultiReqMsg.Marshal(b, m, deterministic)
}
func (m *BetMultiReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetMultiReqMsg.Merge(m, src)
}
func (m *BetMultiReqMsg) XXX_Size() int {
	return xxx_messageInfo_BetMultiReqMsg.Size(m)
}
func (m *BetMultiReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_BetMultiReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_BetMultiReqMsg proto.InternalMessageInfo

func (m *BetMultiReqMsg) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *BetMultiReqMsg) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ZhuangRespMsg struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	ZhuangWait           []int32  `protobuf:"varint,2,rep,packed,name=ZhuangWait,proto3" json:"ZhuangWait,omitempty"`
	QiangMulti           int32    `protobuf:"varint,3,opt,name=QiangMulti,proto3" json:"QiangMulti,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZhuangRespMsg) Reset()         { *m = ZhuangRespMsg{} }
func (m *ZhuangRespMsg) String() string { return proto.CompactTextString(m) }
func (*ZhuangRespMsg) ProtoMessage()    {}
func (*ZhuangRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{3}
}

func (m *ZhuangRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZhuangRespMsg.Unmarshal(m, b)
}
func (m *ZhuangRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZhuangRespMsg.Marshal(b, m, deterministic)
}
func (m *ZhuangRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZhuangRespMsg.Merge(m, src)
}
func (m *ZhuangRespMsg) XXX_Size() int {
	return xxx_messageInfo_ZhuangRespMsg.Size(m)
}
func (m *ZhuangRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ZhuangRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ZhuangRespMsg proto.InternalMessageInfo

func (m *ZhuangRespMsg) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *ZhuangRespMsg) GetZhuangWait() []int32 {
	if m != nil {
		return m.ZhuangWait
	}
	return nil
}

func (m *ZhuangRespMsg) GetQiangMulti() int32 {
	if m != nil {
		return m.QiangMulti
	}
	return 0
}

// 随机骰子值
type DiceValRespMsg struct {
	First                int32    `protobuf:"varint,1,opt,name=First,proto3" json:"First,omitempty"`
	Second               int32    `protobuf:"varint,2,opt,name=Second,proto3" json:"Second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiceValRespMsg) Reset()         { *m = DiceValRespMsg{} }
func (m *DiceValRespMsg) String() string { return proto.CompactTextString(m) }
func (*DiceValRespMsg) ProtoMessage()    {}
func (*DiceValRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{4}
}

func (m *DiceValRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiceValRespMsg.Unmarshal(m, b)
}
func (m *DiceValRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiceValRespMsg.Marshal(b, m, deterministic)
}
func (m *DiceValRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiceValRespMsg.Merge(m, src)
}
func (m *DiceValRespMsg) XXX_Size() int {
	return xxx_messageInfo_DiceValRespMsg.Size(m)
}
func (m *DiceValRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DiceValRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DiceValRespMsg proto.InternalMessageInfo

func (m *DiceValRespMsg) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *DiceValRespMsg) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type DealPokerMsg struct {
	DiceVal              *DiceValRespMsg `protobuf:"bytes,1,opt,name=DiceVal,proto3" json:"DiceVal,omitempty"`
	DealFirstChairID     int32           `protobuf:"varint,3,opt,name=DealFirstChairID,proto3" json:"DealFirstChairID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DealPokerMsg) Reset()         { *m = DealPokerMsg{} }
func (m *DealPokerMsg) String() string { return proto.CompactTextString(m) }
func (*DealPokerMsg) ProtoMessage()    {}
func (*DealPokerMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{5}
}

func (m *DealPokerMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealPokerMsg.Unmarshal(m, b)
}
func (m *DealPokerMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealPokerMsg.Marshal(b, m, deterministic)
}
func (m *DealPokerMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealPokerMsg.Merge(m, src)
}
func (m *DealPokerMsg) XXX_Size() int {
	return xxx_messageInfo_DealPokerMsg.Size(m)
}
func (m *DealPokerMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DealPokerMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DealPokerMsg proto.InternalMessageInfo

func (m *DealPokerMsg) GetDiceVal() *DiceValRespMsg {
	if m != nil {
		return m.DiceVal
	}
	return nil
}

func (m *DealPokerMsg) GetDealFirstChairID() int32 {
	if m != nil {
		return m.DealFirstChairID
	}
	return 0
}

// 发牌信息
type PokerInfoRespMsg struct {
	Info                 []*PokerInfoRespDetail `protobuf:"bytes,2,rep,name=Info,proto3" json:"Info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PokerInfoRespMsg) Reset()         { *m = PokerInfoRespMsg{} }
func (m *PokerInfoRespMsg) String() string { return proto.CompactTextString(m) }
func (*PokerInfoRespMsg) ProtoMessage()    {}
func (*PokerInfoRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{6}
}

func (m *PokerInfoRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerInfoRespMsg.Unmarshal(m, b)
}
func (m *PokerInfoRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerInfoRespMsg.Marshal(b, m, deterministic)
}
func (m *PokerInfoRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerInfoRespMsg.Merge(m, src)
}
func (m *PokerInfoRespMsg) XXX_Size() int {
	return xxx_messageInfo_PokerInfoRespMsg.Size(m)
}
func (m *PokerInfoRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerInfoRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PokerInfoRespMsg proto.InternalMessageInfo

func (m *PokerInfoRespMsg) GetInfo() []*PokerInfoRespDetail {
	if m != nil {
		return m.Info
	}
	return nil
}

type PokerInfoRespDetail struct {
	ChairID              int32     `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Poker                []*Poker  `protobuf:"bytes,2,rep,name=Poker,proto3" json:"Poker,omitempty"`
	PokerVal             PokerType `protobuf:"varint,3,opt,name=PokerVal,proto3,enum=paigow.PokerType" json:"PokerVal,omitempty"`
	GoldChange           int64     `protobuf:"varint,4,opt,name=GoldChange,proto3" json:"GoldChange,omitempty"`
	GoldNow              int64     `protobuf:"varint,5,opt,name=GoldNow,proto3" json:"GoldNow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PokerInfoRespDetail) Reset()         { *m = PokerInfoRespDetail{} }
func (m *PokerInfoRespDetail) String() string { return proto.CompactTextString(m) }
func (*PokerInfoRespDetail) ProtoMessage()    {}
func (*PokerInfoRespDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{7}
}

func (m *PokerInfoRespDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerInfoRespDetail.Unmarshal(m, b)
}
func (m *PokerInfoRespDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerInfoRespDetail.Marshal(b, m, deterministic)
}
func (m *PokerInfoRespDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerInfoRespDetail.Merge(m, src)
}
func (m *PokerInfoRespDetail) XXX_Size() int {
	return xxx_messageInfo_PokerInfoRespDetail.Size(m)
}
func (m *PokerInfoRespDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerInfoRespDetail.DiscardUnknown(m)
}

var xxx_messageInfo_PokerInfoRespDetail proto.InternalMessageInfo

func (m *PokerInfoRespDetail) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *PokerInfoRespDetail) GetPoker() []*Poker {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *PokerInfoRespDetail) GetPokerVal() PokerType {
	if m != nil {
		return m.PokerVal
	}
	return PokerType_Zero
}

func (m *PokerInfoRespDetail) GetGoldChange() int64 {
	if m != nil {
		return m.GoldChange
	}
	return 0
}

func (m *PokerInfoRespDetail) GetGoldNow() int64 {
	if m != nil {
		return m.GoldNow
	}
	return 0
}

//  一轮结束的总结算
type SettleAllRespMsg struct {
	Info                 []*SettleAllRespDetail `protobuf:"bytes,1,rep,name=Info,proto3" json:"Info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SettleAllRespMsg) Reset()         { *m = SettleAllRespMsg{} }
func (m *SettleAllRespMsg) String() string { return proto.CompactTextString(m) }
func (*SettleAllRespMsg) ProtoMessage()    {}
func (*SettleAllRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{8}
}

func (m *SettleAllRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleAllRespMsg.Unmarshal(m, b)
}
func (m *SettleAllRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleAllRespMsg.Marshal(b, m, deterministic)
}
func (m *SettleAllRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleAllRespMsg.Merge(m, src)
}
func (m *SettleAllRespMsg) XXX_Size() int {
	return xxx_messageInfo_SettleAllRespMsg.Size(m)
}
func (m *SettleAllRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleAllRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SettleAllRespMsg proto.InternalMessageInfo

func (m *SettleAllRespMsg) GetInfo() []*SettleAllRespDetail {
	if m != nil {
		return m.Info
	}
	return nil
}

type SettleAllRespDetail struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	GoldBegin            int64    `protobuf:"varint,2,opt,name=GoldBegin,proto3" json:"GoldBegin,omitempty"`
	PokerType            int32    `protobuf:"varint,3,opt,name=PokerType,proto3" json:"PokerType,omitempty"`
	Bottom               int32    `protobuf:"varint,4,opt,name=Bottom,proto3" json:"Bottom,omitempty"`
	QiangMulti           int32    `protobuf:"varint,5,opt,name=QiangMulti,proto3" json:"QiangMulti,omitempty"`
	BetMulti             int32    `protobuf:"varint,6,opt,name=BetMulti,proto3" json:"BetMulti,omitempty"`
	GoldChange           int64    `protobuf:"varint,7,opt,name=GoldChange,proto3" json:"GoldChange,omitempty"`
	IsZhuang             bool     `protobuf:"varint,8,opt,name=isZhuang,proto3" json:"isZhuang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleAllRespDetail) Reset()         { *m = SettleAllRespDetail{} }
func (m *SettleAllRespDetail) String() string { return proto.CompactTextString(m) }
func (*SettleAllRespDetail) ProtoMessage()    {}
func (*SettleAllRespDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{9}
}

func (m *SettleAllRespDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleAllRespDetail.Unmarshal(m, b)
}
func (m *SettleAllRespDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleAllRespDetail.Marshal(b, m, deterministic)
}
func (m *SettleAllRespDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleAllRespDetail.Merge(m, src)
}
func (m *SettleAllRespDetail) XXX_Size() int {
	return xxx_messageInfo_SettleAllRespDetail.Size(m)
}
func (m *SettleAllRespDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleAllRespDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SettleAllRespDetail proto.InternalMessageInfo

func (m *SettleAllRespDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SettleAllRespDetail) GetGoldBegin() int64 {
	if m != nil {
		return m.GoldBegin
	}
	return 0
}

func (m *SettleAllRespDetail) GetPokerType() int32 {
	if m != nil {
		return m.PokerType
	}
	return 0
}

func (m *SettleAllRespDetail) GetBottom() int32 {
	if m != nil {
		return m.Bottom
	}
	return 0
}

func (m *SettleAllRespDetail) GetQiangMulti() int32 {
	if m != nil {
		return m.QiangMulti
	}
	return 0
}

func (m *SettleAllRespDetail) GetBetMulti() int32 {
	if m != nil {
		return m.BetMulti
	}
	return 0
}

func (m *SettleAllRespDetail) GetGoldChange() int64 {
	if m != nil {
		return m.GoldChange
	}
	return 0
}

func (m *SettleAllRespDetail) GetIsZhuang() bool {
	if m != nil {
		return m.IsZhuang
	}
	return false
}

// 场景消息
type SenceMsg struct {
	Status               int32                 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	LeftTime             int32                 `protobuf:"varint,2,opt,name=LeftTime,proto3" json:"LeftTime,omitempty"`
	UserInfo             []*UserInfo           `protobuf:"bytes,3,rep,name=UserInfo,proto3" json:"UserInfo,omitempty"`
	Poker                *PokerInfoRespMsg     `protobuf:"bytes,4,opt,name=Poker,proto3" json:"Poker,omitempty"`
	QiangMulti           []int32               `protobuf:"varint,5,rep,packed,name=QiangMulti,proto3" json:"QiangMulti,omitempty"`
	BetMulti             []int32               `protobuf:"varint,6,rep,packed,name=BetMulti,proto3" json:"BetMulti,omitempty"`
	ZhuangChairID        int32                 `protobuf:"varint,7,opt,name=ZhuangChairID,proto3" json:"ZhuangChairID,omitempty"`
	ZhuangVal            int32                 `protobuf:"varint,8,opt,name=ZhuangVal,proto3" json:"ZhuangVal,omitempty"`
	SetNum               int32                 `protobuf:"varint,9,opt,name=SetNum,proto3" json:"SetNum,omitempty"`
	Bottom               int64                 `protobuf:"varint,10,opt,name=Bottom,proto3" json:"Bottom,omitempty"`
	Nums                 []int32               `protobuf:"varint,11,rep,packed,name=Nums,proto3" json:"Nums,omitempty"`
	QiangInfo            []*QiangZhuangRespMsg `protobuf:"bytes,12,rep,name=QiangInfo,proto3" json:"QiangInfo,omitempty"`
	BetInfo              []*BetMultiRespMsg    `protobuf:"bytes,13,rep,name=BetInfo,proto3" json:"BetInfo,omitempty"`
	DealFirstChairID     int32                 `protobuf:"varint,14,opt,name=DealFirstChairID,proto3" json:"DealFirstChairID,omitempty"`
	RoomID               int64                 `protobuf:"varint,15,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	IntervalTime         int32                 `protobuf:"varint,16,opt,name=IntervalTime,proto3" json:"IntervalTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SenceMsg) Reset()         { *m = SenceMsg{} }
func (m *SenceMsg) String() string { return proto.CompactTextString(m) }
func (*SenceMsg) ProtoMessage()    {}
func (*SenceMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{10}
}

func (m *SenceMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SenceMsg.Unmarshal(m, b)
}
func (m *SenceMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SenceMsg.Marshal(b, m, deterministic)
}
func (m *SenceMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SenceMsg.Merge(m, src)
}
func (m *SenceMsg) XXX_Size() int {
	return xxx_messageInfo_SenceMsg.Size(m)
}
func (m *SenceMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SenceMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SenceMsg proto.InternalMessageInfo

func (m *SenceMsg) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SenceMsg) GetLeftTime() int32 {
	if m != nil {
		return m.LeftTime
	}
	return 0
}

func (m *SenceMsg) GetUserInfo() []*UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *SenceMsg) GetPoker() *PokerInfoRespMsg {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *SenceMsg) GetQiangMulti() []int32 {
	if m != nil {
		return m.QiangMulti
	}
	return nil
}

func (m *SenceMsg) GetBetMulti() []int32 {
	if m != nil {
		return m.BetMulti
	}
	return nil
}

func (m *SenceMsg) GetZhuangChairID() int32 {
	if m != nil {
		return m.ZhuangChairID
	}
	return 0
}

func (m *SenceMsg) GetZhuangVal() int32 {
	if m != nil {
		return m.ZhuangVal
	}
	return 0
}

func (m *SenceMsg) GetSetNum() int32 {
	if m != nil {
		return m.SetNum
	}
	return 0
}

func (m *SenceMsg) GetBottom() int64 {
	if m != nil {
		return m.Bottom
	}
	return 0
}

func (m *SenceMsg) GetNums() []int32 {
	if m != nil {
		return m.Nums
	}
	return nil
}

func (m *SenceMsg) GetQiangInfo() []*QiangZhuangRespMsg {
	if m != nil {
		return m.QiangInfo
	}
	return nil
}

func (m *SenceMsg) GetBetInfo() []*BetMultiRespMsg {
	if m != nil {
		return m.BetInfo
	}
	return nil
}

func (m *SenceMsg) GetDealFirstChairID() int32 {
	if m != nil {
		return m.DealFirstChairID
	}
	return 0
}

func (m *SenceMsg) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *SenceMsg) GetIntervalTime() int32 {
	if m != nil {
		return m.IntervalTime
	}
	return 0
}

// 玩家信息
type UserInfo struct {
	Avatar               string   `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	GoldNow              int64    `protobuf:"varint,3,opt,name=GoldNow,proto3" json:"GoldNow,omitempty"`
	ChairID              int32    `protobuf:"varint,4,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	UserID               int64    `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IP                   string   `protobuf:"bytes,6,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{11}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetGoldNow() int64 {
	if m != nil {
		return m.GoldNow
	}
	return 0
}

func (m *UserInfo) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *UserInfo) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *UserInfo) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

// 匹配成功之后的4个玩家
type UserListRespMsg struct {
	List                 []*UserInfo `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserListRespMsg) Reset()         { *m = UserListRespMsg{} }
func (m *UserListRespMsg) String() string { return proto.CompactTextString(m) }
func (*UserListRespMsg) ProtoMessage()    {}
func (*UserListRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{12}
}

func (m *UserListRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListRespMsg.Unmarshal(m, b)
}
func (m *UserListRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListRespMsg.Marshal(b, m, deterministic)
}
func (m *UserListRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListRespMsg.Merge(m, src)
}
func (m *UserListRespMsg) XXX_Size() int {
	return xxx_messageInfo_UserListRespMsg.Size(m)
}
func (m *UserListRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_UserListRespMsg proto.InternalMessageInfo

func (m *UserListRespMsg) GetList() []*UserInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 抢庄响应广播
type QiangZhuangRespMsg struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Val                  int32    `protobuf:"varint,2,opt,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QiangZhuangRespMsg) Reset()         { *m = QiangZhuangRespMsg{} }
func (m *QiangZhuangRespMsg) String() string { return proto.CompactTextString(m) }
func (*QiangZhuangRespMsg) ProtoMessage()    {}
func (*QiangZhuangRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{13}
}

func (m *QiangZhuangRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QiangZhuangRespMsg.Unmarshal(m, b)
}
func (m *QiangZhuangRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QiangZhuangRespMsg.Marshal(b, m, deterministic)
}
func (m *QiangZhuangRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QiangZhuangRespMsg.Merge(m, src)
}
func (m *QiangZhuangRespMsg) XXX_Size() int {
	return xxx_messageInfo_QiangZhuangRespMsg.Size(m)
}
func (m *QiangZhuangRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_QiangZhuangRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_QiangZhuangRespMsg proto.InternalMessageInfo

func (m *QiangZhuangRespMsg) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *QiangZhuangRespMsg) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

// 下注响应广播
type BetMultiRespMsg struct {
	ChairID              int32    `protobuf:"varint,1,opt,name=ChairID,proto3" json:"ChairID,omitempty"`
	Val                  int32    `protobuf:"varint,2,opt,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetMultiRespMsg) Reset()         { *m = BetMultiRespMsg{} }
func (m *BetMultiRespMsg) String() string { return proto.CompactTextString(m) }
func (*BetMultiRespMsg) ProtoMessage()    {}
func (*BetMultiRespMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{14}
}

func (m *BetMultiRespMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetMultiRespMsg.Unmarshal(m, b)
}
func (m *BetMultiRespMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetMultiRespMsg.Marshal(b, m, deterministic)
}
func (m *BetMultiRespMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetMultiRespMsg.Merge(m, src)
}
func (m *BetMultiRespMsg) XXX_Size() int {
	return xxx_messageInfo_BetMultiRespMsg.Size(m)
}
func (m *BetMultiRespMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_BetMultiRespMsg.DiscardUnknown(m)
}

var xxx_messageInfo_BetMultiRespMsg proto.InternalMessageInfo

func (m *BetMultiRespMsg) GetChairID() int32 {
	if m != nil {
		return m.ChairID
	}
	return 0
}

func (m *BetMultiRespMsg) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

// 玩家下注倍数列表
type UserBetMultiMsg struct {
	List                 []int32  `protobuf:"varint,1,rep,packed,name=List,proto3" json:"List,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBetMultiMsg) Reset()         { *m = UserBetMultiMsg{} }
func (m *UserBetMultiMsg) String() string { return proto.CompactTextString(m) }
func (*UserBetMultiMsg) ProtoMessage()    {}
func (*UserBetMultiMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{15}
}

func (m *UserBetMultiMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserBetMultiMsg.Unmarshal(m, b)
}
func (m *UserBetMultiMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserBetMultiMsg.Marshal(b, m, deterministic)
}
func (m *UserBetMultiMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBetMultiMsg.Merge(m, src)
}
func (m *UserBetMultiMsg) XXX_Size() int {
	return xxx_messageInfo_UserBetMultiMsg.Size(m)
}
func (m *UserBetMultiMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBetMultiMsg.DiscardUnknown(m)
}

var xxx_messageInfo_UserBetMultiMsg proto.InternalMessageInfo

func (m *UserBetMultiMsg) GetList() []int32 {
	if m != nil {
		return m.List
	}
	return nil
}

// 作弊消息
type TestReqMsg struct {
	Poker1               int32    `protobuf:"varint,1,opt,name=Poker1,proto3" json:"Poker1,omitempty"`
	Poker2               int32    `protobuf:"varint,2,opt,name=Poker2,proto3" json:"Poker2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestReqMsg) Reset()         { *m = TestReqMsg{} }
func (m *TestReqMsg) String() string { return proto.CompactTextString(m) }
func (*TestReqMsg) ProtoMessage()    {}
func (*TestReqMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{16}
}

func (m *TestReqMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestReqMsg.Unmarshal(m, b)
}
func (m *TestReqMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestReqMsg.Marshal(b, m, deterministic)
}
func (m *TestReqMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestReqMsg.Merge(m, src)
}
func (m *TestReqMsg) XXX_Size() int {
	return xxx_messageInfo_TestReqMsg.Size(m)
}
func (m *TestReqMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TestReqMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TestReqMsg proto.InternalMessageInfo

func (m *TestReqMsg) GetPoker1() int32 {
	if m != nil {
		return m.Poker1
	}
	return 0
}

func (m *TestReqMsg) GetPoker2() int32 {
	if m != nil {
		return m.Poker2
	}
	return 0
}

// 单牌定义
type Poker struct {
	Sorted               int32    `protobuf:"varint,1,opt,name=Sorted,proto3" json:"Sorted,omitempty"`
	Val                  int32    `protobuf:"varint,2,opt,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Poker) Reset()         { *m = Poker{} }
func (m *Poker) String() string { return proto.CompactTextString(m) }
func (*Poker) ProtoMessage()    {}
func (*Poker) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b146d390acb5117, []int{17}
}

func (m *Poker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Poker.Unmarshal(m, b)
}
func (m *Poker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Poker.Marshal(b, m, deterministic)
}
func (m *Poker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Poker.Merge(m, src)
}
func (m *Poker) XXX_Size() int {
	return xxx_messageInfo_Poker.Size(m)
}
func (m *Poker) XXX_DiscardUnknown() {
	xxx_messageInfo_Poker.DiscardUnknown(m)
}

var xxx_messageInfo_Poker proto.InternalMessageInfo

func (m *Poker) GetSorted() int32 {
	if m != nil {
		return m.Sorted
	}
	return 0
}

func (m *Poker) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

func init() {
	proto.RegisterEnum("paigow.ReceiveMessageType", ReceiveMessageType_name, ReceiveMessageType_value)
	proto.RegisterEnum("paigow.SendToClientMessageType", SendToClientMessageType_name, SendToClientMessageType_value)
	proto.RegisterEnum("paigow.GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterEnum("paigow.PokerType", PokerType_name, PokerType_value)
	proto.RegisterType((*StatusMessage)(nil), "paigow.StatusMessage")
	proto.RegisterType((*QiangZhuangReqMsg)(nil), "paigow.QiangZhuangReqMsg")
	proto.RegisterType((*BetMultiReqMsg)(nil), "paigow.BetMultiReqMsg")
	proto.RegisterType((*ZhuangRespMsg)(nil), "paigow.ZhuangRespMsg")
	proto.RegisterType((*DiceValRespMsg)(nil), "paigow.DiceValRespMsg")
	proto.RegisterType((*DealPokerMsg)(nil), "paigow.DealPokerMsg")
	proto.RegisterType((*PokerInfoRespMsg)(nil), "paigow.PokerInfoRespMsg")
	proto.RegisterType((*PokerInfoRespDetail)(nil), "paigow.PokerInfoRespDetail")
	proto.RegisterType((*SettleAllRespMsg)(nil), "paigow.SettleAllRespMsg")
	proto.RegisterType((*SettleAllRespDetail)(nil), "paigow.SettleAllRespDetail")
	proto.RegisterType((*SenceMsg)(nil), "paigow.SenceMsg")
	proto.RegisterType((*UserInfo)(nil), "paigow.UserInfo")
	proto.RegisterType((*UserListRespMsg)(nil), "paigow.UserListRespMsg")
	proto.RegisterType((*QiangZhuangRespMsg)(nil), "paigow.QiangZhuangRespMsg")
	proto.RegisterType((*BetMultiRespMsg)(nil), "paigow.BetMultiRespMsg")
	proto.RegisterType((*UserBetMultiMsg)(nil), "paigow.UserBetMultiMsg")
	proto.RegisterType((*TestReqMsg)(nil), "paigow.TestReqMsg")
	proto.RegisterType((*Poker)(nil), "paigow.Poker")
}

func init() { proto.RegisterFile("pai9.proto", fileDescriptor_0b146d390acb5117) }

var fileDescriptor_0b146d390acb5117 = []byte{
	// 1184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdb, 0x6e, 0x23, 0x45,
	0x13, 0xde, 0xf1, 0xf8, 0x30, 0x2e, 0x9f, 0x3a, 0x9d, 0xfd, 0x77, 0xe7, 0xcf, 0x2e, 0x4b, 0x34,
	0x2c, 0xd2, 0x2a, 0x82, 0x40, 0xc2, 0x05, 0x20, 0x01, 0x22, 0x8e, 0xd9, 0xe0, 0x55, 0x12, 0x65,
	0xc7, 0x86, 0x48, 0xb9, 0x6b, 0x92, 0x8e, 0xdd, 0x62, 0x3c, 0x13, 0xec, 0x71, 0x02, 0x97, 0xbc,
	0x02, 0xef, 0xc2, 0x25, 0xaf, 0x01, 0x4f, 0xc2, 0x3d, 0xaa, 0xea, 0xee, 0x39, 0x38, 0x56, 0x24,
	0xb8, 0xb0, 0xd4, 0x5f, 0x55, 0x57, 0x57, 0xd5, 0x57, 0x87, 0x31, 0xc0, 0x8d, 0x50, 0x9f, 0xef,
	0xde, 0xcc, 0x93, 0x34, 0xe1, 0xf5, 0x1b, 0xa1, 0x26, 0xc9, 0x5d, 0x70, 0x04, 0x9d, 0x51, 0x2a,
	0xd2, 0xe5, 0xe2, 0x44, 0x2e, 0x16, 0x62, 0x22, 0xf9, 0x13, 0xa8, 0x6b, 0x81, 0xef, 0x6c, 0x3b,
	0xaf, 0x6a, 0xa1, 0x41, 0xfc, 0x05, 0x80, 0x3e, 0x8d, 0xd5, 0x4c, 0xfa, 0x15, 0xd2, 0x15, 0x24,
	0xc1, 0x01, 0x6c, 0xbc, 0x55, 0x22, 0x9e, 0x5c, 0x4c, 0x97, 0x22, 0x9e, 0x84, 0xf2, 0xa7, 0x93,
	0xc5, 0x04, 0x1f, 0xfb, 0x6e, 0x21, 0xe7, 0xc3, 0x81, 0x7d, 0x4c, 0x23, 0xfe, 0x18, 0x6a, 0xc3,
	0xf8, 0x4a, 0xfe, 0x6c, 0xde, 0xd1, 0x20, 0xf8, 0x0a, 0xba, 0x7d, 0x99, 0x9e, 0x2c, 0xa3, 0x54,
	0xfd, 0x27, 0x7b, 0x05, 0x1d, 0xeb, 0x7d, 0x71, 0x83, 0xe6, 0x3e, 0x34, 0x0e, 0xa7, 0x42, 0xe5,
	0xf6, 0x16, 0x62, 0x36, 0xfa, 0xea, 0xb9, 0x50, 0xa9, 0x5f, 0xd9, 0x76, 0x31, 0x9b, 0x5c, 0x82,
	0x7a, 0xca, 0x86, 0x82, 0xf1, 0x5d, 0x9d, 0x6d, 0x2e, 0xc1, 0x50, 0x07, 0xea, 0x52, 0x7e, 0x2f,
	0x22, 0xeb, 0xeb, 0x31, 0xd4, 0x5e, 0xab, 0xf9, 0x22, 0x35, 0x9e, 0x34, 0x20, 0x36, 0xe5, 0x65,
	0x12, 0x5f, 0x99, 0x48, 0x0d, 0x0a, 0x22, 0x68, 0x0f, 0xa4, 0x88, 0xce, 0x92, 0x1f, 0xe5, 0x1c,
	0xad, 0x3f, 0x86, 0x86, 0x79, 0x8f, 0xec, 0x5b, 0xfb, 0x4f, 0x76, 0x75, 0x81, 0x76, 0xcb, 0x6e,
	0x42, 0x7b, 0x8d, 0xef, 0x00, 0xc3, 0x17, 0xc8, 0x8d, 0x4d, 0x52, 0xc7, 0x79, 0x4f, 0x1e, 0x1c,
	0x02, 0x23, 0x4f, 0xc3, 0xf8, 0x3a, 0xb1, 0xf1, 0x7e, 0x04, 0x55, 0x84, 0x94, 0x7b, 0x6b, 0xff,
	0x99, 0x75, 0x57, 0xba, 0x37, 0x90, 0xa9, 0x50, 0x51, 0x48, 0x17, 0x83, 0x3f, 0x1c, 0xd8, 0x5c,
	0xa3, 0x7d, 0x80, 0xe4, 0xf7, 0xa0, 0x46, 0x06, 0xc6, 0x47, 0xa7, 0xe4, 0x23, 0xd4, 0x3a, 0xfe,
	0x21, 0x78, 0x74, 0xc0, 0xd4, 0x31, 0xfe, 0xee, 0xfe, 0x46, 0xe9, 0xde, 0xf8, 0x97, 0x1b, 0x19,
	0x66, 0x57, 0xb0, 0x30, 0x47, 0x49, 0x74, 0x75, 0x38, 0x15, 0xf1, 0x44, 0xfa, 0xd5, 0x6d, 0xe7,
	0x95, 0x1b, 0x16, 0x24, 0x18, 0x0d, 0xa2, 0xd3, 0xe4, 0xce, 0xaf, 0x91, 0xd2, 0x42, 0x24, 0x61,
	0x24, 0xd3, 0x34, 0x92, 0x07, 0x51, 0xb4, 0x4a, 0x82, 0x53, 0x26, 0xa1, 0x74, 0xaf, 0x44, 0xc2,
	0xdf, 0x0e, 0x6c, 0xae, 0xd1, 0x72, 0x0e, 0xd5, 0x53, 0x31, 0x93, 0xc4, 0x40, 0x33, 0xa4, 0x33,
	0x7f, 0x0e, 0x4d, 0xf4, 0xdd, 0x97, 0x13, 0x15, 0x53, 0xf9, 0xdd, 0x30, 0x17, 0xa0, 0x36, 0xcb,
	0xcf, 0x14, 0x2e, 0x17, 0x60, 0xdf, 0xf4, 0x93, 0x34, 0x4d, 0x66, 0x94, 0x62, 0x2d, 0x34, 0x68,
	0xa5, 0x2f, 0x6b, 0xab, 0x7d, 0xc9, 0xb7, 0xc0, 0xb3, 0x23, 0xe4, 0xd7, 0x49, 0x9b, 0xe1, 0x15,
	0xea, 0x1a, 0xf7, 0xa8, 0xdb, 0x02, 0x4f, 0x2d, 0xf4, 0x0c, 0xf8, 0xde, 0xb6, 0xf3, 0xca, 0x0b,
	0x33, 0x1c, 0xfc, 0x5e, 0x05, 0x6f, 0x24, 0xe3, 0x4b, 0x69, 0xa6, 0x72, 0xed, 0x8a, 0xd8, 0x02,
	0xef, 0x58, 0x5e, 0xa7, 0x85, 0x05, 0x91, 0x61, 0xfe, 0x01, 0x78, 0x34, 0xbb, 0xc8, 0xb6, 0x4b,
	0x6c, 0x33, 0xcb, 0xb6, 0x95, 0x87, 0xd9, 0x0d, 0xbe, 0x6b, 0x3b, 0xa7, 0x4a, 0xc3, 0xe0, 0xaf,
	0xed, 0x4e, 0x1c, 0x07, 0xd3, 0x44, 0xab, 0xb4, 0xb8, 0x0f, 0xd2, 0xe2, 0x96, 0x68, 0x79, 0x69,
	0xb7, 0x86, 0xed, 0xe2, 0x06, 0x85, 0x5e, 0x16, 0x62, 0xb9, 0xb4, 0x00, 0xfb, 0xd4, 0xd3, 0xe5,
	0xca, 0x04, 0x7a, 0xcc, 0xd3, 0xd3, 0xe5, 0xcc, 0x6f, 0xda, 0x31, 0x47, 0x54, 0x28, 0x23, 0x10,
	0xdd, 0xb6, 0x8c, 0xd8, 0x2e, 0xcb, 0xd9, 0xc2, 0x6f, 0x51, 0x2c, 0x74, 0xe6, 0x9f, 0x41, 0x93,
	0x22, 0x26, 0x8a, 0xda, 0x44, 0xd1, 0x96, 0xcd, 0xbb, 0xb4, 0x59, 0x75, 0xe6, 0xf9, 0x65, 0xbe,
	0x07, 0x8d, 0xbe, 0x4c, 0xc9, 0xae, 0x43, 0x76, 0x4f, 0xad, 0x5d, 0xbe, 0x4e, 0xcd, 0xf6, 0x30,
	0xf7, 0xd6, 0x6e, 0x8f, 0xee, 0xfa, 0xed, 0x81, 0x49, 0x84, 0x49, 0x32, 0x1b, 0x0e, 0xfc, 0x9e,
	0x4e, 0x42, 0x23, 0x1e, 0x40, 0x7b, 0x18, 0xa7, 0x72, 0x7e, 0x2b, 0x22, 0x2a, 0x39, 0x23, 0xfb,
	0x92, 0x2c, 0xf8, 0xcd, 0xc9, 0xeb, 0x8e, 0x0f, 0x1d, 0xdc, 0x8a, 0x54, 0xcc, 0xcd, 0x98, 0x18,
	0x94, 0x0d, 0x4f, 0xa5, 0x30, 0x3c, 0x85, 0x39, 0x76, 0x4b, 0x73, 0x5c, 0xdc, 0x37, 0xd5, 0xf2,
	0xbe, 0xc9, 0xbf, 0x16, 0x7a, 0xf4, 0xed, 0xd7, 0xa2, 0x0b, 0x95, 0xe1, 0x19, 0x8d, 0x43, 0x33,
	0xac, 0x0c, 0xcf, 0x82, 0x4f, 0xa1, 0x87, 0x9a, 0x63, 0xb5, 0x48, 0xed, 0x22, 0x78, 0x09, 0x55,
	0x84, 0x66, 0x11, 0xdc, 0x6f, 0x4d, 0xd2, 0x06, 0x5f, 0x03, 0xbf, 0x5f, 0x89, 0x07, 0x16, 0x20,
	0x03, 0x17, 0xdb, 0x45, 0xcf, 0x02, 0x1e, 0x83, 0x2f, 0xa1, 0xb7, 0x52, 0x93, 0x7f, 0x65, 0xfe,
	0xbe, 0x8e, 0xdc, 0x3e, 0x81, 0xe6, 0xbc, 0x10, 0x79, 0xcd, 0xc4, 0xf9, 0x05, 0xc0, 0x58, 0x62,
	0x72, 0xf6, 0x23, 0x4a, 0x53, 0xb2, 0x67, 0xc7, 0x55, 0xa3, 0x4c, 0xbe, 0x6f, 0xbf, 0x4d, 0x1a,
	0x05, 0x7b, 0x66, 0xf8, 0xa8, 0xab, 0x93, 0x79, 0x2a, 0xaf, 0xb2, 0x39, 0x27, 0x74, 0x3f, 0xae,
	0x9d, 0x11, 0xf0, 0x50, 0x5e, 0x4a, 0x75, 0x2b, 0xcd, 0xdf, 0x08, 0x5a, 0x62, 0x2d, 0x68, 0x8c,
	0x52, 0x31, 0x4f, 0x87, 0x03, 0xf6, 0x88, 0x73, 0xe8, 0x96, 0xff, 0x1f, 0x30, 0x87, 0xf7, 0xa0,
	0x55, 0xf8, 0xe0, 0xb3, 0x0a, 0x5a, 0x98, 0xc0, 0x99, 0xbb, 0xf3, 0x97, 0x03, 0x4f, 0x47, 0x32,
	0xbe, 0x1a, 0x27, 0x87, 0x91, 0x92, 0x71, 0x5a, 0x7c, 0xba, 0x03, 0xcd, 0x50, 0x2e, 0xb2, 0xc7,
	0xbb, 0xf6, 0x73, 0x8e, 0xa4, 0x32, 0x87, 0x6f, 0x40, 0xa7, 0xb4, 0x2a, 0x58, 0x05, 0x45, 0xa5,
	0xc5, 0xcd, 0x5c, 0x0e, 0x76, 0x8f, 0xb1, 0x2a, 0x3e, 0x38, 0xba, 0x94, 0xb1, 0x24, 0x55, 0x8d,
	0x33, 0x68, 0x17, 0x5b, 0x84, 0xd5, 0xf9, 0x26, 0xf4, 0x56, 0x6a, 0xcf, 0x1a, 0x78, 0xad, 0x58,
	0x4e, 0xe6, 0x59, 0x43, 0x2b, 0x65, 0x4d, 0x74, 0x9c, 0x7d, 0xea, 0x31, 0x1e, 0x06, 0x3b, 0xbf,
	0x3a, 0x00, 0x47, 0x62, 0x26, 0xcd, 0xde, 0xec, 0x41, 0x8b, 0x78, 0x32, 0xc1, 0x3c, 0x22, 0xe2,
	0xa6, 0xcb, 0xeb, 0xeb, 0x48, 0xb2, 0x06, 0x6a, 0x0b, 0x8e, 0x99, 0x83, 0xc9, 0x22, 0x2d, 0x06,
	0x57, 0x78, 0x03, 0xdc, 0xbe, 0x4c, 0x99, 0x8b, 0x39, 0x64, 0x9e, 0x4c, 0x4a, 0xd3, 0xe4, 0x4e,
	0xc3, 0x1a, 0x41, 0x4b, 0x00, 0xab, 0xef, 0xfc, 0x59, 0x29, 0x7c, 0x80, 0xb8, 0x07, 0xd5, 0x0b,
	0x39, 0x4f, 0xd8, 0x23, 0x24, 0xe5, 0x62, 0xaa, 0x2e, 0x96, 0x31, 0x7b, 0x97, 0x3c, 0x91, 0x97,
	0xb1, 0x12, 0x31, 0x7b, 0xc1, 0xdb, 0xe0, 0x69, 0x3c, 0x50, 0xec, 0x1d, 0xfd, 0xbe, 0x26, 0x23,
	0x66, 0xcf, 0x4d, 0xd0, 0x22, 0x9e, 0x7c, 0xc3, 0x9e, 0xe5, 0xba, 0x13, 0xa9, 0xd8, 0x16, 0x16,
	0x7f, 0x64, 0xd7, 0x69, 0x3c, 0x19, 0x89, 0x98, 0xfd, 0x9f, 0x0a, 0x42, 0xb2, 0xbe, 0x88, 0x07,
	0x32, 0x9e, 0x30, 0x9f, 0x88, 0x20, 0xd1, 0xeb, 0xe5, 0x38, 0x59, 0xb2, 0xa7, 0xf9, 0x9d, 0x6f,
	0x93, 0x78, 0x82, 0xa2, 0x27, 0xb9, 0xe8, 0x48, 0x24, 0x6f, 0x94, 0x48, 0xd8, 0xff, 0x72, 0xd1,
	0xb1, 0xa2, 0x1f, 0x7b, 0xcc, 0x9b, 0x50, 0xbb, 0x10, 0x6f, 0xd4, 0x92, 0x6d, 0x52, 0x6a, 0xa2,
	0x2f, 0x18, 0xd7, 0xa7, 0xb7, 0x8a, 0x6d, 0xe8, 0xd3, 0xf9, 0x92, 0x31, 0x4c, 0x09, 0x93, 0x3b,
	0x47, 0x2a, 0x7b, 0x98, 0xfc, 0x40, 0xd1, 0xb9, 0x6b, 0x35, 0x47, 0x88, 0x3a, 0x5a, 0x43, 0xe7,
	0x36, 0xd2, 0xa2, 0x35, 0x09, 0x7a, 0x68, 0xe1, 0x4d, 0xd4, 0x11, 0x82, 0x1f, 0xea, 0xf4, 0x07,
	0xfb, 0x93, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xae, 0x09, 0x6f, 0x6e, 0x0b, 0x00, 0x00,
}
