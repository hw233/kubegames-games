// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mibaijiale.proto

package mibaijiale

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 客户端到服务器发送消息的类型
type ReceiveMessageType int32

const (
	ReceiveMessageType_StartID         ReceiveMessageType = 0
	ReceiveMessageType_BetID           ReceiveMessageType = 1
	ReceiveMessageType_SitDown         ReceiveMessageType = 2
	ReceiveMessageType_GetTrend        ReceiveMessageType = 3
	ReceiveMessageType_GetUserListInfo ReceiveMessageType = 4
	ReceiveMessageType_StandUp         ReceiveMessageType = 5
	ReceiveMessageType_tempCard        ReceiveMessageType = 6
	ReceiveMessageType_RecMiPaiSynPos  ReceiveMessageType = 8
	ReceiveMessageType_RecMiEndMsg     ReceiveMessageType = 10
)

var ReceiveMessageType_name = map[int32]string{
	0:  "StartID",
	1:  "BetID",
	2:  "SitDown",
	3:  "GetTrend",
	4:  "GetUserListInfo",
	5:  "StandUp",
	6:  "tempCard",
	8:  "RecMiPaiSynPos",
	10: "RecMiEndMsg",
}

var ReceiveMessageType_value = map[string]int32{
	"StartID":         0,
	"BetID":           1,
	"SitDown":         2,
	"GetTrend":        3,
	"GetUserListInfo": 4,
	"StandUp":         5,
	"tempCard":        6,
	"RecMiPaiSynPos":  8,
	"RecMiEndMsg":     10,
}

func (x ReceiveMessageType) String() string {
	return proto.EnumName(ReceiveMessageType_name, int32(x))
}

func (ReceiveMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{0}
}

// 服务器发送给客户端的消息类型
type SendToClientMessageType int32

const (
	SendToClientMessageType_RestartID           SendToClientMessageType = 0
	SendToClientMessageType_BetRet              SendToClientMessageType = 1
	SendToClientMessageType_BetFailID           SendToClientMessageType = 2
	SendToClientMessageType_BetSuccessMessageID SendToClientMessageType = 3
	SendToClientMessageType_SceneID             SendToClientMessageType = 4
	SendToClientMessageType_Status              SendToClientMessageType = 6
	SendToClientMessageType_Settle              SendToClientMessageType = 7
	SendToClientMessageType_SitDownFail         SendToClientMessageType = 8
	SendToClientMessageType_BetInfo             SendToClientMessageType = 9
	SendToClientMessageType_TrendInfo           SendToClientMessageType = 10
	SendToClientMessageType_UserListInfo        SendToClientMessageType = 11
	SendToClientMessageType_SceneSettleInfo     SendToClientMessageType = 12
	SendToClientMessageType_ExitRet             SendToClientMessageType = 13
	SendToClientMessageType_KickOutUser         SendToClientMessageType = 14
	SendToClientMessageType_RoomRolesInfo       SendToClientMessageType = 15
	SendToClientMessageType_RoomSenceInfo       SendToClientMessageType = 16
	SendToClientMessageType_UserComeBack        SendToClientMessageType = 17
	SendToClientMessageType_GamePokerCount      SendToClientMessageType = 18
	SendToClientMessageType_UpdateMiSeatID      SendToClientMessageType = 19
	SendToClientMessageType_PokerInfo           SendToClientMessageType = 20
	SendToClientMessageType_SendMiPaiSynPos     SendToClientMessageType = 22
	SendToClientMessageType_SendRobotMiPai      SendToClientMessageType = 23
	SendToClientMessageType_SceneGold           SendToClientMessageType = 24
)

var SendToClientMessageType_name = map[int32]string{
	0:  "RestartID",
	1:  "BetRet",
	2:  "BetFailID",
	3:  "BetSuccessMessageID",
	4:  "SceneID",
	6:  "Status",
	7:  "Settle",
	8:  "SitDownFail",
	9:  "BetInfo",
	10: "TrendInfo",
	11: "UserListInfo",
	12: "SceneSettleInfo",
	13: "ExitRet",
	14: "KickOutUser",
	15: "RoomRolesInfo",
	16: "RoomSenceInfo",
	17: "UserComeBack",
	18: "GamePokerCount",
	19: "UpdateMiSeatID",
	20: "PokerInfo",
	22: "SendMiPaiSynPos",
	23: "SendRobotMiPai",
	24: "SceneGold",
}

var SendToClientMessageType_value = map[string]int32{
	"RestartID":           0,
	"BetRet":              1,
	"BetFailID":           2,
	"BetSuccessMessageID": 3,
	"SceneID":             4,
	"Status":              6,
	"Settle":              7,
	"SitDownFail":         8,
	"BetInfo":             9,
	"TrendInfo":           10,
	"UserListInfo":        11,
	"SceneSettleInfo":     12,
	"ExitRet":             13,
	"KickOutUser":         14,
	"RoomRolesInfo":       15,
	"RoomSenceInfo":       16,
	"UserComeBack":        17,
	"GamePokerCount":      18,
	"UpdateMiSeatID":      19,
	"PokerInfo":           20,
	"SendMiPaiSynPos":     22,
	"SendRobotMiPai":      23,
	"SceneGold":           24,
}

func (x SendToClientMessageType) String() string {
	return proto.EnumName(SendToClientMessageType_name, int32(x))
}

func (SendToClientMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{1}
}

//游戏阶段
type GameStatus int32

const (
	GameStatus_StartStatus  GameStatus = 0
	GameStatus_FlushPoker   GameStatus = 1
	GameStatus_StartMovie   GameStatus = 2
	GameStatus_BetStatus    GameStatus = 3
	GameStatus_EndBetMovie  GameStatus = 4
	GameStatus_ShowPoker2   GameStatus = 5
	GameStatus_ShowPoker4   GameStatus = 6
	GameStatus_ShowPoker5   GameStatus = 7
	GameStatus_ShowPoker6   GameStatus = 8
	GameStatus_ShowPokerEnd GameStatus = 9
	GameStatus_SettleStatus GameStatus = 10
)

var GameStatus_name = map[int32]string{
	0:  "StartStatus",
	1:  "FlushPoker",
	2:  "StartMovie",
	3:  "BetStatus",
	4:  "EndBetMovie",
	5:  "ShowPoker2",
	6:  "ShowPoker4",
	7:  "ShowPoker5",
	8:  "ShowPoker6",
	9:  "ShowPokerEnd",
	10: "SettleStatus",
}

var GameStatus_value = map[string]int32{
	"StartStatus":  0,
	"FlushPoker":   1,
	"StartMovie":   2,
	"BetStatus":    3,
	"EndBetMovie":  4,
	"ShowPoker2":   5,
	"ShowPoker4":   6,
	"ShowPoker5":   7,
	"ShowPoker6":   8,
	"ShowPokerEnd": 9,
	"SettleStatus": 10,
}

func (x GameStatus) String() string {
	return proto.EnumName(GameStatus_name, int32(x))
}

func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{2}
}

type StatusMessage struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	StatusTime           int32    `protobuf:"varint,2,opt,name=StatusTime,proto3" json:"StatusTime,omitempty"`
	TotalStatusTime      int32    `protobuf:"varint,3,opt,name=TotalStatusTime,proto3" json:"TotalStatusTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusMessage) Reset()         { *m = StatusMessage{} }
func (m *StatusMessage) String() string { return proto.CompactTextString(m) }
func (*StatusMessage) ProtoMessage()    {}
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{0}
}

func (m *StatusMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMessage.Unmarshal(m, b)
}
func (m *StatusMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMessage.Marshal(b, m, deterministic)
}
func (m *StatusMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMessage.Merge(m, src)
}
func (m *StatusMessage) XXX_Size() int {
	return xxx_messageInfo_StatusMessage.Size(m)
}
func (m *StatusMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMessage proto.InternalMessageInfo

func (m *StatusMessage) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *StatusMessage) GetStatusTime() int32 {
	if m != nil {
		return m.StatusTime
	}
	return 0
}

func (m *StatusMessage) GetTotalStatusTime() int32 {
	if m != nil {
		return m.TotalStatusTime
	}
	return 0
}

// 押注失败发送的消息
type BetFailMessage struct {
	FailMessage          string   `protobuf:"bytes,1,opt,name=FailMessage,proto3" json:"FailMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetFailMessage) Reset()         { *m = BetFailMessage{} }
func (m *BetFailMessage) String() string { return proto.CompactTextString(m) }
func (*BetFailMessage) ProtoMessage()    {}
func (*BetFailMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{1}
}

func (m *BetFailMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetFailMessage.Unmarshal(m, b)
}
func (m *BetFailMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetFailMessage.Marshal(b, m, deterministic)
}
func (m *BetFailMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetFailMessage.Merge(m, src)
}
func (m *BetFailMessage) XXX_Size() int {
	return xxx_messageInfo_BetFailMessage.Size(m)
}
func (m *BetFailMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BetFailMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BetFailMessage proto.InternalMessageInfo

func (m *BetFailMessage) GetFailMessage() string {
	if m != nil {
		return m.FailMessage
	}
	return ""
}

// 押注成功时发送的消息
type BetSuccessMessage struct {
	SeatId               int32    `protobuf:"varint,1,opt,name=SeatId,proto3" json:"SeatId,omitempty"`
	BetIndex             int32    `protobuf:"varint,2,opt,name=BetIndex,proto3" json:"BetIndex,omitempty"`
	BetType              int32    `protobuf:"varint,3,opt,name=BetType,proto3" json:"BetType,omitempty"`
	UserID               int64    `protobuf:"varint,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ZhuangBetGold        int64    `protobuf:"varint,5,opt,name=ZhuangBetGold,proto3" json:"ZhuangBetGold,omitempty"`
	XianBetGold          int64    `protobuf:"varint,6,opt,name=XianBetGold,proto3" json:"XianBetGold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BetSuccessMessage) Reset()         { *m = BetSuccessMessage{} }
func (m *BetSuccessMessage) String() string { return proto.CompactTextString(m) }
func (*BetSuccessMessage) ProtoMessage()    {}
func (*BetSuccessMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{2}
}

func (m *BetSuccessMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BetSuccessMessage.Unmarshal(m, b)
}
func (m *BetSuccessMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BetSuccessMessage.Marshal(b, m, deterministic)
}
func (m *BetSuccessMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BetSuccessMessage.Merge(m, src)
}
func (m *BetSuccessMessage) XXX_Size() int {
	return xxx_messageInfo_BetSuccessMessage.Size(m)
}
func (m *BetSuccessMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BetSuccessMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BetSuccessMessage proto.InternalMessageInfo

func (m *BetSuccessMessage) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *BetSuccessMessage) GetBetIndex() int32 {
	if m != nil {
		return m.BetIndex
	}
	return 0
}

func (m *BetSuccessMessage) GetBetType() int32 {
	if m != nil {
		return m.BetType
	}
	return 0
}

func (m *BetSuccessMessage) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *BetSuccessMessage) GetZhuangBetGold() int64 {
	if m != nil {
		return m.ZhuangBetGold
	}
	return 0
}

func (m *BetSuccessMessage) GetXianBetGold() int64 {
	if m != nil {
		return m.XianBetGold
	}
	return 0
}

// 服务器收到的押注信息
type Bet struct {
	BetType              int32    `protobuf:"varint,1,opt,name=BetType,proto3" json:"BetType,omitempty"`
	BetIndex             int32    `protobuf:"varint,2,opt,name=BetIndex,proto3" json:"BetIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bet) Reset()         { *m = Bet{} }
func (m *Bet) String() string { return proto.CompactTextString(m) }
func (*Bet) ProtoMessage()    {}
func (*Bet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{3}
}

func (m *Bet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bet.Unmarshal(m, b)
}
func (m *Bet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bet.Marshal(b, m, deterministic)
}
func (m *Bet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bet.Merge(m, src)
}
func (m *Bet) XXX_Size() int {
	return xxx_messageInfo_Bet.Size(m)
}
func (m *Bet) XXX_DiscardUnknown() {
	xxx_messageInfo_Bet.DiscardUnknown(m)
}

var xxx_messageInfo_Bet proto.InternalMessageInfo

func (m *Bet) GetBetType() int32 {
	if m != nil {
		return m.BetType
	}
	return 0
}

func (m *Bet) GetBetIndex() int32 {
	if m != nil {
		return m.BetIndex
	}
	return 0
}

//游戏中几个玩家的数据
type SeatUser struct {
	Nick                 string   `protobuf:"bytes,1,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Head                 string   `protobuf:"bytes,2,opt,name=Head,proto3" json:"Head,omitempty"`
	Score                int64    `protobuf:"varint,3,opt,name=Score,proto3" json:"Score,omitempty"`
	IsBigWinner          bool     `protobuf:"varint,4,opt,name=IsBigWinner,proto3" json:"IsBigWinner,omitempty"`
	IsMaster             bool     `protobuf:"varint,5,opt,name=IsMaster,proto3" json:"IsMaster,omitempty"`
	SeatId               int32    `protobuf:"varint,6,opt,name=SeatId,proto3" json:"SeatId,omitempty"`
	UserID               int64    `protobuf:"varint,7,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ZhuangBetGold        int64    `protobuf:"varint,8,opt,name=ZhuangBetGold,proto3" json:"ZhuangBetGold,omitempty"`
	XianBetGold          int64    `protobuf:"varint,9,opt,name=XianBetGold,proto3" json:"XianBetGold,omitempty"`
	IsMillionaire        bool     `protobuf:"varint,10,opt,name=IsMillionaire,proto3" json:"IsMillionaire,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeatUser) Reset()         { *m = SeatUser{} }
func (m *SeatUser) String() string { return proto.CompactTextString(m) }
func (*SeatUser) ProtoMessage()    {}
func (*SeatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{4}
}

func (m *SeatUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeatUser.Unmarshal(m, b)
}
func (m *SeatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeatUser.Marshal(b, m, deterministic)
}
func (m *SeatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeatUser.Merge(m, src)
}
func (m *SeatUser) XXX_Size() int {
	return xxx_messageInfo_SeatUser.Size(m)
}
func (m *SeatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_SeatUser.DiscardUnknown(m)
}

var xxx_messageInfo_SeatUser proto.InternalMessageInfo

func (m *SeatUser) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *SeatUser) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *SeatUser) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *SeatUser) GetIsBigWinner() bool {
	if m != nil {
		return m.IsBigWinner
	}
	return false
}

func (m *SeatUser) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *SeatUser) GetSeatId() int32 {
	if m != nil {
		return m.SeatId
	}
	return 0
}

func (m *SeatUser) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *SeatUser) GetZhuangBetGold() int64 {
	if m != nil {
		return m.ZhuangBetGold
	}
	return 0
}

func (m *SeatUser) GetXianBetGold() int64 {
	if m != nil {
		return m.XianBetGold
	}
	return 0
}

func (m *SeatUser) GetIsMillionaire() bool {
	if m != nil {
		return m.IsMillionaire
	}
	return false
}

// 发送场景数据
type SceneMessage struct {
	UserData             []*SeatUser `protobuf:"bytes,1,rep,name=UserData,proto3" json:"UserData,omitempty"`
	PokerCount           int32       `protobuf:"varint,2,opt,name=PokerCount,proto3" json:"PokerCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SceneMessage) Reset()         { *m = SceneMessage{} }
func (m *SceneMessage) String() string { return proto.CompactTextString(m) }
func (*SceneMessage) ProtoMessage()    {}
func (*SceneMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{5}
}

func (m *SceneMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneMessage.Unmarshal(m, b)
}
func (m *SceneMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneMessage.Marshal(b, m, deterministic)
}
func (m *SceneMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneMessage.Merge(m, src)
}
func (m *SceneMessage) XXX_Size() int {
	return xxx_messageInfo_SceneMessage.Size(m)
}
func (m *SceneMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SceneMessage proto.InternalMessageInfo

func (m *SceneMessage) GetUserData() []*SeatUser {
	if m != nil {
		return m.UserData
	}
	return nil
}

func (m *SceneMessage) GetPokerCount() int32 {
	if m != nil {
		return m.PokerCount
	}
	return 0
}

type UserSitDown struct {
	ChairNo              int32    `protobuf:"varint,1,opt,name=ChairNo,proto3" json:"ChairNo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSitDown) Reset()         { *m = UserSitDown{} }
func (m *UserSitDown) String() string { return proto.CompactTextString(m) }
func (*UserSitDown) ProtoMessage()    {}
func (*UserSitDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{6}
}

func (m *UserSitDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSitDown.Unmarshal(m, b)
}
func (m *UserSitDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSitDown.Marshal(b, m, deterministic)
}
func (m *UserSitDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSitDown.Merge(m, src)
}
func (m *UserSitDown) XXX_Size() int {
	return xxx_messageInfo_UserSitDown.Size(m)
}
func (m *UserSitDown) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSitDown.DiscardUnknown(m)
}

var xxx_messageInfo_UserSitDown proto.InternalMessageInfo

func (m *UserSitDown) GetChairNo() int32 {
	if m != nil {
		return m.ChairNo
	}
	return 0
}

type UserSitDownFail struct {
	FailReaSon           string   `protobuf:"bytes,1,opt,name=FailReaSon,proto3" json:"FailReaSon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSitDownFail) Reset()         { *m = UserSitDownFail{} }
func (m *UserSitDownFail) String() string { return proto.CompactTextString(m) }
func (*UserSitDownFail) ProtoMessage()    {}
func (*UserSitDownFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{7}
}

func (m *UserSitDownFail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSitDownFail.Unmarshal(m, b)
}
func (m *UserSitDownFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSitDownFail.Marshal(b, m, deterministic)
}
func (m *UserSitDownFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSitDownFail.Merge(m, src)
}
func (m *UserSitDownFail) XXX_Size() int {
	return xxx_messageInfo_UserSitDownFail.Size(m)
}
func (m *UserSitDownFail) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSitDownFail.DiscardUnknown(m)
}

var xxx_messageInfo_UserSitDownFail proto.InternalMessageInfo

func (m *UserSitDownFail) GetFailReaSon() string {
	if m != nil {
		return m.FailReaSon
	}
	return ""
}

//牌消息
type PokerMsg struct {
	ZhuangPoker          []byte   `protobuf:"bytes,1,opt,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	XianPoker            []byte   `protobuf:"bytes,2,opt,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	Win                  int32    `protobuf:"varint,3,opt,name=Win,proto3" json:"Win,omitempty"`
	ZhuangMiUserNikeName string   `protobuf:"bytes,4,opt,name=ZhuangMiUserNikeName,proto3" json:"ZhuangMiUserNikeName,omitempty"`
	XiangMiUserNikeName  string   `protobuf:"bytes,5,opt,name=XiangMiUserNikeName,proto3" json:"XiangMiUserNikeName,omitempty"`
	ZhuangMiUserHead     string   `protobuf:"bytes,6,opt,name=ZhuangMiUserHead,proto3" json:"ZhuangMiUserHead,omitempty"`
	XiangMiUserHead      string   `protobuf:"bytes,7,opt,name=XiangMiUserHead,proto3" json:"XiangMiUserHead,omitempty"`
	ZhuangMiUserSeatId   int32    `protobuf:"varint,8,opt,name=ZhuangMiUserSeatId,proto3" json:"ZhuangMiUserSeatId,omitempty"`
	XianMiUserSeatId     int32    `protobuf:"varint,9,opt,name=XianMiUserSeatId,proto3" json:"XianMiUserSeatId,omitempty"`
	ZhuangMi             int64    `protobuf:"varint,10,opt,name=ZhuangMi,proto3" json:"ZhuangMi,omitempty"`
	XianMi               int64    `protobuf:"varint,11,opt,name=XianMi,proto3" json:"XianMi,omitempty"`
	IsOpen               *IsOpen  `protobuf:"bytes,12,opt,name=isOpen,proto3" json:"isOpen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PokerMsg) Reset()         { *m = PokerMsg{} }
func (m *PokerMsg) String() string { return proto.CompactTextString(m) }
func (*PokerMsg) ProtoMessage()    {}
func (*PokerMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{8}
}

func (m *PokerMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerMsg.Unmarshal(m, b)
}
func (m *PokerMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerMsg.Marshal(b, m, deterministic)
}
func (m *PokerMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerMsg.Merge(m, src)
}
func (m *PokerMsg) XXX_Size() int {
	return xxx_messageInfo_PokerMsg.Size(m)
}
func (m *PokerMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PokerMsg proto.InternalMessageInfo

func (m *PokerMsg) GetZhuangPoker() []byte {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *PokerMsg) GetXianPoker() []byte {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

func (m *PokerMsg) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *PokerMsg) GetZhuangMiUserNikeName() string {
	if m != nil {
		return m.ZhuangMiUserNikeName
	}
	return ""
}

func (m *PokerMsg) GetXiangMiUserNikeName() string {
	if m != nil {
		return m.XiangMiUserNikeName
	}
	return ""
}

func (m *PokerMsg) GetZhuangMiUserHead() string {
	if m != nil {
		return m.ZhuangMiUserHead
	}
	return ""
}

func (m *PokerMsg) GetXiangMiUserHead() string {
	if m != nil {
		return m.XiangMiUserHead
	}
	return ""
}

func (m *PokerMsg) GetZhuangMiUserSeatId() int32 {
	if m != nil {
		return m.ZhuangMiUserSeatId
	}
	return 0
}

func (m *PokerMsg) GetXianMiUserSeatId() int32 {
	if m != nil {
		return m.XianMiUserSeatId
	}
	return 0
}

func (m *PokerMsg) GetZhuangMi() int64 {
	if m != nil {
		return m.ZhuangMi
	}
	return 0
}

func (m *PokerMsg) GetXianMi() int64 {
	if m != nil {
		return m.XianMi
	}
	return 0
}

func (m *PokerMsg) GetIsOpen() *IsOpen {
	if m != nil {
		return m.IsOpen
	}
	return nil
}

//结算消息
type SettleMsg struct {
	Win                  int32    `protobuf:"varint,3,opt,name=Win,proto3" json:"Win,omitempty"`
	UserZhuangWin        int64    `protobuf:"varint,4,opt,name=UserZhuangWin,proto3" json:"UserZhuangWin,omitempty"`
	UserXianWin          int64    `protobuf:"varint,5,opt,name=UserXianWin,proto3" json:"UserXianWin,omitempty"`
	HeWin                int64    `protobuf:"varint,6,opt,name=HeWin,proto3" json:"HeWin,omitempty"`
	ZhuangDui            int64    `protobuf:"varint,7,opt,name=ZhuangDui,proto3" json:"ZhuangDui,omitempty"`
	XianDui              int64    `protobuf:"varint,8,opt,name=XianDui,proto3" json:"XianDui,omitempty"`
	UserScore            int64    `protobuf:"varint,9,opt,name=UserScore,proto3" json:"UserScore,omitempty"`
	BetArea              []int64  `protobuf:"varint,10,rep,packed,name=BetArea,proto3" json:"BetArea,omitempty"`
	UserBet              []int64  `protobuf:"varint,12,rep,packed,name=UserBet,proto3" json:"UserBet,omitempty"`
	TotalWin             int64    `protobuf:"varint,15,opt,name=TotalWin,proto3" json:"TotalWin,omitempty"`
	IsZhuangDui          bool     `protobuf:"varint,16,opt,name=IsZhuangDui,proto3" json:"IsZhuangDui,omitempty"`
	IsXianDui            bool     `protobuf:"varint,17,opt,name=IsXianDui,proto3" json:"IsXianDui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleMsg) Reset()         { *m = SettleMsg{} }
func (m *SettleMsg) String() string { return proto.CompactTextString(m) }
func (*SettleMsg) ProtoMessage()    {}
func (*SettleMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{9}
}

func (m *SettleMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleMsg.Unmarshal(m, b)
}
func (m *SettleMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleMsg.Marshal(b, m, deterministic)
}
func (m *SettleMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleMsg.Merge(m, src)
}
func (m *SettleMsg) XXX_Size() int {
	return xxx_messageInfo_SettleMsg.Size(m)
}
func (m *SettleMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SettleMsg proto.InternalMessageInfo

func (m *SettleMsg) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *SettleMsg) GetUserZhuangWin() int64 {
	if m != nil {
		return m.UserZhuangWin
	}
	return 0
}

func (m *SettleMsg) GetUserXianWin() int64 {
	if m != nil {
		return m.UserXianWin
	}
	return 0
}

func (m *SettleMsg) GetHeWin() int64 {
	if m != nil {
		return m.HeWin
	}
	return 0
}

func (m *SettleMsg) GetZhuangDui() int64 {
	if m != nil {
		return m.ZhuangDui
	}
	return 0
}

func (m *SettleMsg) GetXianDui() int64 {
	if m != nil {
		return m.XianDui
	}
	return 0
}

func (m *SettleMsg) GetUserScore() int64 {
	if m != nil {
		return m.UserScore
	}
	return 0
}

func (m *SettleMsg) GetBetArea() []int64 {
	if m != nil {
		return m.BetArea
	}
	return nil
}

func (m *SettleMsg) GetUserBet() []int64 {
	if m != nil {
		return m.UserBet
	}
	return nil
}

func (m *SettleMsg) GetTotalWin() int64 {
	if m != nil {
		return m.TotalWin
	}
	return 0
}

func (m *SettleMsg) GetIsZhuangDui() bool {
	if m != nil {
		return m.IsZhuangDui
	}
	return false
}

func (m *SettleMsg) GetIsXianDui() bool {
	if m != nil {
		return m.IsXianDui
	}
	return false
}

type SceneBetInfo struct {
	BetArea              []int64  `protobuf:"varint,1,rep,packed,name=BetArea,proto3" json:"BetArea,omitempty"`
	UserBet              []int64  `protobuf:"varint,4,rep,packed,name=UserBet,proto3" json:"UserBet,omitempty"`
	UserBetTotal         int64    `protobuf:"varint,7,opt,name=UserBetTotal,proto3" json:"UserBetTotal,omitempty"`
	MasterBetType        int32    `protobuf:"varint,8,opt,name=MasterBetType,proto3" json:"MasterBetType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SceneBetInfo) Reset()         { *m = SceneBetInfo{} }
func (m *SceneBetInfo) String() string { return proto.CompactTextString(m) }
func (*SceneBetInfo) ProtoMessage()    {}
func (*SceneBetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{10}
}

func (m *SceneBetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneBetInfo.Unmarshal(m, b)
}
func (m *SceneBetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneBetInfo.Marshal(b, m, deterministic)
}
func (m *SceneBetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneBetInfo.Merge(m, src)
}
func (m *SceneBetInfo) XXX_Size() int {
	return xxx_messageInfo_SceneBetInfo.Size(m)
}
func (m *SceneBetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneBetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SceneBetInfo proto.InternalMessageInfo

func (m *SceneBetInfo) GetBetArea() []int64 {
	if m != nil {
		return m.BetArea
	}
	return nil
}

func (m *SceneBetInfo) GetUserBet() []int64 {
	if m != nil {
		return m.UserBet
	}
	return nil
}

func (m *SceneBetInfo) GetUserBetTotal() int64 {
	if m != nil {
		return m.UserBetTotal
	}
	return 0
}

func (m *SceneBetInfo) GetMasterBetType() int32 {
	if m != nil {
		return m.MasterBetType
	}
	return 0
}

type OneTrend struct {
	Win                  int32    `protobuf:"varint,1,opt,name=Win,proto3" json:"Win,omitempty"`
	IsZhuangDui          bool     `protobuf:"varint,2,opt,name=IsZhuangDui,proto3" json:"IsZhuangDui,omitempty"`
	IsXianDui            bool     `protobuf:"varint,3,opt,name=IsXianDui,proto3" json:"IsXianDui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneTrend) Reset()         { *m = OneTrend{} }
func (m *OneTrend) String() string { return proto.CompactTextString(m) }
func (*OneTrend) ProtoMessage()    {}
func (*OneTrend) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{11}
}

func (m *OneTrend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneTrend.Unmarshal(m, b)
}
func (m *OneTrend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneTrend.Marshal(b, m, deterministic)
}
func (m *OneTrend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneTrend.Merge(m, src)
}
func (m *OneTrend) XXX_Size() int {
	return xxx_messageInfo_OneTrend.Size(m)
}
func (m *OneTrend) XXX_DiscardUnknown() {
	xxx_messageInfo_OneTrend.DiscardUnknown(m)
}

var xxx_messageInfo_OneTrend proto.InternalMessageInfo

func (m *OneTrend) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *OneTrend) GetIsZhuangDui() bool {
	if m != nil {
		return m.IsZhuangDui
	}
	return false
}

func (m *OneTrend) GetIsXianDui() bool {
	if m != nil {
		return m.IsXianDui
	}
	return false
}

type Trend struct {
	Info                 []*OneTrend `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Trend) Reset()         { *m = Trend{} }
func (m *Trend) String() string { return proto.CompactTextString(m) }
func (*Trend) ProtoMessage()    {}
func (*Trend) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{12}
}

func (m *Trend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trend.Unmarshal(m, b)
}
func (m *Trend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trend.Marshal(b, m, deterministic)
}
func (m *Trend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trend.Merge(m, src)
}
func (m *Trend) XXX_Size() int {
	return xxx_messageInfo_Trend.Size(m)
}
func (m *Trend) XXX_DiscardUnknown() {
	xxx_messageInfo_Trend.DiscardUnknown(m)
}

var xxx_messageInfo_Trend proto.InternalMessageInfo

func (m *Trend) GetInfo() []*OneTrend {
	if m != nil {
		return m.Info
	}
	return nil
}

type UserInfo struct {
	NikeName             string   `protobuf:"bytes,1,opt,name=NikeName,proto3" json:"NikeName,omitempty"`
	UserGlod             int64    `protobuf:"varint,2,opt,name=UserGlod,proto3" json:"UserGlod,omitempty"`
	BetGold              int64    `protobuf:"varint,3,opt,name=BetGold,proto3" json:"BetGold,omitempty"`
	WinCount             int32    `protobuf:"varint,4,opt,name=WinCount,proto3" json:"WinCount,omitempty"`
	Head                 string   `protobuf:"bytes,5,opt,name=Head,proto3" json:"Head,omitempty"`
	Icon                 int32    `protobuf:"varint,6,opt,name=icon,proto3" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{13}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetNikeName() string {
	if m != nil {
		return m.NikeName
	}
	return ""
}

func (m *UserInfo) GetUserGlod() int64 {
	if m != nil {
		return m.UserGlod
	}
	return 0
}

func (m *UserInfo) GetBetGold() int64 {
	if m != nil {
		return m.BetGold
	}
	return 0
}

func (m *UserInfo) GetWinCount() int32 {
	if m != nil {
		return m.WinCount
	}
	return 0
}

func (m *UserInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *UserInfo) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

//用户列表
type UserList struct {
	UserList             []*UserInfo `protobuf:"bytes,1,rep,name=UserList,proto3" json:"UserList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserList) Reset()         { *m = UserList{} }
func (m *UserList) String() string { return proto.CompactTextString(m) }
func (*UserList) ProtoMessage()    {}
func (*UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{14}
}

func (m *UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserList.Unmarshal(m, b)
}
func (m *UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserList.Marshal(b, m, deterministic)
}
func (m *UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserList.Merge(m, src)
}
func (m *UserList) XXX_Size() int {
	return xxx_messageInfo_UserList.Size(m)
}
func (m *UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_UserList proto.InternalMessageInfo

func (m *UserList) GetUserList() []*UserInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

type SceneUserInfo struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SceneSeatID          int32    `protobuf:"varint,2,opt,name=SceneSeatID,proto3" json:"SceneSeatID,omitempty"`
	ZhuangWin            int64    `protobuf:"varint,3,opt,name=ZhuangWin,proto3" json:"ZhuangWin,omitempty"`
	XianWin              int64    `protobuf:"varint,4,opt,name=XianWin,proto3" json:"XianWin,omitempty"`
	HeWin                int64    `protobuf:"varint,5,opt,name=HeWin,proto3" json:"HeWin,omitempty"`
	ZhuangDui            int64    `protobuf:"varint,6,opt,name=ZhuangDui,proto3" json:"ZhuangDui,omitempty"`
	XianDui              int64    `protobuf:"varint,7,opt,name=XianDui,proto3" json:"XianDui,omitempty"`
	UserScore            int64    `protobuf:"varint,8,opt,name=UserScore,proto3" json:"UserScore,omitempty"`
	TotalWin             int64    `protobuf:"varint,9,opt,name=TotalWin,proto3" json:"TotalWin,omitempty"`
	BetArea              []int64  `protobuf:"varint,10,rep,packed,name=BetArea,proto3" json:"BetArea,omitempty"`
	UserBet              []int64  `protobuf:"varint,11,rep,packed,name=UserBet,proto3" json:"UserBet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SceneUserInfo) Reset()         { *m = SceneUserInfo{} }
func (m *SceneUserInfo) String() string { return proto.CompactTextString(m) }
func (*SceneUserInfo) ProtoMessage()    {}
func (*SceneUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{15}
}

func (m *SceneUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneUserInfo.Unmarshal(m, b)
}
func (m *SceneUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneUserInfo.Marshal(b, m, deterministic)
}
func (m *SceneUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneUserInfo.Merge(m, src)
}
func (m *SceneUserInfo) XXX_Size() int {
	return xxx_messageInfo_SceneUserInfo.Size(m)
}
func (m *SceneUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SceneUserInfo proto.InternalMessageInfo

func (m *SceneUserInfo) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *SceneUserInfo) GetSceneSeatID() int32 {
	if m != nil {
		return m.SceneSeatID
	}
	return 0
}

func (m *SceneUserInfo) GetZhuangWin() int64 {
	if m != nil {
		return m.ZhuangWin
	}
	return 0
}

func (m *SceneUserInfo) GetXianWin() int64 {
	if m != nil {
		return m.XianWin
	}
	return 0
}

func (m *SceneUserInfo) GetHeWin() int64 {
	if m != nil {
		return m.HeWin
	}
	return 0
}

func (m *SceneUserInfo) GetZhuangDui() int64 {
	if m != nil {
		return m.ZhuangDui
	}
	return 0
}

func (m *SceneUserInfo) GetXianDui() int64 {
	if m != nil {
		return m.XianDui
	}
	return 0
}

func (m *SceneUserInfo) GetUserScore() int64 {
	if m != nil {
		return m.UserScore
	}
	return 0
}

func (m *SceneUserInfo) GetTotalWin() int64 {
	if m != nil {
		return m.TotalWin
	}
	return 0
}

func (m *SceneUserInfo) GetBetArea() []int64 {
	if m != nil {
		return m.BetArea
	}
	return nil
}

func (m *SceneUserInfo) GetUserBet() []int64 {
	if m != nil {
		return m.UserBet
	}
	return nil
}

//场景上的玩家结算信息
type SceneUserSettle struct {
	UserList             []*SceneUserInfo `protobuf:"bytes,1,rep,name=UserList,proto3" json:"UserList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SceneUserSettle) Reset()         { *m = SceneUserSettle{} }
func (m *SceneUserSettle) String() string { return proto.CompactTextString(m) }
func (*SceneUserSettle) ProtoMessage()    {}
func (*SceneUserSettle) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{16}
}

func (m *SceneUserSettle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneUserSettle.Unmarshal(m, b)
}
func (m *SceneUserSettle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneUserSettle.Marshal(b, m, deterministic)
}
func (m *SceneUserSettle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneUserSettle.Merge(m, src)
}
func (m *SceneUserSettle) XXX_Size() int {
	return xxx_messageInfo_SceneUserSettle.Size(m)
}
func (m *SceneUserSettle) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneUserSettle.DiscardUnknown(m)
}

var xxx_messageInfo_SceneUserSettle proto.InternalMessageInfo

func (m *SceneUserSettle) GetUserList() []*SceneUserInfo {
	if m != nil {
		return m.UserList
	}
	return nil
}

type ExitFail struct {
	FailReason           string   `protobuf:"bytes,1,opt,name=FailReason,proto3" json:"FailReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExitFail) Reset()         { *m = ExitFail{} }
func (m *ExitFail) String() string { return proto.CompactTextString(m) }
func (*ExitFail) ProtoMessage()    {}
func (*ExitFail) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{17}
}

func (m *ExitFail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitFail.Unmarshal(m, b)
}
func (m *ExitFail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitFail.Marshal(b, m, deterministic)
}
func (m *ExitFail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitFail.Merge(m, src)
}
func (m *ExitFail) XXX_Size() int {
	return xxx_messageInfo_ExitFail.Size(m)
}
func (m *ExitFail) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitFail.DiscardUnknown(m)
}

var xxx_messageInfo_ExitFail proto.InternalMessageInfo

func (m *ExitFail) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

type KickOutUserMsg struct {
	KickOutReason        string   `protobuf:"bytes,1,opt,name=KickOutReason,proto3" json:"KickOutReason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickOutUserMsg) Reset()         { *m = KickOutUserMsg{} }
func (m *KickOutUserMsg) String() string { return proto.CompactTextString(m) }
func (*KickOutUserMsg) ProtoMessage()    {}
func (*KickOutUserMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{18}
}

func (m *KickOutUserMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickOutUserMsg.Unmarshal(m, b)
}
func (m *KickOutUserMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickOutUserMsg.Marshal(b, m, deterministic)
}
func (m *KickOutUserMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickOutUserMsg.Merge(m, src)
}
func (m *KickOutUserMsg) XXX_Size() int {
	return xxx_messageInfo_KickOutUserMsg.Size(m)
}
func (m *KickOutUserMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_KickOutUserMsg.DiscardUnknown(m)
}

var xxx_messageInfo_KickOutUserMsg proto.InternalMessageInfo

func (m *KickOutUserMsg) GetKickOutReason() string {
	if m != nil {
		return m.KickOutReason
	}
	return ""
}

type RoomRolesInfoMsg struct {
	BetArr               []int32  `protobuf:"varint,1,rep,packed,name=BetArr,proto3" json:"BetArr,omitempty"`
	UserBetLimit         int32    `protobuf:"varint,2,opt,name=UserBetLimit,proto3" json:"UserBetLimit,omitempty"`
	BetMinLimit          int64    `protobuf:"varint,3,opt,name=BetMinLimit,proto3" json:"BetMinLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomRolesInfoMsg) Reset()         { *m = RoomRolesInfoMsg{} }
func (m *RoomRolesInfoMsg) String() string { return proto.CompactTextString(m) }
func (*RoomRolesInfoMsg) ProtoMessage()    {}
func (*RoomRolesInfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{19}
}

func (m *RoomRolesInfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomRolesInfoMsg.Unmarshal(m, b)
}
func (m *RoomRolesInfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomRolesInfoMsg.Marshal(b, m, deterministic)
}
func (m *RoomRolesInfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomRolesInfoMsg.Merge(m, src)
}
func (m *RoomRolesInfoMsg) XXX_Size() int {
	return xxx_messageInfo_RoomRolesInfoMsg.Size(m)
}
func (m *RoomRolesInfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomRolesInfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_RoomRolesInfoMsg proto.InternalMessageInfo

func (m *RoomRolesInfoMsg) GetBetArr() []int32 {
	if m != nil {
		return m.BetArr
	}
	return nil
}

func (m *RoomRolesInfoMsg) GetUserBetLimit() int32 {
	if m != nil {
		return m.UserBetLimit
	}
	return 0
}

func (m *RoomRolesInfoMsg) GetBetMinLimit() int64 {
	if m != nil {
		return m.BetMinLimit
	}
	return 0
}

//次消息一秒一次
type RoomSenceInfoMsg struct {
	RoomID               int64          `protobuf:"varint,1,opt,name=RoomID,proto3" json:"RoomID,omitempty"`
	TrendList            *Trend         `protobuf:"bytes,2,opt,name=TrendList,proto3" json:"TrendList,omitempty"`
	GameStatus           *StatusMessage `protobuf:"bytes,3,opt,name=GameStatus,proto3" json:"GameStatus,omitempty"`
	BaseBet              int64          `protobuf:"varint,4,opt,name=BaseBet,proto3" json:"BaseBet,omitempty"`
	UserLimit            int64          `protobuf:"varint,5,opt,name=UserLimit,proto3" json:"UserLimit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RoomSenceInfoMsg) Reset()         { *m = RoomSenceInfoMsg{} }
func (m *RoomSenceInfoMsg) String() string { return proto.CompactTextString(m) }
func (*RoomSenceInfoMsg) ProtoMessage()    {}
func (*RoomSenceInfoMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{20}
}

func (m *RoomSenceInfoMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomSenceInfoMsg.Unmarshal(m, b)
}
func (m *RoomSenceInfoMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomSenceInfoMsg.Marshal(b, m, deterministic)
}
func (m *RoomSenceInfoMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomSenceInfoMsg.Merge(m, src)
}
func (m *RoomSenceInfoMsg) XXX_Size() int {
	return xxx_messageInfo_RoomSenceInfoMsg.Size(m)
}
func (m *RoomSenceInfoMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomSenceInfoMsg.DiscardUnknown(m)
}

var xxx_messageInfo_RoomSenceInfoMsg proto.InternalMessageInfo

func (m *RoomSenceInfoMsg) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoomSenceInfoMsg) GetTrendList() *Trend {
	if m != nil {
		return m.TrendList
	}
	return nil
}

func (m *RoomSenceInfoMsg) GetGameStatus() *StatusMessage {
	if m != nil {
		return m.GameStatus
	}
	return nil
}

func (m *RoomSenceInfoMsg) GetBaseBet() int64 {
	if m != nil {
		return m.BaseBet
	}
	return 0
}

func (m *RoomSenceInfoMsg) GetUserLimit() int64 {
	if m != nil {
		return m.UserLimit
	}
	return 0
}

//牌的数量
type PokerCount struct {
	Count                int32    `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PokerCount) Reset()         { *m = PokerCount{} }
func (m *PokerCount) String() string { return proto.CompactTextString(m) }
func (*PokerCount) ProtoMessage()    {}
func (*PokerCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{21}
}

func (m *PokerCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PokerCount.Unmarshal(m, b)
}
func (m *PokerCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PokerCount.Marshal(b, m, deterministic)
}
func (m *PokerCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PokerCount.Merge(m, src)
}
func (m *PokerCount) XXX_Size() int {
	return xxx_messageInfo_PokerCount.Size(m)
}
func (m *PokerCount) XXX_DiscardUnknown() {
	xxx_messageInfo_PokerCount.DiscardUnknown(m)
}

var xxx_messageInfo_PokerCount proto.InternalMessageInfo

func (m *PokerCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

//咪牌的用户消息
type MiPaiUserInfo struct {
	ZhuangSeatID         int32    `protobuf:"varint,1,opt,name=ZhuangSeatID,proto3" json:"ZhuangSeatID,omitempty"`
	XianSeatID           int32    `protobuf:"varint,2,opt,name=XianSeatID,proto3" json:"XianSeatID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MiPaiUserInfo) Reset()         { *m = MiPaiUserInfo{} }
func (m *MiPaiUserInfo) String() string { return proto.CompactTextString(m) }
func (*MiPaiUserInfo) ProtoMessage()    {}
func (*MiPaiUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{22}
}

func (m *MiPaiUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiPaiUserInfo.Unmarshal(m, b)
}
func (m *MiPaiUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiPaiUserInfo.Marshal(b, m, deterministic)
}
func (m *MiPaiUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiPaiUserInfo.Merge(m, src)
}
func (m *MiPaiUserInfo) XXX_Size() int {
	return xxx_messageInfo_MiPaiUserInfo.Size(m)
}
func (m *MiPaiUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MiPaiUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MiPaiUserInfo proto.InternalMessageInfo

func (m *MiPaiUserInfo) GetZhuangSeatID() int32 {
	if m != nil {
		return m.ZhuangSeatID
	}
	return 0
}

func (m *MiPaiUserInfo) GetXianSeatID() int32 {
	if m != nil {
		return m.XianSeatID
	}
	return 0
}

// 前两张牌为一套操作，后一张牌为一套操作
// 初始化/咪牌同步位置
type MiPaiSynPosMsg struct {
	PosInfo              []*PosInfo `protobuf:"bytes,1,rep,name=posInfo,proto3" json:"posInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MiPaiSynPosMsg) Reset()         { *m = MiPaiSynPosMsg{} }
func (m *MiPaiSynPosMsg) String() string { return proto.CompactTextString(m) }
func (*MiPaiSynPosMsg) ProtoMessage()    {}
func (*MiPaiSynPosMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{23}
}

func (m *MiPaiSynPosMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiPaiSynPosMsg.Unmarshal(m, b)
}
func (m *MiPaiSynPosMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiPaiSynPosMsg.Marshal(b, m, deterministic)
}
func (m *MiPaiSynPosMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiPaiSynPosMsg.Merge(m, src)
}
func (m *MiPaiSynPosMsg) XXX_Size() int {
	return xxx_messageInfo_MiPaiSynPosMsg.Size(m)
}
func (m *MiPaiSynPosMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_MiPaiSynPosMsg.DiscardUnknown(m)
}

var xxx_messageInfo_MiPaiSynPosMsg proto.InternalMessageInfo

func (m *MiPaiSynPosMsg) GetPosInfo() []*PosInfo {
	if m != nil {
		return m.PosInfo
	}
	return nil
}

type PosInfo struct {
	PrePos               map[string]int32 `protobuf:"bytes,1,rep,name=PrePos,proto3" json:"PrePos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	EndPosPos            map[string]int32 `protobuf:"bytes,2,rep,name=EndPosPos,proto3" json:"EndPosPos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UserID               int64            `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsOpen               bool             `protobuf:"varint,4,opt,name=isOpen,proto3" json:"isOpen,omitempty"`
	CurMiId              int32            `protobuf:"varint,5,opt,name=CurMiId,proto3" json:"CurMiId,omitempty"`
	CurCardId            int32            `protobuf:"varint,6,opt,name=CurCardId,proto3" json:"CurCardId,omitempty"`
	StartPos             map[string]int32 `protobuf:"bytes,7,rep,name=StartPos,proto3" json:"StartPos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	IsLeave              bool             `protobuf:"varint,8,opt,name=isLeave,proto3" json:"isLeave,omitempty"`
	MoveVec              map[string]int32 `protobuf:"bytes,9,rep,name=MoveVec,proto3" json:"MoveVec,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PosInfo) Reset()         { *m = PosInfo{} }
func (m *PosInfo) String() string { return proto.CompactTextString(m) }
func (*PosInfo) ProtoMessage()    {}
func (*PosInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{24}
}

func (m *PosInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PosInfo.Unmarshal(m, b)
}
func (m *PosInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PosInfo.Marshal(b, m, deterministic)
}
func (m *PosInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PosInfo.Merge(m, src)
}
func (m *PosInfo) XXX_Size() int {
	return xxx_messageInfo_PosInfo.Size(m)
}
func (m *PosInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PosInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PosInfo proto.InternalMessageInfo

func (m *PosInfo) GetPrePos() map[string]int32 {
	if m != nil {
		return m.PrePos
	}
	return nil
}

func (m *PosInfo) GetEndPosPos() map[string]int32 {
	if m != nil {
		return m.EndPosPos
	}
	return nil
}

func (m *PosInfo) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *PosInfo) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *PosInfo) GetCurMiId() int32 {
	if m != nil {
		return m.CurMiId
	}
	return 0
}

func (m *PosInfo) GetCurCardId() int32 {
	if m != nil {
		return m.CurCardId
	}
	return 0
}

func (m *PosInfo) GetStartPos() map[string]int32 {
	if m != nil {
		return m.StartPos
	}
	return nil
}

func (m *PosInfo) GetIsLeave() bool {
	if m != nil {
		return m.IsLeave
	}
	return false
}

func (m *PosInfo) GetMoveVec() map[string]int32 {
	if m != nil {
		return m.MoveVec
	}
	return nil
}

// 场景中
// 某张牌已经翻开时 客户端发送给服务端
// 表示是否翻牌
type IsOpen struct {
	ZhuangOpen           []bool   `protobuf:"varint,1,rep,packed,name=ZhuangOpen,proto3" json:"ZhuangOpen,omitempty"`
	XianOpen             []bool   `protobuf:"varint,2,rep,packed,name=XianOpen,proto3" json:"XianOpen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsOpen) Reset()         { *m = IsOpen{} }
func (m *IsOpen) String() string { return proto.CompactTextString(m) }
func (*IsOpen) ProtoMessage()    {}
func (*IsOpen) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{25}
}

func (m *IsOpen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsOpen.Unmarshal(m, b)
}
func (m *IsOpen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsOpen.Marshal(b, m, deterministic)
}
func (m *IsOpen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsOpen.Merge(m, src)
}
func (m *IsOpen) XXX_Size() int {
	return xxx_messageInfo_IsOpen.Size(m)
}
func (m *IsOpen) XXX_DiscardUnknown() {
	xxx_messageInfo_IsOpen.DiscardUnknown(m)
}

var xxx_messageInfo_IsOpen proto.InternalMessageInfo

func (m *IsOpen) GetZhuangOpen() []bool {
	if m != nil {
		return m.ZhuangOpen
	}
	return nil
}

func (m *IsOpen) GetXianOpen() []bool {
	if m != nil {
		return m.XianOpen
	}
	return nil
}

type MiPai struct {
	Pai                  []*RobotMiMsgDan `protobuf:"bytes,1,rep,name=Pai,proto3" json:"Pai,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MiPai) Reset()         { *m = MiPai{} }
func (m *MiPai) String() string { return proto.CompactTextString(m) }
func (*MiPai) ProtoMessage()    {}
func (*MiPai) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{26}
}

func (m *MiPai) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiPai.Unmarshal(m, b)
}
func (m *MiPai) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiPai.Marshal(b, m, deterministic)
}
func (m *MiPai) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiPai.Merge(m, src)
}
func (m *MiPai) XXX_Size() int {
	return xxx_messageInfo_MiPai.Size(m)
}
func (m *MiPai) XXX_DiscardUnknown() {
	xxx_messageInfo_MiPai.DiscardUnknown(m)
}

var xxx_messageInfo_MiPai proto.InternalMessageInfo

func (m *MiPai) GetPai() []*RobotMiMsgDan {
	if m != nil {
		return m.Pai
	}
	return nil
}

// 机器人单张咪牌动作
type RobotMiMsgDan struct {
	PosIndex             int32    `protobuf:"varint,1,opt,name=posIndex,proto3" json:"posIndex,omitempty"`
	Action               int32    `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RobotMiMsgDan) Reset()         { *m = RobotMiMsgDan{} }
func (m *RobotMiMsgDan) String() string { return proto.CompactTextString(m) }
func (*RobotMiMsgDan) ProtoMessage()    {}
func (*RobotMiMsgDan) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{27}
}

func (m *RobotMiMsgDan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RobotMiMsgDan.Unmarshal(m, b)
}
func (m *RobotMiMsgDan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RobotMiMsgDan.Marshal(b, m, deterministic)
}
func (m *RobotMiMsgDan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RobotMiMsgDan.Merge(m, src)
}
func (m *RobotMiMsgDan) XXX_Size() int {
	return xxx_messageInfo_RobotMiMsgDan.Size(m)
}
func (m *RobotMiMsgDan) XXX_DiscardUnknown() {
	xxx_messageInfo_RobotMiMsgDan.DiscardUnknown(m)
}

var xxx_messageInfo_RobotMiMsgDan proto.InternalMessageInfo

func (m *RobotMiMsgDan) GetPosIndex() int32 {
	if m != nil {
		return m.PosIndex
	}
	return 0
}

func (m *RobotMiMsgDan) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

// 全部眯完  客户端发送给服务端；时间到了就不发
type MiEnd struct {
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	IsEnd                bool     `protobuf:"varint,1,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MiEnd) Reset()         { *m = MiEnd{} }
func (m *MiEnd) String() string { return proto.CompactTextString(m) }
func (*MiEnd) ProtoMessage()    {}
func (*MiEnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{28}
}

func (m *MiEnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MiEnd.Unmarshal(m, b)
}
func (m *MiEnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MiEnd.Marshal(b, m, deterministic)
}
func (m *MiEnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MiEnd.Merge(m, src)
}
func (m *MiEnd) XXX_Size() int {
	return xxx_messageInfo_MiEnd.Size(m)
}
func (m *MiEnd) XXX_DiscardUnknown() {
	xxx_messageInfo_MiEnd.DiscardUnknown(m)
}

var xxx_messageInfo_MiEnd proto.InternalMessageInfo

func (m *MiEnd) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MiEnd) GetIsEnd() bool {
	if m != nil {
		return m.IsEnd
	}
	return false
}

//测试
type TempCardMsg struct {
	ZhuangPoker          []byte   `protobuf:"bytes,1,opt,name=ZhuangPoker,proto3" json:"ZhuangPoker,omitempty"`
	XianPoker            []byte   `protobuf:"bytes,2,opt,name=XianPoker,proto3" json:"XianPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TempCardMsg) Reset()         { *m = TempCardMsg{} }
func (m *TempCardMsg) String() string { return proto.CompactTextString(m) }
func (*TempCardMsg) ProtoMessage()    {}
func (*TempCardMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{29}
}

func (m *TempCardMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TempCardMsg.Unmarshal(m, b)
}
func (m *TempCardMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TempCardMsg.Marshal(b, m, deterministic)
}
func (m *TempCardMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TempCardMsg.Merge(m, src)
}
func (m *TempCardMsg) XXX_Size() int {
	return xxx_messageInfo_TempCardMsg.Size(m)
}
func (m *TempCardMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_TempCardMsg.DiscardUnknown(m)
}

var xxx_messageInfo_TempCardMsg proto.InternalMessageInfo

func (m *TempCardMsg) GetZhuangPoker() []byte {
	if m != nil {
		return m.ZhuangPoker
	}
	return nil
}

func (m *TempCardMsg) GetXianPoker() []byte {
	if m != nil {
		return m.XianPoker
	}
	return nil
}

type SceneGoldMsg struct {
	Gold                 int64    `protobuf:"varint,1,opt,name=Gold,proto3" json:"Gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SceneGoldMsg) Reset()         { *m = SceneGoldMsg{} }
func (m *SceneGoldMsg) String() string { return proto.CompactTextString(m) }
func (*SceneGoldMsg) ProtoMessage()    {}
func (*SceneGoldMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_e063c5ee44f4ee1a, []int{30}
}

func (m *SceneGoldMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SceneGoldMsg.Unmarshal(m, b)
}
func (m *SceneGoldMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SceneGoldMsg.Marshal(b, m, deterministic)
}
func (m *SceneGoldMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SceneGoldMsg.Merge(m, src)
}
func (m *SceneGoldMsg) XXX_Size() int {
	return xxx_messageInfo_SceneGoldMsg.Size(m)
}
func (m *SceneGoldMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SceneGoldMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SceneGoldMsg proto.InternalMessageInfo

func (m *SceneGoldMsg) GetGold() int64 {
	if m != nil {
		return m.Gold
	}
	return 0
}

func init() {
	proto.RegisterEnum("ReceiveMessageType", ReceiveMessageType_name, ReceiveMessageType_value)
	proto.RegisterEnum("SendToClientMessageType", SendToClientMessageType_name, SendToClientMessageType_value)
	proto.RegisterEnum("GameStatus", GameStatus_name, GameStatus_value)
	proto.RegisterType((*StatusMessage)(nil), "StatusMessage")
	proto.RegisterType((*BetFailMessage)(nil), "BetFailMessage")
	proto.RegisterType((*BetSuccessMessage)(nil), "BetSuccessMessage")
	proto.RegisterType((*Bet)(nil), "Bet")
	proto.RegisterType((*SeatUser)(nil), "SeatUser")
	proto.RegisterType((*SceneMessage)(nil), "SceneMessage")
	proto.RegisterType((*UserSitDown)(nil), "UserSitDown")
	proto.RegisterType((*UserSitDownFail)(nil), "UserSitDownFail")
	proto.RegisterType((*PokerMsg)(nil), "PokerMsg")
	proto.RegisterType((*SettleMsg)(nil), "SettleMsg")
	proto.RegisterType((*SceneBetInfo)(nil), "SceneBetInfo")
	proto.RegisterType((*OneTrend)(nil), "OneTrend")
	proto.RegisterType((*Trend)(nil), "Trend")
	proto.RegisterType((*UserInfo)(nil), "UserInfo")
	proto.RegisterType((*UserList)(nil), "UserList")
	proto.RegisterType((*SceneUserInfo)(nil), "SceneUserInfo")
	proto.RegisterType((*SceneUserSettle)(nil), "SceneUserSettle")
	proto.RegisterType((*ExitFail)(nil), "ExitFail")
	proto.RegisterType((*KickOutUserMsg)(nil), "KickOutUserMsg")
	proto.RegisterType((*RoomRolesInfoMsg)(nil), "RoomRolesInfoMsg")
	proto.RegisterType((*RoomSenceInfoMsg)(nil), "RoomSenceInfoMsg")
	proto.RegisterType((*PokerCount)(nil), "PokerCount")
	proto.RegisterType((*MiPaiUserInfo)(nil), "MiPaiUserInfo")
	proto.RegisterType((*MiPaiSynPosMsg)(nil), "MiPaiSynPosMsg")
	proto.RegisterType((*PosInfo)(nil), "posInfo")
	proto.RegisterMapType((map[string]int32)(nil), "posInfo.EndPosPosEntry")
	proto.RegisterMapType((map[string]int32)(nil), "posInfo.MoveVecEntry")
	proto.RegisterMapType((map[string]int32)(nil), "posInfo.PrePosEntry")
	proto.RegisterMapType((map[string]int32)(nil), "posInfo.StartPosEntry")
	proto.RegisterType((*IsOpen)(nil), "IsOpen")
	proto.RegisterType((*MiPai)(nil), "MiPai")
	proto.RegisterType((*RobotMiMsgDan)(nil), "robotMiMsgDan")
	proto.RegisterType((*MiEnd)(nil), "MiEnd")
	proto.RegisterType((*TempCardMsg)(nil), "tempCardMsg")
	proto.RegisterType((*SceneGoldMsg)(nil), "SceneGoldMsg")
}

func init() { proto.RegisterFile("mibaijiale.proto", fileDescriptor_e063c5ee44f4ee1a) }

var fileDescriptor_e063c5ee44f4ee1a = []byte{
	// 1860 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0xcd, 0x72, 0x1c, 0x49,
	0x11, 0xde, 0x9e, 0x9e, 0x9f, 0xee, 0x9c, 0x1f, 0x95, 0xcb, 0x46, 0x9e, 0x70, 0x2c, 0xa0, 0xe8,
	0x30, 0x20, 0x14, 0xc4, 0xc0, 0x8a, 0xf5, 0x06, 0xec, 0xc2, 0x81, 0xd1, 0x68, 0xb5, 0x13, 0x78,
	0x6c, 0x45, 0x8f, 0x8c, 0x09, 0x82, 0x4b, 0x7b, 0xa6, 0x56, 0x2e, 0x34, 0xea, 0x16, 0xdd, 0x3d,
	0xda, 0xf5, 0x3b, 0xf0, 0x04, 0x04, 0x07, 0x0e, 0x3c, 0x04, 0x17, 0x0e, 0x7b, 0x22, 0x78, 0x0c,
	0xde, 0x84, 0xc8, 0xcc, 0xaa, 0xee, 0x6a, 0xc9, 0x2b, 0xd6, 0x11, 0x7b, 0x9a, 0xce, 0x2f, 0x33,
	0xab, 0xb2, 0xf2, 0xb7, 0x6a, 0x40, 0x5c, 0xea, 0x57, 0x89, 0xfe, 0x93, 0x4e, 0x36, 0x6a, 0x72,
	0x95, 0x67, 0x65, 0x16, 0xfd, 0x19, 0x86, 0xcb, 0x32, 0x29, 0xb7, 0xc5, 0x42, 0x15, 0x45, 0x72,
	0xae, 0xe4, 0x2e, 0x74, 0x19, 0x18, 0x7b, 0x7b, 0xde, 0x7e, 0x27, 0x36, 0x94, 0xfc, 0x1e, 0x00,
	0x7f, 0x9d, 0xe9, 0x4b, 0x35, 0x6e, 0x11, 0xcf, 0x41, 0xe4, 0x3e, 0xec, 0x9c, 0x65, 0x65, 0xb2,
	0x71, 0x84, 0x7c, 0x12, 0xba, 0x09, 0x47, 0x87, 0x30, 0x9a, 0xaa, 0xf2, 0xd3, 0x44, 0x6f, 0xec,
	0x9e, 0x7b, 0xd0, 0x77, 0x48, 0xda, 0x38, 0x8c, 0x5d, 0x28, 0xfa, 0xca, 0x83, 0x7b, 0x53, 0x55,
	0x2e, 0xb7, 0xab, 0x95, 0x2a, 0x1a, 0xb6, 0xaa, 0xa4, 0x9c, 0xaf, 0x2b, 0x5b, 0x89, 0x92, 0x8f,
	0x20, 0x98, 0xaa, 0x72, 0x9e, 0xae, 0xd5, 0x97, 0xc6, 0xd2, 0x8a, 0x96, 0x63, 0xe8, 0x4d, 0x55,
	0x79, 0xf6, 0xe6, 0xca, 0xda, 0x67, 0x49, 0x5c, 0xed, 0x45, 0xa1, 0xf2, 0xf9, 0x6c, 0xdc, 0xde,
	0xf3, 0xf6, 0xfd, 0xd8, 0x50, 0xf2, 0x31, 0x0c, 0xff, 0xf0, 0x7a, 0x9b, 0xa4, 0xe7, 0x53, 0x55,
	0x9e, 0x64, 0x9b, 0xf5, 0xb8, 0x43, 0xec, 0x26, 0x88, 0x67, 0xf8, 0xbd, 0x4e, 0x52, 0x2b, 0xd3,
	0x25, 0x19, 0x17, 0x8a, 0x3e, 0x01, 0x7f, 0xaa, 0x4a, 0xd7, 0x00, 0xaf, 0x69, 0xc0, 0x1d, 0x66,
	0x47, 0xff, 0x68, 0x41, 0x80, 0xa7, 0x43, 0x9b, 0xa4, 0x84, 0xf6, 0x33, 0xbd, 0xba, 0x30, 0x8e,
	0xa2, 0x6f, 0xc4, 0x3e, 0x53, 0xc9, 0x9a, 0x14, 0xc3, 0x98, 0xbe, 0xe5, 0x03, 0xe8, 0x2c, 0x57,
	0x59, 0xce, 0x27, 0xf5, 0x63, 0x26, 0xd0, 0xd2, 0x79, 0x31, 0xd5, 0xe7, 0x2f, 0x75, 0x9a, 0xaa,
	0x9c, 0x0e, 0x1b, 0xc4, 0x2e, 0x84, 0x86, 0xcc, 0x8b, 0x45, 0x52, 0x94, 0x2a, 0xa7, 0xc3, 0x06,
	0x71, 0x45, 0x3b, 0x3e, 0xef, 0x36, 0x7c, 0x5e, 0x7b, 0xaf, 0x77, 0xb7, 0xf7, 0x82, 0x6f, 0xe0,
	0xbd, 0xf0, 0x96, 0xf7, 0x70, 0x9d, 0x79, 0xb1, 0xd0, 0x9b, 0x8d, 0xce, 0xd2, 0x44, 0xe7, 0x6a,
	0x0c, 0x64, 0x58, 0x13, 0x8c, 0x5e, 0xc0, 0x60, 0xb9, 0x52, 0xa9, 0xb2, 0x19, 0xf2, 0x03, 0x08,
	0xd0, 0x8e, 0x59, 0x52, 0x26, 0x63, 0x6f, 0xcf, 0xdf, 0xef, 0x1f, 0x86, 0x13, 0xeb, 0xc6, 0xb8,
	0x62, 0x61, 0x72, 0x9f, 0x66, 0x17, 0x2a, 0x3f, 0xca, 0xb6, 0x69, 0x69, 0x93, 0xbb, 0x46, 0xa2,
	0x1f, 0x41, 0x1f, 0x65, 0x97, 0xba, 0x9c, 0x65, 0x5f, 0xa4, 0x18, 0xc2, 0xa3, 0xd7, 0x89, 0xce,
	0x9f, 0x65, 0x36, 0x84, 0x86, 0x8c, 0x3e, 0x80, 0x1d, 0x47, 0x10, 0x33, 0x18, 0xd7, 0xc6, 0xdf,
	0x58, 0x25, 0xcb, 0x2c, 0x35, 0x21, 0x73, 0x90, 0xe8, 0x3f, 0x3e, 0x04, 0xb4, 0xd5, 0xa2, 0x38,
	0x47, 0x3f, 0xb0, 0x63, 0x08, 0x21, 0xe9, 0x41, 0xec, 0x42, 0xf2, 0x7d, 0x08, 0xd1, 0x2d, 0xcc,
	0x6f, 0x11, 0xbf, 0x06, 0xa4, 0x00, 0xff, 0xa5, 0x4e, 0x4d, 0x66, 0xe3, 0xa7, 0x3c, 0x84, 0x07,
	0xac, 0xbe, 0xd0, 0x68, 0xd9, 0x33, 0x7d, 0xa1, 0x9e, 0x25, 0x97, 0x8a, 0xc2, 0x1e, 0xc6, 0x6f,
	0xe5, 0xc9, 0x9f, 0xc1, 0x7d, 0x5c, 0xf2, 0xa6, 0x4a, 0x87, 0x54, 0xde, 0xc6, 0x92, 0x07, 0x20,
	0xdc, 0x95, 0x28, 0x13, 0xbb, 0x24, 0x7e, 0x0b, 0xc7, 0x4e, 0xe1, 0x2c, 0x41, 0xa2, 0x3d, 0x12,
	0xbd, 0x09, 0xcb, 0x09, 0x48, 0x57, 0xdb, 0xe4, 0x5d, 0x40, 0x87, 0x7b, 0x0b, 0x07, 0xad, 0xc0,
	0x25, 0x1a, 0xd2, 0x21, 0x49, 0xdf, 0xc2, 0x31, 0xc7, 0xed, 0x0a, 0x94, 0x4a, 0x7e, 0x5c, 0xd1,
	0x98, 0xcb, 0x2c, 0x3f, 0xee, 0x73, 0x2e, 0x33, 0x25, 0xbf, 0x0f, 0x5d, 0x5d, 0x3c, 0xbf, 0x52,
	0xe9, 0x78, 0xb0, 0xe7, 0xed, 0xf7, 0x0f, 0x7b, 0x93, 0x39, 0x91, 0xb1, 0x81, 0xa3, 0xff, 0xb6,
	0x20, 0x5c, 0xaa, 0xb2, 0xdc, 0x28, 0x0c, 0xe6, 0xed, 0x60, 0x3c, 0x86, 0x21, 0x9a, 0xc0, 0x1b,
	0x21, 0x8f, 0x3b, 0x4d, 0x13, 0xc4, 0x24, 0x40, 0x00, 0x37, 0x45, 0x19, 0x6e, 0x37, 0x2e, 0x84,
	0x85, 0xfd, 0x99, 0x42, 0x1e, 0xb7, 0x19, 0x26, 0x30, 0x35, 0x78, 0x91, 0xd9, 0x56, 0x9b, 0x2a,
	0xac, 0x01, 0x4c, 0x5a, 0x54, 0x47, 0x1e, 0x97, 0xa0, 0x25, 0x51, 0x8f, 0x1c, 0x43, 0xad, 0x82,
	0x4b, 0xaf, 0x06, 0x4c, 0xbf, 0xfa, 0x4d, 0xae, 0x92, 0x31, 0xec, 0xf9, 0xa8, 0x67, 0x48, 0xe4,
	0xa0, 0xd8, 0x54, 0x95, 0xe3, 0x01, 0x73, 0x0c, 0x89, 0xce, 0xa5, 0xae, 0x8f, 0x26, 0xee, 0xb0,
	0x73, 0x2d, 0xcd, 0xed, 0xa7, 0xb6, 0x53, 0xd8, 0xf6, 0x53, 0x5b, 0xfa, 0x3e, 0x84, 0xf3, 0xc2,
	0xda, 0x7a, 0x8f, 0xf8, 0x35, 0x10, 0xfd, 0xc5, 0x33, 0x35, 0x4e, 0xbd, 0xf1, 0xf3, 0xcc, 0x35,
	0xd0, 0xfb, 0x5a, 0x03, 0xdb, 0x4d, 0x03, 0x23, 0x18, 0x98, 0x4f, 0xb2, 0xcb, 0x78, 0xab, 0x81,
	0x61, 0xb0, 0xb8, 0xe7, 0xd9, 0x76, 0xcd, 0x89, 0xd7, 0x04, 0xa3, 0x3f, 0x42, 0xf0, 0x3c, 0x55,
	0x67, 0xb9, 0x4a, 0xd7, 0x36, 0xe0, 0x5e, 0x1d, 0xf0, 0x1b, 0x87, 0x6d, 0xfd, 0x9f, 0xc3, 0xfa,
	0x37, 0x0f, 0xfb, 0x43, 0xe8, 0xf0, 0xd2, 0xdf, 0x85, 0xb6, 0x4e, 0x3f, 0xcf, 0xaa, 0x26, 0x66,
	0xf7, 0x8c, 0x09, 0x8e, 0xfe, 0xee, 0x71, 0xa3, 0x23, 0x87, 0x3c, 0x82, 0xa0, 0xaa, 0x59, 0xee,
	0x37, 0x15, 0x8d, 0x3c, 0x94, 0x3b, 0xd9, 0x64, 0x3c, 0x2a, 0xfc, 0xb8, 0xa2, 0x8d, 0x23, 0xa9,
	0x01, 0xf3, 0xc0, 0xb0, 0x24, 0x6a, 0xbd, 0xd4, 0x29, 0x77, 0xc7, 0x36, 0x4f, 0x26, 0x4b, 0x57,
	0x83, 0xa7, 0xe3, 0x0c, 0x1e, 0x09, 0x6d, 0xbd, 0xca, 0x52, 0x33, 0x22, 0xe8, 0x3b, 0xfa, 0x80,
	0x77, 0x7e, 0xaa, 0x8b, 0xd2, 0xb6, 0x65, 0xfc, 0xae, 0x4e, 0x64, 0xcd, 0x8f, 0x2b, 0x56, 0xf4,
	0xaf, 0x16, 0x0c, 0x29, 0xd4, 0xd5, 0xd1, 0xea, 0x29, 0xe3, 0x35, 0xa6, 0xcc, 0x1e, 0xf4, 0x49,
	0x90, 0x8a, 0x7b, 0x66, 0x3a, 0xb8, 0x0b, 0xd5, 0xc5, 0x61, 0x4b, 0xb2, 0x2a, 0x0e, 0x8c, 0x93,
	0x29, 0x8e, 0xba, 0x24, 0x7b, 0xb7, 0x4a, 0xad, 0xf3, 0xb5, 0xa5, 0xd6, 0xbd, 0xa3, 0xd4, 0x7a,
	0x77, 0x94, 0x5a, 0x70, 0xb3, 0xd4, 0xdc, 0xb2, 0x09, 0x6f, 0x94, 0xcd, 0x37, 0x2a, 0xc3, 0x7e,
	0x23, 0xcb, 0xa3, 0x5f, 0xc3, 0x4e, 0xe5, 0x3e, 0x6e, 0x4b, 0xf2, 0xe0, 0x96, 0xe7, 0x47, 0x93,
	0x86, 0x8b, 0x1d, 0xf7, 0x1f, 0x40, 0x70, 0xfc, 0xa5, 0x2e, 0x6f, 0x4c, 0xb1, 0xe2, 0xd6, 0x14,
	0x2b, 0xb2, 0x34, 0xfa, 0x08, 0x46, 0xbf, 0xd5, 0xab, 0x8b, 0xe7, 0x5b, 0x1a, 0xad, 0xd8, 0xfd,
	0x1e, 0xc3, 0xd0, 0x20, 0x0d, 0xa5, 0x26, 0x18, 0x5d, 0x81, 0x88, 0xb3, 0xec, 0x32, 0xce, 0x36,
	0xaa, 0xc0, 0xed, 0x51, 0x73, 0x17, 0xba, 0x74, 0xb6, 0x9c, 0x2c, 0xec, 0xc4, 0x86, 0x72, 0x8a,
	0xf6, 0xa9, 0xbe, 0xd4, 0x76, 0x4e, 0x37, 0x30, 0x4c, 0x84, 0xa9, 0x2a, 0x17, 0x3a, 0x65, 0x11,
	0x0e, 0xb4, 0x0b, 0x45, 0xff, 0xf4, 0x78, 0xcb, 0xa5, 0x4a, 0x57, 0xca, 0xd9, 0x12, 0xb1, 0x3a,
	0xaf, 0x98, 0x92, 0x8f, 0x21, 0xa4, 0x32, 0x23, 0x7f, 0xb5, 0xa8, 0xe9, 0x77, 0x27, 0x5c, 0x78,
	0x35, 0x43, 0x4e, 0x00, 0x4e, 0x92, 0x4b, 0x65, 0xee, 0xcd, 0x3e, 0x89, 0x8d, 0x26, 0x8d, 0x7b,
	0x75, 0xec, 0x48, 0x50, 0x2c, 0x93, 0x42, 0x71, 0x5f, 0xe2, 0x42, 0x63, 0xd2, 0xe6, 0x07, 0x1b,
	0xdf, 0xa9, 0xf3, 0x83, 0x4d, 0x8f, 0xdc, 0x6b, 0x0a, 0x66, 0x26, 0x57, 0x24, 0xf7, 0x1b, 0x26,
	0xa2, 0x25, 0x0c, 0x17, 0xfa, 0x34, 0xd1, 0x55, 0xc9, 0x44, 0x30, 0xe0, 0xcc, 0x34, 0xb5, 0xc1,
	0xd2, 0x0d, 0x0c, 0xa3, 0x8b, 0x19, 0xda, 0xa8, 0x1e, 0x07, 0x89, 0x3e, 0x84, 0x11, 0x2d, 0xba,
	0x7c, 0x93, 0x9e, 0x66, 0x05, 0x3a, 0x2c, 0x82, 0xde, 0x55, 0x46, 0x11, 0x33, 0x69, 0x14, 0x4c,
	0x0c, 0x1d, 0x5b, 0x46, 0xf4, 0xef, 0x76, 0x25, 0x24, 0x7f, 0x02, 0xdd, 0xd3, 0x5c, 0x9d, 0x66,
	0x85, 0x11, 0x7f, 0x60, 0xc5, 0x27, 0x0c, 0x1f, 0xa7, 0x65, 0xfe, 0x26, 0x36, 0x32, 0xf2, 0x09,
	0x84, 0xc7, 0xe9, 0xfa, 0x34, 0x2b, 0x50, 0xa1, 0x45, 0x0a, 0x0f, 0x2b, 0x85, 0x8a, 0xc3, 0x3a,
	0xb5, 0xa4, 0xd3, 0x1d, 0xfc, 0x46, 0x77, 0xd8, 0xad, 0xe6, 0x36, 0x5f, 0x76, 0x0d, 0x45, 0xf7,
	0xb8, 0x6d, 0xbe, 0xd0, 0x73, 0xee, 0x5e, 0x78, 0x8f, 0x63, 0x12, 0xe3, 0x70, 0xb4, 0xcd, 0x8f,
	0x92, 0x7c, 0x5d, 0x5d, 0x74, 0x6b, 0x40, 0x1e, 0x42, 0xb0, 0x2c, 0x93, 0xbc, 0x44, 0xeb, 0x7a,
	0x64, 0xdd, 0x6e, 0x65, 0x9d, 0x65, 0xb0, 0x71, 0x95, 0x1c, 0xee, 0xa5, 0x8b, 0xa7, 0x2a, 0xb9,
	0xe6, 0xba, 0x0f, 0x62, 0x4b, 0xca, 0x9f, 0x42, 0x6f, 0x91, 0x5d, 0xab, 0xdf, 0xa9, 0xd5, 0x38,
	0xa4, 0xc5, 0xbe, 0x53, 0x2d, 0x66, 0x70, 0x5e, 0xcb, 0x4a, 0x3d, 0xfa, 0x25, 0xf4, 0x1d, 0xa7,
	0xe1, 0xd4, 0xb9, 0x50, 0x6f, 0x4c, 0x79, 0xe1, 0x27, 0x66, 0xc6, 0x75, 0xb2, 0xd9, 0xda, 0x67,
	0x1a, 0x13, 0x1f, 0xb7, 0x7e, 0xe1, 0x3d, 0xfa, 0x15, 0x8c, 0x9a, 0xee, 0x7b, 0x27, 0xed, 0x4f,
	0xe8, 0xb1, 0x58, 0x1f, 0xef, 0x9d, 0x94, 0x3f, 0x86, 0x81, 0x7b, 0x9c, 0x77, 0xd1, 0x8d, 0x66,
	0xd0, 0xe5, 0x9b, 0x16, 0x66, 0x2a, 0x67, 0x2e, 0x85, 0x13, 0x73, 0x29, 0x88, 0x1d, 0x04, 0x5b,
	0x28, 0xe6, 0x2d, 0x71, 0x5b, 0xc4, 0xad, 0xe8, 0xe8, 0xc7, 0xd0, 0xa1, 0x2c, 0x96, 0x7b, 0xe0,
	0x9f, 0x26, 0xba, 0xea, 0x7f, 0x79, 0xf6, 0x2a, 0x2b, 0x17, 0x7a, 0x51, 0x9c, 0xcf, 0x92, 0x34,
	0x46, 0x56, 0x74, 0x04, 0xc3, 0x06, 0x8a, 0xeb, 0x52, 0x50, 0xf0, 0x6d, 0xc6, 0x15, 0x54, 0xd1,
	0x98, 0x5e, 0xc9, 0xaa, 0xd4, 0x59, 0x6a, 0x0c, 0x37, 0x54, 0xf4, 0x04, 0xf7, 0x3b, 0x4e, 0xe9,
	0x6d, 0x54, 0x70, 0x6f, 0x30, 0x02, 0x4c, 0xe1, 0x81, 0x75, 0x71, 0x9c, 0xf2, 0xf3, 0x35, 0x88,
	0x99, 0x88, 0x16, 0xd0, 0x2f, 0xd5, 0xe5, 0x15, 0xe6, 0xda, 0xb7, 0xf0, 0x24, 0x88, 0x22, 0x73,
	0x5d, 0xc2, 0x41, 0x8e, 0xeb, 0x49, 0x68, 0xd3, 0x88, 0xe7, 0x46, 0x47, 0xdf, 0x07, 0x7f, 0xf3,
	0x40, 0xc6, 0x6a, 0xa5, 0xf4, 0xb5, 0x7d, 0x39, 0xd1, 0x83, 0xb4, 0x0f, 0x3d, 0x8a, 0xf7, 0x7c,
	0x26, 0xde, 0x93, 0x21, 0x74, 0xf0, 0xc6, 0x35, 0x13, 0x1e, 0xe1, 0xfc, 0xc2, 0x11, 0x2d, 0x39,
	0x80, 0xe0, 0x44, 0x95, 0xd4, 0x0c, 0x85, 0x2f, 0xef, 0xc3, 0xce, 0x89, 0x2a, 0xed, 0x08, 0xc1,
	0x24, 0x16, 0x6d, 0xb3, 0x4e, 0xba, 0x7e, 0x71, 0x25, 0x3a, 0x28, 0x6f, 0x8f, 0x27, 0xba, 0x52,
	0xc2, 0x28, 0x56, 0x2b, 0xa7, 0xb9, 0x88, 0x40, 0xee, 0x40, 0x9f, 0xb0, 0xe3, 0x14, 0x0d, 0x16,
	0x70, 0xf0, 0x57, 0x1f, 0x1e, 0x2e, 0x55, 0xba, 0x3e, 0xcb, 0x8e, 0x36, 0x5a, 0xa5, 0xa5, 0x6b,
	0xe3, 0x10, 0xc2, 0x58, 0x15, 0x95, 0x95, 0x40, 0xb3, 0x23, 0x56, 0xa5, 0xf0, 0x90, 0x65, 0xfe,
	0x68, 0x98, 0xcf, 0x44, 0x4b, 0x3e, 0x84, 0xfb, 0xb7, 0xfe, 0x42, 0x98, 0xcf, 0x84, 0x4f, 0xe6,
	0xa1, 0x87, 0xe6, 0x33, 0xd1, 0xc6, 0x05, 0xb8, 0x4b, 0x8b, 0x2e, 0x7d, 0xd3, 0xd8, 0x14, 0x3d,
	0x34, 0xca, 0x79, 0xd5, 0x89, 0x00, 0xb5, 0xcc, 0x0d, 0x54, 0x84, 0xb8, 0x15, 0x79, 0x80, 0x48,
	0x90, 0x82, 0x27, 0x55, 0xe5, 0x82, 0x3e, 0xfa, 0xc5, 0xdc, 0x46, 0x70, 0x3d, 0x02, 0x07, 0xb8,
	0x04, 0x0e, 0x58, 0xb4, 0x76, 0x88, 0x1b, 0x38, 0x13, 0x54, 0x8c, 0xe4, 0x3d, 0x18, 0x36, 0x46,
	0xa3, 0xd8, 0xb1, 0x50, 0x35, 0xba, 0x84, 0xb0, 0x5b, 0x1d, 0x65, 0x97, 0x6a, 0x9a, 0xac, 0x2e,
	0xc4, 0x3d, 0x74, 0x29, 0xce, 0x9a, 0x7a, 0x52, 0x08, 0x89, 0xd8, 0x8b, 0xab, 0x75, 0x52, 0xaa,
	0x85, 0xe6, 0x96, 0x2e, 0xee, 0xa3, 0xcd, 0x24, 0x43, 0x0b, 0x3d, 0x20, 0x0b, 0x55, 0xba, 0x76,
	0x43, 0xb1, 0x8b, 0x7a, 0x08, 0xc6, 0x5c, 0x0b, 0xa7, 0x89, 0x16, 0x0f, 0x51, 0xaf, 0x4a, 0x28,
	0x31, 0x3e, 0xf8, 0xca, 0x73, 0xa7, 0x1f, 0xf9, 0x09, 0xa3, 0x61, 0x9c, 0xf8, 0x9e, 0x1c, 0x01,
	0x7c, 0xba, 0xd9, 0x16, 0xaf, 0x69, 0x2f, 0xe1, 0x21, 0x4d, 0x02, 0x8b, 0xec, 0x5a, 0x2b, 0xd1,
	0x32, 0x51, 0x32, 0xe2, 0x3e, 0xea, 0x1f, 0xa7, 0x6b, 0x1c, 0xd8, 0xc4, 0x6f, 0x93, 0xfc, 0xeb,
	0xec, 0x0b, 0x52, 0x3f, 0x14, 0x9d, 0x06, 0xfd, 0xa1, 0xe8, 0x36, 0xe8, 0x27, 0xa2, 0xd7, 0xa0,
	0x3f, 0x12, 0x01, 0x3a, 0xa8, 0xa2, 0x8f, 0xd3, 0xb5, 0x08, 0x09, 0xa1, 0x30, 0x98, 0x4d, 0xe1,
	0x55, 0x97, 0xfe, 0x0c, 0xfb, 0xf9, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0xd9, 0x29, 0x53,
	0x20, 0x13, 0x00, 0x00,
}
