syntax = "proto3";

// 客户端到服务器发送消息的类型
enum ReceiveMessageType {
    StartID = 0;
    BetID = 1; // 下注信息
	SitDown = 2;//用户坐下消息
	GetTrend = 3;//获取走势图
	GetUserListInfo = 4; //获取玩家列表
	StandUp = 5;	//用户站立
	tempCard = 6;	//测试的牌
	RecMiPaiSynPos = 8; //咪牌同步位置
	RecMiEndMsg = 10; // 眯牌提前结束
}

// 服务器发送给客户端的消息类型
enum SendToClientMessageType {
    RestartID = 0;
    BetRet = 1; // 下注消息
    BetFailID = 2; // 下注失败
    BetSuccessMessageID = 3; // 下注成功的消息id
    SceneID = 4; // 场景ID
	Status = 6;		//状态消息
	Settle = 7;		//结算消息
	SitDownFail = 8; //坐下失败
	BetInfo = 9;		//下注信息消息
	TrendInfo = 10;	//服务器发送走势图
	UserListInfo = 11;//玩家列表
	SceneSettleInfo = 12;//场景上的玩家结算信息
	ExitRet = 13;//退出结果，在用户失败时发送
	KickOutUser = 14;//踢出玩家发送原因
	RoomRolesInfo = 15;	//房间规则信息
	RoomSenceInfo = 16;	//场次场景信息
	UserComeBack = 17;	//用户回来的结算消息
	GamePokerCount = 18;//游戏开始时发送扑克的张数
	UpdateMiSeatID = 19;//更新玩家咪牌的座位号
	PokerInfo = 20;//扑克消息
	SendMiPaiSynPos = 22; //咪牌同步位置
	SendRobotMiPai = 23; //机器人咪牌同步位置
	SceneGold = 24;// 玩家进入场景的金额
}

//游戏阶段
enum GameStatus{
	StartStatus = 0;
	FlushPoker = 1;	//洗牌动画可能没有
	StartMovie = 2;//开始动画
	BetStatus = 3; //下注阶段
	EndBetMovie = 4; //结束下注动画
	ShowPoker2 = 5; // 闲家2张咪牌
	ShowPoker4 = 6; // 庄家2张咪牌
	ShowPoker5 = 7; // 第5张牌
	ShowPoker6 = 8; // 第6张牌
	ShowPokerEnd = 9;// 咪牌结束动画
	SettleStatus = 10; //结算阶段，包括咪牌
}

message StatusMessage{
	int32 Status = 1;		//状态
	int32 StatusTime = 2;	//状态的持续时间
	int32 TotalStatusTime = 3;//状态的总时间
}

// 押注失败发送的消息
message BetFailMessage {
    string FailMessage = 1;
}

// 押注成功时发送的消息
message BetSuccessMessage {
    int32 SeatId = 1;//座位号，场景中的座位号
	int32 BetIndex = 2;//下注的下标
	int32 BetType = 3;//庄闲和，庄队，闲队
	int64 UserID=4;//用户ID
	int64 ZhuangBetGold = 5 ;// 庄下注金额
	int64 XianBetGold = 6;// 闲下注金额
}

// 服务器收到的押注信息
message Bet {
    int32 BetType = 1;//庄闲和，庄队，闲队
	int32 BetIndex = 2;//下注的下标
}

//游戏中几个玩家的数据
message SeatUser {
    string Nick = 1; // 用户昵称
    string Head = 2; // 头像
    int64 Score = 3; // 分数
    bool IsBigWinner = 4; // 是否是大赢家
    bool IsMaster = 5; // 是否是神算子
	int32 SeatId=6;//在场景中的座位id
	int64 UserID = 7;//用户ID
	int64 ZhuangBetGold = 8 ;// 庄下注金额
	int64 XianBetGold = 9;// 闲下注金额
	bool IsMillionaire = 10; // 是否是大富豪，
}

// 发送场景数据
message SceneMessage{
	repeated SeatUser UserData = 1;
	int32 PokerCount = 2;
}

message UserSitDown{
	int32 ChairNo = 1;//座位号
}

message UserSitDownFail{
	string FailReaSon = 1;//坐下失败
}   

//牌消息
message PokerMsg{
	bytes ZhuangPoker = 1;
    bytes XianPoker = 2;
	int32 Win = 3; // 0表示庄胜利，1表示闲胜利，2表示和
	string ZhuangMiUserNikeName = 4;//庄咪牌的昵称
	string XiangMiUserNikeName = 5;//闲咪牌的昵称
	string ZhuangMiUserHead = 6;//庄咪牌的头像
	string XiangMiUserHead = 7;//闲咪牌的头像

	int32 ZhuangMiUserSeatId =8 ; // 庄咪牌玩家座位号
	int32 XianMiUserSeatId = 9 ;// 闲咪牌玩家座位号
	int64 ZhuangMi = 10;//庄咪牌
	int64 XianMi = 11;//闲咪牌
	IsOpen isOpen = 12;
}
//结算消息
message SettleMsg{
	int32 Win = 3; // 0表示庄胜利，1表示闲胜利，2表示和
	int64 UserZhuangWin = 4;	//玩家自己赢的金币,庄
	int64 UserXianWin = 5;	//玩家自己赢的金币,闲
	int64 HeWin = 6; //和赢钱
	int64 ZhuangDui = 7;//庄对赢钱
	int64 XianDui = 8;//闲对赢钱
	int64 UserScore = 9; //用户当前的分数
	repeated int64 BetArea = 10;//下注区域的钱
	repeated int64 UserBet = 12;//用户自己下注

	int64 TotalWin = 15;//扣税以后总赢钱
	bool IsZhuangDui = 16; //是否庄对
	bool IsXianDui = 17;//是否是闲队
	
}

message SceneBetInfo{
	repeated int64 BetArea = 1;//下注区域的钱
	repeated int64 UserBet = 4;//用户自己下注
	int64 UserBetTotal = 7;//玩家总下注
	int32 MasterBetType = 8;//神算子下注的区域，0庄，1，闲，2和,-1时表示无下注
}

message OneTrend{
	int32 Win = 1;// 0表示庄胜利，1表示闲胜利，2表示和
	bool IsZhuangDui = 2; // 是否是庄对
	bool IsXianDui = 3; // 是否是闲对
}

message Trend{
	repeated OneTrend info = 1;
}

message UserInfo{
	string NikeName = 1;//昵称
	int64 UserGlod = 2;//玩家金币
	int64 BetGold = 3;//下注金币
	int32 WinCount =  4;//赢的次数
    string Head = 5; // 头像
	int32 icon = 6;//称号0无称号， 1神算子，2大富豪，3大赢家 数字越高优先级越高
}

//用户列表
message UserList{
	repeated UserInfo UserList = 1;
}

message SceneUserInfo{
	int64 UserID = 1;
	int32 SceneSeatID = 2;
	int64 ZhuangWin = 3;
	int64 XianWin = 4;
	int64 HeWin = 5;
	int64 ZhuangDui = 6;//庄对赢钱
	int64 XianDui = 7;//闲对赢钱
	int64 UserScore = 8;
	int64 TotalWin = 9;//扣税以后总赢钱
	repeated int64 BetArea = 10;//场景下注区域的钱
	repeated int64 UserBet = 11;//场景下注区域的钱
}

//场景上的玩家结算信息
message SceneUserSettle{
	repeated SceneUserInfo UserList = 1;
}

message ExitFail{
	string FailReason = 1;//失败的原因
}

message KickOutUserMsg{
	string KickOutReason = 1;//踢出玩家发送原因
}

message RoomRolesInfoMsg{
	repeated int32 BetArr = 1; //下注数组
	int32 UserBetLimit = 2;
	int64 BetMinLimit = 3; // 至少携带xxx才能下注
}

//次消息一秒一次
message RoomSenceInfoMsg{
	int64 RoomID = 1;
	Trend TrendList = 2;
	StatusMessage GameStatus = 3;
	int64 BaseBet = 4;
	int64 UserLimit = 5;
}

//牌的数量
message PokerCount{
	int32 Count = 1;
}

//咪牌的用户消息
message MiPaiUserInfo{
	int32 ZhuangSeatID = 1;//庄咪牌的座位号
	int32 XianSeatID = 2;//闲咪牌的座位号
}


// 前两张牌为一套操作，后一张牌为一套操作
// 初始化/咪牌同步位置
message MiPaiSynPosMsg{
	repeated posInfo  posInfo= 1;
}

message posInfo{
	map<string, int32> PrePos = 1; //咪牌上一帧位置 x y
	map<string, int32> EndPosPos = 2; //咪牌当前帧位置 x y
	int64 UserID = 3;// 用户id // 保存时不要发UserID
	bool isOpen =4;
	int32 CurMiId = 5; //当前是庄家还是闲家咪牌 庄0 闲1
	int32 CurCardId = 6; //当前咪的第几张牌 0 1 2
	map<string, int32> StartPos = 7; //咪牌开始位置 x y
	bool isLeave = 8 ; // 鼠标是否离开
	map<string, int32> MoveVec = 9; // 方向向量
} 




// 场景中
// 某张牌已经翻开时 客户端发送给服务端
// 表示是否翻牌
message IsOpen{
	repeated bool ZhuangOpen = 1; // 庄家已开的牌
	repeated bool XianOpen = 2;// 闲家已开的牌
}


message MiPai{// 1张牌的操作
	repeated robotMiMsgDan Pai=1;
}


// 机器人单张咪牌动作
message robotMiMsgDan{
  	int32 posIndex=1;// 牌的索引(1-6)
	int32 action = 2; // 动画
}


// 全部眯完  客户端发送给服务端；时间到了就不发
message MiEnd {
	int32 status = 2;
	bool isEnd = 1;
}

//测试
message tempCardMsg{
	bytes ZhuangPoker = 1;
    bytes XianPoker = 2;
}


message SceneGoldMsg {
	int64 Gold = 1;// 用户金额
}