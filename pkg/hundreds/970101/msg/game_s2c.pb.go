// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game_s2c.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//发送给客户端所有消息协议封包，buff是具体的结构体内容，需要端对照相应的协议解析
type S2CMsg struct {
	MainCmd              int32    `protobuf:"varint,1,opt,name=mainCmd,proto3" json:"mainCmd"`
	SubCmd               int32    `protobuf:"varint,2,opt,name=subCmd,proto3" json:"subCmd"`
	Buff                 []byte   `protobuf:"bytes,3,opt,name=buff,proto3" json:"buff"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CMsg) Reset()         { *m = S2CMsg{} }
func (m *S2CMsg) String() string { return proto.CompactTextString(m) }
func (*S2CMsg) ProtoMessage()    {}
func (*S2CMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{0}
}

func (m *S2CMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CMsg.Unmarshal(m, b)
}
func (m *S2CMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CMsg.Marshal(b, m, deterministic)
}
func (m *S2CMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CMsg.Merge(m, src)
}
func (m *S2CMsg) XXX_Size() int {
	return xxx_messageInfo_S2CMsg.Size(m)
}
func (m *S2CMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CMsg.DiscardUnknown(m)
}

var xxx_messageInfo_S2CMsg proto.InternalMessageInfo

func (m *S2CMsg) GetMainCmd() int32 {
	if m != nil {
		return m.MainCmd
	}
	return 0
}

func (m *S2CMsg) GetSubCmd() int32 {
	if m != nil {
		return m.SubCmd
	}
	return 0
}

func (m *S2CMsg) GetBuff() []byte {
	if m != nil {
		return m.Buff
	}
	return nil
}

type S2CUserCount struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserCount) Reset()         { *m = S2CUserCount{} }
func (m *S2CUserCount) String() string { return proto.CompactTextString(m) }
func (*S2CUserCount) ProtoMessage()    {}
func (*S2CUserCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{1}
}

func (m *S2CUserCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserCount.Unmarshal(m, b)
}
func (m *S2CUserCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserCount.Marshal(b, m, deterministic)
}
func (m *S2CUserCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserCount.Merge(m, src)
}
func (m *S2CUserCount) XXX_Size() int {
	return xxx_messageInfo_S2CUserCount.Size(m)
}
func (m *S2CUserCount) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserCount.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserCount proto.InternalMessageInfo

func (m *S2CUserCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

//房间基本信息，大厅显示
type S2CRoomBaseInfo struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	LimitAmount          int64             `protobuf:"varint,3,opt,name=limitAmount,proto3" json:"limitAmount"`
	MaxRed               int64             `protobuf:"varint,4,opt,name=maxRed,proto3" json:"maxRed"`
	UserArr              []*S2CUserInfo    `protobuf:"bytes,5,rep,name=userArr,proto3" json:"userArr"`
	UserCount            int64             `protobuf:"varint,6,opt,name=userCount,proto3" json:"userCount"`
	SelfInfo             *S2CUserInfo      `protobuf:"bytes,7,opt,name=selfInfo,proto3" json:"selfInfo"`
	RedConfig            *S2CRedConfigInfo `protobuf:"bytes,8,opt,name=redConfig,proto3" json:"redConfig"`
	Ticker               int32             `protobuf:"varint,9,opt,name=ticker,proto3" json:"ticker"`
	CurRobUserArr        []*S2CCurRobUser  `protobuf:"bytes,10,rep,name=curRobUserArr,proto3" json:"curRobUserArr"`
	Status               int32             `protobuf:"varint,11,opt,name=status,proto3" json:"status"`
	CurRobbingRed        *S2CRedInfo       `protobuf:"bytes,12,opt,name=curRobbingRed,proto3" json:"curRobbingRed"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *S2CRoomBaseInfo) Reset()         { *m = S2CRoomBaseInfo{} }
func (m *S2CRoomBaseInfo) String() string { return proto.CompactTextString(m) }
func (*S2CRoomBaseInfo) ProtoMessage()    {}
func (*S2CRoomBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{2}
}

func (m *S2CRoomBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRoomBaseInfo.Unmarshal(m, b)
}
func (m *S2CRoomBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRoomBaseInfo.Marshal(b, m, deterministic)
}
func (m *S2CRoomBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRoomBaseInfo.Merge(m, src)
}
func (m *S2CRoomBaseInfo) XXX_Size() int {
	return xxx_messageInfo_S2CRoomBaseInfo.Size(m)
}
func (m *S2CRoomBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRoomBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRoomBaseInfo proto.InternalMessageInfo

func (m *S2CRoomBaseInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CRoomBaseInfo) GetLimitAmount() int64 {
	if m != nil {
		return m.LimitAmount
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetMaxRed() int64 {
	if m != nil {
		return m.MaxRed
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetUserArr() []*S2CUserInfo {
	if m != nil {
		return m.UserArr
	}
	return nil
}

func (m *S2CRoomBaseInfo) GetUserCount() int64 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetSelfInfo() *S2CUserInfo {
	if m != nil {
		return m.SelfInfo
	}
	return nil
}

func (m *S2CRoomBaseInfo) GetRedConfig() *S2CRedConfigInfo {
	if m != nil {
		return m.RedConfig
	}
	return nil
}

func (m *S2CRoomBaseInfo) GetTicker() int32 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetCurRobUserArr() []*S2CCurRobUser {
	if m != nil {
		return m.CurRobUserArr
	}
	return nil
}

func (m *S2CRoomBaseInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *S2CRoomBaseInfo) GetCurRobbingRed() *S2CRedInfo {
	if m != nil {
		return m.CurRobbingRed
	}
	return nil
}

//当前抢了包的玩家信息
type S2CCurRobUser struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`
	Head                 string   `protobuf:"bytes,3,opt,name=head,proto3" json:"head"`
	RobbedAmount         int64    `protobuf:"varint,4,opt,name=robbedAmount,proto3" json:"robbedAmount"`
	IsMine               bool     `protobuf:"varint,5,opt,name=isMine,proto3" json:"isMine"`
	MineAmount           int64    `protobuf:"varint,6,opt,name=mineAmount,proto3" json:"mineAmount"`
	Score                int64    `protobuf:"varint,7,opt,name=score,proto3" json:"score"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CCurRobUser) Reset()         { *m = S2CCurRobUser{} }
func (m *S2CCurRobUser) String() string { return proto.CompactTextString(m) }
func (*S2CCurRobUser) ProtoMessage()    {}
func (*S2CCurRobUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{3}
}

func (m *S2CCurRobUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CCurRobUser.Unmarshal(m, b)
}
func (m *S2CCurRobUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CCurRobUser.Marshal(b, m, deterministic)
}
func (m *S2CCurRobUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCurRobUser.Merge(m, src)
}
func (m *S2CCurRobUser) XXX_Size() int {
	return xxx_messageInfo_S2CCurRobUser.Size(m)
}
func (m *S2CCurRobUser) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCurRobUser.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCurRobUser proto.InternalMessageInfo

func (m *S2CCurRobUser) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CCurRobUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *S2CCurRobUser) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *S2CCurRobUser) GetRobbedAmount() int64 {
	if m != nil {
		return m.RobbedAmount
	}
	return 0
}

func (m *S2CCurRobUser) GetIsMine() bool {
	if m != nil {
		return m.IsMine
	}
	return false
}

func (m *S2CCurRobUser) GetMineAmount() int64 {
	if m != nil {
		return m.MineAmount
	}
	return 0
}

func (m *S2CCurRobUser) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

//红包配置（点击发送红包之后红包的页面数据）
type S2CRedConfigInfo struct {
	Odds                 int32    `protobuf:"varint,1,opt,name=odds,proto3" json:"odds"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Amount               []int64  `protobuf:"varint,3,rep,packed,name=amount,proto3" json:"amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRedConfigInfo) Reset()         { *m = S2CRedConfigInfo{} }
func (m *S2CRedConfigInfo) String() string { return proto.CompactTextString(m) }
func (*S2CRedConfigInfo) ProtoMessage()    {}
func (*S2CRedConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{4}
}

func (m *S2CRedConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRedConfigInfo.Unmarshal(m, b)
}
func (m *S2CRedConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRedConfigInfo.Marshal(b, m, deterministic)
}
func (m *S2CRedConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRedConfigInfo.Merge(m, src)
}
func (m *S2CRedConfigInfo) XXX_Size() int {
	return xxx_messageInfo_S2CRedConfigInfo.Size(m)
}
func (m *S2CRedConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRedConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRedConfigInfo proto.InternalMessageInfo

func (m *S2CRedConfigInfo) GetOdds() int32 {
	if m != nil {
		return m.Odds
	}
	return 0
}

func (m *S2CRedConfigInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *S2CRedConfigInfo) GetAmount() []int64 {
	if m != nil {
		return m.Amount
	}
	return nil
}

//当前红包列表
type S2CCurRedArr struct {
	Current              int32        `protobuf:"varint,1,opt,name=current,proto3" json:"current"`
	Size                 int32        `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Total                int64        `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	Pages                int32        `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	RedArr               []*S2CCurRed `protobuf:"bytes,5,rep,name=redArr,proto3" json:"redArr"`
	SelfRedPos           int32        `protobuf:"varint,6,opt,name=selfRedPos,proto3" json:"selfRedPos"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *S2CCurRedArr) Reset()         { *m = S2CCurRedArr{} }
func (m *S2CCurRedArr) String() string { return proto.CompactTextString(m) }
func (*S2CCurRedArr) ProtoMessage()    {}
func (*S2CCurRedArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{5}
}

func (m *S2CCurRedArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CCurRedArr.Unmarshal(m, b)
}
func (m *S2CCurRedArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CCurRedArr.Marshal(b, m, deterministic)
}
func (m *S2CCurRedArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCurRedArr.Merge(m, src)
}
func (m *S2CCurRedArr) XXX_Size() int {
	return xxx_messageInfo_S2CCurRedArr.Size(m)
}
func (m *S2CCurRedArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCurRedArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCurRedArr proto.InternalMessageInfo

func (m *S2CCurRedArr) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *S2CCurRedArr) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *S2CCurRedArr) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *S2CCurRedArr) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *S2CCurRedArr) GetRedArr() []*S2CCurRed {
	if m != nil {
		return m.RedArr
	}
	return nil
}

func (m *S2CCurRedArr) GetSelfRedPos() int32 {
	if m != nil {
		return m.SelfRedPos
	}
	return 0
}

type S2CCurRed struct {
	RedId                int64    `protobuf:"varint,1,opt,name=redId,proto3" json:"redId"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount"`
	MineNum              int64    `protobuf:"varint,4,opt,name=mineNum,proto3" json:"mineNum"`
	SenderId             int64    `protobuf:"varint,5,opt,name=senderId,proto3" json:"senderId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CCurRed) Reset()         { *m = S2CCurRed{} }
func (m *S2CCurRed) String() string { return proto.CompactTextString(m) }
func (*S2CCurRed) ProtoMessage()    {}
func (*S2CCurRed) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{6}
}

func (m *S2CCurRed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CCurRed.Unmarshal(m, b)
}
func (m *S2CCurRed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CCurRed.Marshal(b, m, deterministic)
}
func (m *S2CCurRed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CCurRed.Merge(m, src)
}
func (m *S2CCurRed) XXX_Size() int {
	return xxx_messageInfo_S2CCurRed.Size(m)
}
func (m *S2CCurRed) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CCurRed.DiscardUnknown(m)
}

var xxx_messageInfo_S2CCurRed proto.InternalMessageInfo

func (m *S2CCurRed) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

func (m *S2CCurRed) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *S2CCurRed) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CCurRed) GetMineNum() int64 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

func (m *S2CCurRed) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

//用户信息数组
type S2CUserInfoArr struct {
	Current              int32          `protobuf:"varint,1,opt,name=current,proto3" json:"current"`
	Size                 int32          `protobuf:"varint,2,opt,name=size,proto3" json:"size"`
	Total                int64          `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	Pages                int32          `protobuf:"varint,4,opt,name=pages,proto3" json:"pages"`
	UserArr              []*S2CUserInfo `protobuf:"bytes,5,rep,name=userArr,proto3" json:"userArr"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *S2CUserInfoArr) Reset()         { *m = S2CUserInfoArr{} }
func (m *S2CUserInfoArr) String() string { return proto.CompactTextString(m) }
func (*S2CUserInfoArr) ProtoMessage()    {}
func (*S2CUserInfoArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{7}
}

func (m *S2CUserInfoArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserInfoArr.Unmarshal(m, b)
}
func (m *S2CUserInfoArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserInfoArr.Marshal(b, m, deterministic)
}
func (m *S2CUserInfoArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserInfoArr.Merge(m, src)
}
func (m *S2CUserInfoArr) XXX_Size() int {
	return xxx_messageInfo_S2CUserInfoArr.Size(m)
}
func (m *S2CUserInfoArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserInfoArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserInfoArr proto.InternalMessageInfo

func (m *S2CUserInfoArr) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *S2CUserInfoArr) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *S2CUserInfoArr) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *S2CUserInfoArr) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *S2CUserInfoArr) GetUserArr() []*S2CUserInfo {
	if m != nil {
		return m.UserArr
	}
	return nil
}

//用户基本信息
type S2CUserInfo struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Head                 string   `protobuf:"bytes,3,opt,name=head,proto3" json:"head"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	ChairId              int32    `protobuf:"varint,5,opt,name=chairId,proto3" json:"chairId"`
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status"`
	RobbedAmount         int64    `protobuf:"varint,7,opt,name=robbedAmount,proto3" json:"robbedAmount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CUserInfo) Reset()         { *m = S2CUserInfo{} }
func (m *S2CUserInfo) String() string { return proto.CompactTextString(m) }
func (*S2CUserInfo) ProtoMessage()    {}
func (*S2CUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{8}
}

func (m *S2CUserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CUserInfo.Unmarshal(m, b)
}
func (m *S2CUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CUserInfo.Marshal(b, m, deterministic)
}
func (m *S2CUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CUserInfo.Merge(m, src)
}
func (m *S2CUserInfo) XXX_Size() int {
	return xxx_messageInfo_S2CUserInfo.Size(m)
}
func (m *S2CUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CUserInfo proto.InternalMessageInfo

func (m *S2CUserInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *S2CUserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2CUserInfo) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *S2CUserInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CUserInfo) GetChairId() int32 {
	if m != nil {
		return m.ChairId
	}
	return 0
}

func (m *S2CUserInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *S2CUserInfo) GetRobbedAmount() int64 {
	if m != nil {
		return m.RobbedAmount
	}
	return 0
}

type S2CStartTick struct {
	Ticker               int32       `protobuf:"varint,1,opt,name=ticker,proto3" json:"ticker"`
	RedInfo              *S2CRedInfo `protobuf:"bytes,2,opt,name=redInfo,proto3" json:"redInfo"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *S2CStartTick) Reset()         { *m = S2CStartTick{} }
func (m *S2CStartTick) String() string { return proto.CompactTextString(m) }
func (*S2CStartTick) ProtoMessage()    {}
func (*S2CStartTick) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{9}
}

func (m *S2CStartTick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CStartTick.Unmarshal(m, b)
}
func (m *S2CStartTick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CStartTick.Marshal(b, m, deterministic)
}
func (m *S2CStartTick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CStartTick.Merge(m, src)
}
func (m *S2CStartTick) XXX_Size() int {
	return xxx_messageInfo_S2CStartTick.Size(m)
}
func (m *S2CStartTick) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CStartTick.DiscardUnknown(m)
}

var xxx_messageInfo_S2CStartTick proto.InternalMessageInfo

func (m *S2CStartTick) GetTicker() int32 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

func (m *S2CStartTick) GetRedInfo() *S2CRedInfo {
	if m != nil {
		return m.RedInfo
	}
	return nil
}

//红包基本信息
type S2CRedInfo struct {
	RedId                int64    `protobuf:"varint,1,opt,name=redId,proto3" json:"redId"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status"`
	MineNum              int64    `protobuf:"varint,4,opt,name=mineNum,proto3" json:"mineNum"`
	RobbedCount          int64    `protobuf:"varint,5,opt,name=robbedCount,proto3" json:"robbedCount"`
	SenderId             int64    `protobuf:"varint,6,opt,name=senderId,proto3" json:"senderId"`
	Time                 int64    `protobuf:"varint,7,opt,name=time,proto3" json:"time"`
	Level                int32    `protobuf:"varint,8,opt,name=level,proto3" json:"level"`
	SenderName           string   `protobuf:"bytes,9,opt,name=senderName,proto3" json:"senderName"`
	RedFlood             int64    `protobuf:"varint,10,opt,name=redFlood,proto3" json:"redFlood"`
	Ticker               int32    `protobuf:"varint,11,opt,name=ticker,proto3" json:"ticker"`
	SenderHead           string   `protobuf:"bytes,12,opt,name=senderHead,proto3" json:"senderHead"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRedInfo) Reset()         { *m = S2CRedInfo{} }
func (m *S2CRedInfo) String() string { return proto.CompactTextString(m) }
func (*S2CRedInfo) ProtoMessage()    {}
func (*S2CRedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{10}
}

func (m *S2CRedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRedInfo.Unmarshal(m, b)
}
func (m *S2CRedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRedInfo.Marshal(b, m, deterministic)
}
func (m *S2CRedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRedInfo.Merge(m, src)
}
func (m *S2CRedInfo) XXX_Size() int {
	return xxx_messageInfo_S2CRedInfo.Size(m)
}
func (m *S2CRedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRedInfo proto.InternalMessageInfo

func (m *S2CRedInfo) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

func (m *S2CRedInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CRedInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *S2CRedInfo) GetMineNum() int64 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

func (m *S2CRedInfo) GetRobbedCount() int64 {
	if m != nil {
		return m.RobbedCount
	}
	return 0
}

func (m *S2CRedInfo) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CRedInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *S2CRedInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CRedInfo) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *S2CRedInfo) GetRedFlood() int64 {
	if m != nil {
		return m.RedFlood
	}
	return 0
}

func (m *S2CRedInfo) GetTicker() int32 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

func (m *S2CRedInfo) GetSenderHead() string {
	if m != nil {
		return m.SenderHead
	}
	return ""
}

//抢红包的信息
type S2CRobRed struct {
	RedId                int64    `protobuf:"varint,1,opt,name=redId,proto3" json:"redId"`
	IsMine               bool     `protobuf:"varint,2,opt,name=isMine,proto3" json:"isMine"`
	RobbedAmount         int64    `protobuf:"varint,3,opt,name=robbedAmount,proto3" json:"robbedAmount"`
	NotRobbedCount       int64    `protobuf:"varint,4,opt,name=notRobbedCount,proto3" json:"notRobbedCount"`
	Amount               int64    `protobuf:"varint,5,opt,name=amount,proto3" json:"amount"`
	SenderName           string   `protobuf:"bytes,6,opt,name=senderName,proto3" json:"senderName"`
	MineNum              int64    `protobuf:"varint,7,opt,name=mineNum,proto3" json:"mineNum"`
	Level                int32    `protobuf:"varint,8,opt,name=level,proto3" json:"level"`
	Score                int64    `protobuf:"varint,9,opt,name=score,proto3" json:"score"`
	UserId               int64    `protobuf:"varint,10,opt,name=userId,proto3" json:"userId"`
	RobberName           string   `protobuf:"bytes,11,opt,name=robberName,proto3" json:"robberName"`
	RobberHead           string   `protobuf:"bytes,12,opt,name=robberHead,proto3" json:"robberHead"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRobRed) Reset()         { *m = S2CRobRed{} }
func (m *S2CRobRed) String() string { return proto.CompactTextString(m) }
func (*S2CRobRed) ProtoMessage()    {}
func (*S2CRobRed) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{11}
}

func (m *S2CRobRed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRobRed.Unmarshal(m, b)
}
func (m *S2CRobRed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRobRed.Marshal(b, m, deterministic)
}
func (m *S2CRobRed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRobRed.Merge(m, src)
}
func (m *S2CRobRed) XXX_Size() int {
	return xxx_messageInfo_S2CRobRed.Size(m)
}
func (m *S2CRobRed) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRobRed.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRobRed proto.InternalMessageInfo

func (m *S2CRobRed) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

func (m *S2CRobRed) GetIsMine() bool {
	if m != nil {
		return m.IsMine
	}
	return false
}

func (m *S2CRobRed) GetRobbedAmount() int64 {
	if m != nil {
		return m.RobbedAmount
	}
	return 0
}

func (m *S2CRobRed) GetNotRobbedCount() int64 {
	if m != nil {
		return m.NotRobbedCount
	}
	return 0
}

func (m *S2CRobRed) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CRobRed) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *S2CRobRed) GetMineNum() int64 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

func (m *S2CRobRed) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CRobRed) GetScore() int64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *S2CRobRed) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CRobRed) GetRobberName() string {
	if m != nil {
		return m.RobberName
	}
	return ""
}

func (m *S2CRobRed) GetRobberHead() string {
	if m != nil {
		return m.RobberHead
	}
	return ""
}

//红包列表
type S2CRedArr struct {
	RedArr               []*S2CRedInfo `protobuf:"bytes,1,rep,name=redArr,proto3" json:"redArr"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *S2CRedArr) Reset()         { *m = S2CRedArr{} }
func (m *S2CRedArr) String() string { return proto.CompactTextString(m) }
func (*S2CRedArr) ProtoMessage()    {}
func (*S2CRedArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{12}
}

func (m *S2CRedArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRedArr.Unmarshal(m, b)
}
func (m *S2CRedArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRedArr.Marshal(b, m, deterministic)
}
func (m *S2CRedArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRedArr.Merge(m, src)
}
func (m *S2CRedArr) XXX_Size() int {
	return xxx_messageInfo_S2CRedArr.Size(m)
}
func (m *S2CRedArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRedArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRedArr proto.InternalMessageInfo

func (m *S2CRedArr) GetRedArr() []*S2CRedInfo {
	if m != nil {
		return m.RedArr
	}
	return nil
}

//狩猎记录-发送记录
type S2CSendRedRecordArr struct {
	TotalAmount          int64               `protobuf:"varint,1,opt,name=totalAmount,proto3" json:"totalAmount"`
	TotalCount           int64               `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount"`
	RedArr               []*S2CSendRedRecord `protobuf:"bytes,3,rep,name=redArr,proto3" json:"redArr"`
	Current              int32               `protobuf:"varint,4,opt,name=current,proto3" json:"current"`
	Size                 int32               `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	Total                int64               `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
	Pages                int32               `protobuf:"varint,7,opt,name=pages,proto3" json:"pages"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2CSendRedRecordArr) Reset()         { *m = S2CSendRedRecordArr{} }
func (m *S2CSendRedRecordArr) String() string { return proto.CompactTextString(m) }
func (*S2CSendRedRecordArr) ProtoMessage()    {}
func (*S2CSendRedRecordArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{13}
}

func (m *S2CSendRedRecordArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CSendRedRecordArr.Unmarshal(m, b)
}
func (m *S2CSendRedRecordArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CSendRedRecordArr.Marshal(b, m, deterministic)
}
func (m *S2CSendRedRecordArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSendRedRecordArr.Merge(m, src)
}
func (m *S2CSendRedRecordArr) XXX_Size() int {
	return xxx_messageInfo_S2CSendRedRecordArr.Size(m)
}
func (m *S2CSendRedRecordArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSendRedRecordArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSendRedRecordArr proto.InternalMessageInfo

func (m *S2CSendRedRecordArr) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *S2CSendRedRecordArr) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *S2CSendRedRecordArr) GetRedArr() []*S2CSendRedRecord {
	if m != nil {
		return m.RedArr
	}
	return nil
}

func (m *S2CSendRedRecordArr) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *S2CSendRedRecordArr) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *S2CSendRedRecordArr) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *S2CSendRedRecordArr) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

type S2CSendRedRecord struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
	Level                int32    `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	RedAmount            int64    `protobuf:"varint,3,opt,name=redAmount,proto3" json:"redAmount"`
	Status               int32    `protobuf:"varint,4,opt,name=status,proto3" json:"status"`
	MineNum              int64    `protobuf:"varint,5,opt,name=mineNum,proto3" json:"mineNum"`
	TotalMineAmount      int64    `protobuf:"varint,6,opt,name=totalMineAmount,proto3" json:"totalMineAmount"`
	RedId                int64    `protobuf:"varint,7,opt,name=redId,proto3" json:"redId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CSendRedRecord) Reset()         { *m = S2CSendRedRecord{} }
func (m *S2CSendRedRecord) String() string { return proto.CompactTextString(m) }
func (*S2CSendRedRecord) ProtoMessage()    {}
func (*S2CSendRedRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{14}
}

func (m *S2CSendRedRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CSendRedRecord.Unmarshal(m, b)
}
func (m *S2CSendRedRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CSendRedRecord.Marshal(b, m, deterministic)
}
func (m *S2CSendRedRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CSendRedRecord.Merge(m, src)
}
func (m *S2CSendRedRecord) XXX_Size() int {
	return xxx_messageInfo_S2CSendRedRecord.Size(m)
}
func (m *S2CSendRedRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CSendRedRecord.DiscardUnknown(m)
}

var xxx_messageInfo_S2CSendRedRecord proto.InternalMessageInfo

func (m *S2CSendRedRecord) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *S2CSendRedRecord) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CSendRedRecord) GetRedAmount() int64 {
	if m != nil {
		return m.RedAmount
	}
	return 0
}

func (m *S2CSendRedRecord) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *S2CSendRedRecord) GetMineNum() int64 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

func (m *S2CSendRedRecord) GetTotalMineAmount() int64 {
	if m != nil {
		return m.TotalMineAmount
	}
	return 0
}

func (m *S2CSendRedRecord) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

//狩猎记录-抢包记录
type S2CRobbedRedInfoArr struct {
	TotalAmount          int64               `protobuf:"varint,1,opt,name=totalAmount,proto3" json:"totalAmount"`
	TotalCount           int64               `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount"`
	RobbedArr            []*S2CRobbedRedInfo `protobuf:"bytes,3,rep,name=robbedArr,proto3" json:"robbedArr"`
	Current              int32               `protobuf:"varint,4,opt,name=current,proto3" json:"current"`
	Size                 int32               `protobuf:"varint,5,opt,name=size,proto3" json:"size"`
	Total                int64               `protobuf:"varint,6,opt,name=total,proto3" json:"total"`
	Pages                int32               `protobuf:"varint,7,opt,name=pages,proto3" json:"pages"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *S2CRobbedRedInfoArr) Reset()         { *m = S2CRobbedRedInfoArr{} }
func (m *S2CRobbedRedInfoArr) String() string { return proto.CompactTextString(m) }
func (*S2CRobbedRedInfoArr) ProtoMessage()    {}
func (*S2CRobbedRedInfoArr) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{15}
}

func (m *S2CRobbedRedInfoArr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRobbedRedInfoArr.Unmarshal(m, b)
}
func (m *S2CRobbedRedInfoArr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRobbedRedInfoArr.Marshal(b, m, deterministic)
}
func (m *S2CRobbedRedInfoArr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRobbedRedInfoArr.Merge(m, src)
}
func (m *S2CRobbedRedInfoArr) XXX_Size() int {
	return xxx_messageInfo_S2CRobbedRedInfoArr.Size(m)
}
func (m *S2CRobbedRedInfoArr) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRobbedRedInfoArr.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRobbedRedInfoArr proto.InternalMessageInfo

func (m *S2CRobbedRedInfoArr) GetTotalAmount() int64 {
	if m != nil {
		return m.TotalAmount
	}
	return 0
}

func (m *S2CRobbedRedInfoArr) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *S2CRobbedRedInfoArr) GetRobbedArr() []*S2CRobbedRedInfo {
	if m != nil {
		return m.RobbedArr
	}
	return nil
}

func (m *S2CRobbedRedInfoArr) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *S2CRobbedRedInfoArr) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *S2CRobbedRedInfoArr) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *S2CRobbedRedInfoArr) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

type S2CRobbedRedInfo struct {
	Time                 int64    `protobuf:"varint,1,opt,name=time,proto3" json:"time"`
	Level                int32    `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	SenderName           string   `protobuf:"bytes,3,opt,name=senderName,proto3" json:"senderName"`
	Amount               int64    `protobuf:"varint,4,opt,name=amount,proto3" json:"amount"`
	RedAmount            int64    `protobuf:"varint,5,opt,name=redAmount,proto3" json:"redAmount"`
	IsMine               bool     `protobuf:"varint,6,opt,name=isMine,proto3" json:"isMine"`
	MineNum              int64    `protobuf:"varint,7,opt,name=mineNum,proto3" json:"mineNum"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRobbedRedInfo) Reset()         { *m = S2CRobbedRedInfo{} }
func (m *S2CRobbedRedInfo) String() string { return proto.CompactTextString(m) }
func (*S2CRobbedRedInfo) ProtoMessage()    {}
func (*S2CRobbedRedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{16}
}

func (m *S2CRobbedRedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRobbedRedInfo.Unmarshal(m, b)
}
func (m *S2CRobbedRedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRobbedRedInfo.Marshal(b, m, deterministic)
}
func (m *S2CRobbedRedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRobbedRedInfo.Merge(m, src)
}
func (m *S2CRobbedRedInfo) XXX_Size() int {
	return xxx_messageInfo_S2CRobbedRedInfo.Size(m)
}
func (m *S2CRobbedRedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRobbedRedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRobbedRedInfo proto.InternalMessageInfo

func (m *S2CRobbedRedInfo) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *S2CRobbedRedInfo) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CRobbedRedInfo) GetSenderName() string {
	if m != nil {
		return m.SenderName
	}
	return ""
}

func (m *S2CRobbedRedInfo) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *S2CRobbedRedInfo) GetRedAmount() int64 {
	if m != nil {
		return m.RedAmount
	}
	return 0
}

func (m *S2CRobbedRedInfo) GetIsMine() bool {
	if m != nil {
		return m.IsMine
	}
	return false
}

func (m *S2CRobbedRedInfo) GetMineNum() int64 {
	if m != nil {
		return m.MineNum
	}
	return 0
}

//每秒更新红包血量
type S2CRedFlood struct {
	RedId                int64    `protobuf:"varint,1,opt,name=redId,proto3" json:"redId"`
	RobbedCount          int64    `protobuf:"varint,2,opt,name=robbedCount,proto3" json:"robbedCount"`
	RedFlood             int64    `protobuf:"varint,3,opt,name=redFlood,proto3" json:"redFlood"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CRedFlood) Reset()         { *m = S2CRedFlood{} }
func (m *S2CRedFlood) String() string { return proto.CompactTextString(m) }
func (*S2CRedFlood) ProtoMessage()    {}
func (*S2CRedFlood) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{17}
}

func (m *S2CRedFlood) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRedFlood.Unmarshal(m, b)
}
func (m *S2CRedFlood) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRedFlood.Marshal(b, m, deterministic)
}
func (m *S2CRedFlood) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRedFlood.Merge(m, src)
}
func (m *S2CRedFlood) XXX_Size() int {
	return xxx_messageInfo_S2CRedFlood.Size(m)
}
func (m *S2CRedFlood) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRedFlood.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRedFlood proto.InternalMessageInfo

func (m *S2CRedFlood) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

func (m *S2CRedFlood) GetRobbedCount() int64 {
	if m != nil {
		return m.RobbedCount
	}
	return 0
}

func (m *S2CRedFlood) GetRedFlood() int64 {
	if m != nil {
		return m.RedFlood
	}
	return 0
}

//红包消失
type S2CRedDisappear struct {
	RedId                int64            `protobuf:"varint,1,opt,name=redId,proto3" json:"redId"`
	Level                int32            `protobuf:"varint,2,opt,name=level,proto3" json:"level"`
	Ticker               int32            `protobuf:"varint,3,opt,name=ticker,proto3" json:"ticker"`
	MaxUid               int64            `protobuf:"varint,4,opt,name=maxUid,proto3" json:"maxUid"`
	SenderId             int64            `protobuf:"varint,5,opt,name=senderId,proto3" json:"senderId"`
	SenderScore          int64            `protobuf:"varint,6,opt,name=senderScore,proto3" json:"senderScore"`
	RobUserArr           []*S2CCurRobUser `protobuf:"bytes,7,rep,name=robUserArr,proto3" json:"robUserArr"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *S2CRedDisappear) Reset()         { *m = S2CRedDisappear{} }
func (m *S2CRedDisappear) String() string { return proto.CompactTextString(m) }
func (*S2CRedDisappear) ProtoMessage()    {}
func (*S2CRedDisappear) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{18}
}

func (m *S2CRedDisappear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CRedDisappear.Unmarshal(m, b)
}
func (m *S2CRedDisappear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CRedDisappear.Marshal(b, m, deterministic)
}
func (m *S2CRedDisappear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CRedDisappear.Merge(m, src)
}
func (m *S2CRedDisappear) XXX_Size() int {
	return xxx_messageInfo_S2CRedDisappear.Size(m)
}
func (m *S2CRedDisappear) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CRedDisappear.DiscardUnknown(m)
}

var xxx_messageInfo_S2CRedDisappear proto.InternalMessageInfo

func (m *S2CRedDisappear) GetRedId() int64 {
	if m != nil {
		return m.RedId
	}
	return 0
}

func (m *S2CRedDisappear) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *S2CRedDisappear) GetTicker() int32 {
	if m != nil {
		return m.Ticker
	}
	return 0
}

func (m *S2CRedDisappear) GetMaxUid() int64 {
	if m != nil {
		return m.MaxUid
	}
	return 0
}

func (m *S2CRedDisappear) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *S2CRedDisappear) GetSenderScore() int64 {
	if m != nil {
		return m.SenderScore
	}
	return 0
}

func (m *S2CRedDisappear) GetRobUserArr() []*S2CCurRobUser {
	if m != nil {
		return m.RobUserArr
	}
	return nil
}

//玩家被踢出
type S2CKickOutUser struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason"`
	ReasonInt            int32    `protobuf:"varint,3,opt,name=reasonInt,proto3" json:"reasonInt"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CKickOutUser) Reset()         { *m = S2CKickOutUser{} }
func (m *S2CKickOutUser) String() string { return proto.CompactTextString(m) }
func (*S2CKickOutUser) ProtoMessage()    {}
func (*S2CKickOutUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{19}
}

func (m *S2CKickOutUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CKickOutUser.Unmarshal(m, b)
}
func (m *S2CKickOutUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CKickOutUser.Marshal(b, m, deterministic)
}
func (m *S2CKickOutUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CKickOutUser.Merge(m, src)
}
func (m *S2CKickOutUser) XXX_Size() int {
	return xxx_messageInfo_S2CKickOutUser.Size(m)
}
func (m *S2CKickOutUser) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CKickOutUser.DiscardUnknown(m)
}

var xxx_messageInfo_S2CKickOutUser proto.InternalMessageInfo

func (m *S2CKickOutUser) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *S2CKickOutUser) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *S2CKickOutUser) GetReasonInt() int32 {
	if m != nil {
		return m.ReasonInt
	}
	return 0
}

//错误消息
type S2CString struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S2CString) Reset()         { *m = S2CString{} }
func (m *S2CString) String() string { return proto.CompactTextString(m) }
func (*S2CString) ProtoMessage()    {}
func (*S2CString) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a66076066de807d, []int{20}
}

func (m *S2CString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S2CString.Unmarshal(m, b)
}
func (m *S2CString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S2CString.Marshal(b, m, deterministic)
}
func (m *S2CString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S2CString.Merge(m, src)
}
func (m *S2CString) XXX_Size() int {
	return xxx_messageInfo_S2CString.Size(m)
}
func (m *S2CString) XXX_DiscardUnknown() {
	xxx_messageInfo_S2CString.DiscardUnknown(m)
}

var xxx_messageInfo_S2CString proto.InternalMessageInfo

func (m *S2CString) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*S2CMsg)(nil), "msg.S2CMsg")
	proto.RegisterType((*S2CUserCount)(nil), "msg.S2CUserCount")
	proto.RegisterType((*S2CRoomBaseInfo)(nil), "msg.S2CRoomBaseInfo")
	proto.RegisterType((*S2CCurRobUser)(nil), "msg.S2CCurRobUser")
	proto.RegisterType((*S2CRedConfigInfo)(nil), "msg.S2CRedConfigInfo")
	proto.RegisterType((*S2CCurRedArr)(nil), "msg.S2CCurRedArr")
	proto.RegisterType((*S2CCurRed)(nil), "msg.S2CCurRed")
	proto.RegisterType((*S2CUserInfoArr)(nil), "msg.S2CUserInfoArr")
	proto.RegisterType((*S2CUserInfo)(nil), "msg.S2CUserInfo")
	proto.RegisterType((*S2CStartTick)(nil), "msg.S2CStartTick")
	proto.RegisterType((*S2CRedInfo)(nil), "msg.S2CRedInfo")
	proto.RegisterType((*S2CRobRed)(nil), "msg.S2CRobRed")
	proto.RegisterType((*S2CRedArr)(nil), "msg.S2CRedArr")
	proto.RegisterType((*S2CSendRedRecordArr)(nil), "msg.S2CSendRedRecordArr")
	proto.RegisterType((*S2CSendRedRecord)(nil), "msg.S2CSendRedRecord")
	proto.RegisterType((*S2CRobbedRedInfoArr)(nil), "msg.S2CRobbedRedInfoArr")
	proto.RegisterType((*S2CRobbedRedInfo)(nil), "msg.S2CRobbedRedInfo")
	proto.RegisterType((*S2CRedFlood)(nil), "msg.S2CRedFlood")
	proto.RegisterType((*S2CRedDisappear)(nil), "msg.S2CRedDisappear")
	proto.RegisterType((*S2CKickOutUser)(nil), "msg.S2CKickOutUser")
	proto.RegisterType((*S2CString)(nil), "msg.S2CString")
}

func init() { proto.RegisterFile("game_s2c.proto", fileDescriptor_7a66076066de807d) }

var fileDescriptor_7a66076066de807d = []byte{
	// 1175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x41, 0x6f, 0xe4, 0x34,
	0x14, 0x56, 0x26, 0xcd, 0x4c, 0xe7, 0x4d, 0xb7, 0xad, 0x0c, 0xac, 0x22, 0xb4, 0xac, 0x46, 0x16,
	0x5a, 0x0a, 0x82, 0x1e, 0x66, 0x41, 0xe2, 0xba, 0x0c, 0x42, 0x54, 0xa8, 0x05, 0x3c, 0xdb, 0x2b,
	0x28, 0x33, 0x71, 0x67, 0xad, 0x4e, 0x92, 0x2a, 0x4e, 0x10, 0xe2, 0x2f, 0x70, 0xe7, 0x77, 0x70,
	0xe1, 0xc8, 0x8d, 0x03, 0x48, 0xfc, 0x03, 0x0e, 0x70, 0xe2, 0x77, 0xa0, 0xf7, 0xec, 0x24, 0xf6,
	0x4c, 0xa6, 0xd2, 0x4a, 0xec, 0xcd, 0xef, 0xd9, 0xf1, 0xf3, 0x7b, 0xdf, 0xfb, 0x3e, 0x3b, 0x70,
	0xbc, 0x4e, 0x32, 0xf9, 0xad, 0x9e, 0xad, 0xce, 0xef, 0xca, 0xa2, 0x2a, 0x58, 0x98, 0xe9, 0x35,
	0xbf, 0x82, 0xe1, 0x62, 0x36, 0xbf, 0xd4, 0x6b, 0x16, 0xc3, 0x28, 0x4b, 0x54, 0x3e, 0xcf, 0xd2,
	0x38, 0x98, 0x06, 0x67, 0x91, 0x68, 0x4c, 0xf6, 0x10, 0x86, 0xba, 0x5e, 0xe2, 0xc4, 0x80, 0x26,
	0xac, 0xc5, 0x18, 0x1c, 0x2c, 0xeb, 0x9b, 0x9b, 0x38, 0x9c, 0x06, 0x67, 0x47, 0x82, 0xc6, 0xfc,
	0x6d, 0x38, 0x5a, 0xcc, 0xe6, 0xd7, 0x5a, 0x96, 0xf3, 0xa2, 0xce, 0x2b, 0xf6, 0x3a, 0x44, 0x2b,
	0x1c, 0xd0, 0x9e, 0xa1, 0x30, 0x06, 0xff, 0x35, 0x84, 0x93, 0xc5, 0x6c, 0x2e, 0x8a, 0x22, 0xfb,
	0x24, 0xd1, 0xf2, 0x22, 0xbf, 0x29, 0xd8, 0x31, 0x0c, 0x54, 0x6a, 0x97, 0x0d, 0x14, 0xed, 0x9e,
	0x27, 0x99, 0xa4, 0x98, 0x63, 0x41, 0x63, 0x36, 0x85, 0xc9, 0x46, 0x65, 0xaa, 0x7a, 0x96, 0xd1,
	0x9e, 0x21, 0x2d, 0x76, 0x5d, 0x78, 0xd6, 0x2c, 0xf9, 0x5e, 0xc8, 0x34, 0x3e, 0xa0, 0x49, 0x6b,
	0xb1, 0xf7, 0x60, 0x54, 0x6b, 0x59, 0x3e, 0x2b, 0xcb, 0x38, 0x9a, 0x86, 0x67, 0x93, 0xd9, 0xe9,
	0x79, 0xa6, 0xd7, 0xe7, 0xf6, 0xac, 0x78, 0x00, 0xd1, 0x2c, 0x60, 0x8f, 0x60, 0x5c, 0x37, 0x09,
	0xc4, 0x43, 0xda, 0xa6, 0x73, 0xb0, 0xf7, 0xe1, 0x50, 0xcb, 0xcd, 0x0d, 0x7e, 0x12, 0x8f, 0xa6,
	0x41, 0xef, 0x56, 0xed, 0x0a, 0xf6, 0x14, 0xc6, 0xa5, 0x4c, 0xe7, 0x45, 0x7e, 0xa3, 0xd6, 0xf1,
	0x21, 0x2d, 0x7f, 0xa3, 0x59, 0x2e, 0x9a, 0x09, 0xfa, 0xa6, 0x5b, 0x87, 0x49, 0x54, 0x6a, 0x75,
	0x2b, 0xcb, 0x78, 0x6c, 0x0a, 0x6e, 0x2c, 0xf6, 0x31, 0x3c, 0x58, 0xd5, 0xa5, 0x28, 0x96, 0xd7,
	0x36, 0x15, 0xa0, 0x54, 0x58, 0xb3, 0xe1, 0xbc, 0x9d, 0x14, 0xfe, 0x42, 0x82, 0xb0, 0x4a, 0xaa,
	0x5a, 0xc7, 0x13, 0x0b, 0x21, 0x59, 0xec, 0xa3, 0x66, 0xc7, 0xa5, 0xca, 0xd7, 0x58, 0xb5, 0x23,
	0x3a, 0xe2, 0x89, 0x73, 0x44, 0x3a, 0x9c, 0xbf, 0x8a, 0xff, 0x11, 0xc0, 0x03, 0x2f, 0x1e, 0x06,
	0xc0, 0x12, 0x5d, 0x34, 0x08, 0x5a, 0x8b, 0xbd, 0x09, 0x87, 0x38, 0xba, 0xea, 0x90, 0x6c, 0x6d,
	0x44, 0xf8, 0x85, 0x4c, 0x52, 0x82, 0x71, 0x2c, 0x68, 0xcc, 0x38, 0x1c, 0x95, 0xc5, 0x72, 0x29,
	0x53, 0x0b, 0xb1, 0x41, 0xd1, 0xf3, 0x61, 0x2c, 0xa5, 0x2f, 0x55, 0x2e, 0xe3, 0x68, 0x1a, 0x9c,
	0x1d, 0x0a, 0x6b, 0xb1, 0xc7, 0x00, 0x99, 0xca, 0xa5, 0xfd, 0xd2, 0x00, 0xe7, 0x78, 0xb0, 0x17,
	0xf5, 0xaa, 0x28, 0x25, 0xc1, 0x16, 0x0a, 0x63, 0xf0, 0xe7, 0x70, 0xba, 0x8d, 0x05, 0x9e, 0xac,
	0x48, 0x53, 0x6d, 0x89, 0x40, 0xe3, 0xae, 0x93, 0x0d, 0x09, 0x8c, 0x81, 0x67, 0x49, 0x9a, 0x66,
	0x0c, 0x31, 0x6f, 0x63, 0xf1, 0x9f, 0x03, 0x22, 0x02, 0x56, 0x48, 0xa6, 0x88, 0x40, 0x0c, 0xa3,
	0x55, 0x5d, 0x96, 0xd2, 0x52, 0x21, 0x12, 0x8d, 0x89, 0xc1, 0xb4, 0xfa, 0x41, 0xda, 0x7d, 0x69,
	0x8c, 0xc1, 0xaa, 0xa2, 0x4a, 0x36, 0xb6, 0xc5, 0x8d, 0x81, 0xde, 0xbb, 0x64, 0x2d, 0x35, 0x55,
	0x25, 0x12, 0xc6, 0x60, 0x4f, 0x60, 0x58, 0x52, 0x0c, 0xdb, 0xd9, 0xc7, 0x6e, 0x3b, 0xc8, 0x54,
	0xd8, 0x59, 0x2c, 0x0f, 0xb6, 0xa5, 0x90, 0xe9, 0x57, 0x85, 0xa6, 0xf2, 0x44, 0xc2, 0xf1, 0xf0,
	0x1f, 0x03, 0x18, 0xb7, 0x5f, 0x61, 0xac, 0x52, 0xa6, 0x2d, 0x9e, 0xc6, 0xb8, 0x17, 0x4e, 0xb7,
	0x14, 0x41, 0x57, 0x0a, 0x12, 0x16, 0x95, 0xcb, 0xab, 0x3a, 0xb3, 0x68, 0x36, 0x26, 0xee, 0xa6,
	0x65, 0x9e, 0x52, 0xdb, 0x44, 0x34, 0xd5, 0xda, 0xfc, 0xa7, 0x00, 0x8e, 0x1d, 0x4a, 0xbd, 0xda,
	0x12, 0xbe, 0x84, 0x3a, 0xf0, 0x5f, 0x02, 0x98, 0x38, 0x13, 0xec, 0x14, 0xc2, 0xba, 0x15, 0x2e,
	0x1c, 0xf6, 0x2a, 0x57, 0x5f, 0xaf, 0x77, 0x05, 0x3b, 0xd8, 0x2e, 0xd8, 0xea, 0x45, 0xa2, 0x9a,
	0xaa, 0x60, 0x9e, 0xc6, 0x74, 0x68, 0x3c, 0xf4, 0x68, 0xbc, 0xcd, 0x9a, 0xd1, 0x2e, 0x6b, 0xf8,
	0xd7, 0xd4, 0x90, 0x8b, 0x2a, 0x29, 0xab, 0xe7, 0x6a, 0x75, 0xeb, 0x88, 0x4c, 0xe0, 0x89, 0xcc,
	0xbb, 0x30, 0x2a, 0x0d, 0xeb, 0x29, 0x81, 0x1e, 0x31, 0x68, 0xe6, 0xf9, 0xef, 0x03, 0x80, 0xce,
	0xbf, 0xa7, 0x65, 0xba, 0x2c, 0x07, 0x5e, 0x96, 0x5d, 0x2e, 0xa1, 0x97, 0xcb, 0xfe, 0x76, 0x99,
	0xc2, 0xc4, 0x64, 0x64, 0x94, 0xd9, 0x74, 0x8c, 0xeb, 0xf2, 0x1a, 0x6a, 0xe8, 0x37, 0x14, 0x22,
	0x50, 0xa9, 0xac, 0x21, 0x3f, 0x8d, 0xf1, 0xc4, 0x1b, 0xf9, 0x9d, 0xdc, 0x90, 0x32, 0x47, 0xc2,
	0x18, 0x86, 0x28, 0xf8, 0x15, 0xb5, 0xf9, 0x98, 0x10, 0x73, 0x3c, 0x18, 0xa5, 0x94, 0xe9, 0x67,
	0x9b, 0xa2, 0x48, 0x63, 0x30, 0x51, 0x1a, 0xdb, 0xa9, 0xea, 0xc4, 0xab, 0x6a, 0xbb, 0xe7, 0xe7,
	0xd8, 0x05, 0x47, 0xee, 0x9e, 0xe8, 0xe1, 0x7f, 0x0d, 0x88, 0x7c, 0xa2, 0x58, 0xee, 0x27, 0x5f,
	0xa7, 0x7b, 0x03, 0x4f, 0xf7, 0xb6, 0xd1, 0x0f, 0x7b, 0x34, 0xf3, 0x09, 0x1c, 0xe7, 0x45, 0x25,
	0x9c, 0xf2, 0x99, 0xe2, 0x6e, 0x79, 0x1d, 0xb4, 0x22, 0x0f, 0x2d, 0xbf, 0x26, 0xc3, 0x9d, 0x9a,
	0x38, 0xa8, 0x8d, 0x7c, 0xd4, 0xfa, 0x6b, 0xdc, 0x6a, 0xf1, 0xd8, 0xd1, 0x62, 0xe7, 0x16, 0x01,
	0xef, 0x16, 0x79, 0x0c, 0x40, 0xd9, 0x98, 0xe8, 0x13, 0x13, 0xbd, 0xf3, 0x74, 0xf3, 0x6e, 0x75,
	0x3b, 0x0f, 0xff, 0xd0, 0x14, 0xd7, 0xe8, 0xe0, 0x3b, 0xad, 0x5e, 0x06, 0xc4, 0xf5, 0x9d, 0xfe,
	0xb6, 0xd3, 0xfc, 0x9f, 0x00, 0x5e, 0x43, 0xca, 0xc8, 0x3c, 0x45, 0x1d, 0x95, 0xab, 0xa2, 0xa4,
	0x0d, 0xa6, 0x30, 0x21, 0x31, 0xb1, 0xe5, 0x36, 0x18, 0xb9, 0x2e, 0x3c, 0x0f, 0x99, 0x73, 0xa7,
	0xef, 0x1d, 0x0f, 0xfb, 0xa0, 0x3d, 0x42, 0x48, 0x47, 0x68, 0x9f, 0x04, 0x5e, 0xac, 0x56, 0xb9,
	0x1d, 0xe1, 0x3b, 0xe8, 0x17, 0xbe, 0xa8, 0x4f, 0xf8, 0x86, 0xbd, 0xc2, 0x37, 0x72, 0x84, 0x8f,
	0xff, 0x19, 0xd0, 0xed, 0xe7, 0x85, 0x6d, 0x99, 0x12, 0xf4, 0x31, 0x65, 0xe0, 0xa2, 0xf8, 0x88,
	0x5e, 0x37, 0x5e, 0xdb, 0x75, 0x0e, 0x87, 0xe1, 0x07, 0xfb, 0x18, 0x1e, 0xf9, 0xbd, 0x72, 0x06,
	0x27, 0x74, 0xda, 0xcb, 0xed, 0x6b, 0x7c, 0xdb, 0xdd, 0x31, 0x64, 0xe4, 0x30, 0x84, 0xff, 0x6b,
	0x10, 0x33, 0x0d, 0x6d, 0xe1, 0xfc, 0x7f, 0x10, 0xc3, 0x77, 0x9c, 0xe1, 0xd3, 0x2e, 0x68, 0x5e,
	0x38, 0xd1, 0xad, 0x7b, 0x85, 0xb8, 0xfd, 0x66, 0x70, 0xf3, 0x22, 0xbf, 0x04, 0x6e, 0x3e, 0x9b,
	0xc3, 0x1d, 0x36, 0xef, 0xbb, 0x99, 0x3c, 0xbc, 0xa3, 0x1e, 0xbc, 0xad, 0x3e, 0x0d, 0x3d, 0x7d,
	0xda, 0xab, 0x0d, 0x3c, 0xa1, 0xab, 0x54, 0x34, 0xe2, 0xd9, 0x2f, 0x7b, 0x5b, 0xb2, 0x3f, 0xe8,
	0x95, 0xfd, 0x56, 0x90, 0x43, 0x5f, 0x90, 0xf9, 0xdf, 0x81, 0xf9, 0xd5, 0x90, 0xe9, 0xa7, 0x4a,
	0x27, 0x77, 0x77, 0x32, 0x29, 0xf7, 0xc4, 0xe9, 0x2f, 0x55, 0x27, 0xe8, 0xa1, 0x27, 0xe8, 0xe6,
	0x47, 0xe3, 0x5a, 0xb9, 0x3f, 0x1a, 0xd7, 0x2a, 0xbd, 0xef, 0x4d, 0x83, 0x99, 0x98, 0xf1, 0x82,
	0xa4, 0xcf, 0xe0, 0xec, 0xba, 0xd8, 0x8c, 0x84, 0xac, 0x79, 0xde, 0x8f, 0xf6, 0x3e, 0xef, 0x9d,
	0x55, 0xfc, 0x1b, 0x7a, 0x28, 0x7d, 0xa1, 0x56, 0xb7, 0x5f, 0xd6, 0xd5, 0xbd, 0x8f, 0xf1, 0x87,
	0x28, 0x3b, 0x89, 0x2e, 0x72, 0xfb, 0x34, 0xb1, 0x96, 0x81, 0x15, 0x47, 0x17, 0x96, 0xc6, 0x91,
	0xe8, 0x1c, 0xfc, 0x2d, 0x12, 0xcf, 0x45, 0x55, 0xaa, 0x7c, 0x8d, 0xaf, 0x9d, 0x4c, 0xaf, 0x69,
	0xdf, 0xb1, 0xc0, 0xe1, 0x72, 0x48, 0x7f, 0x93, 0x4f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x96,
	0x44, 0x1a, 0xb9, 0x5f, 0x0e, 0x00, 0x00,
}
