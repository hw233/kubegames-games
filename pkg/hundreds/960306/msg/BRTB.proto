//protoc --go_out=plugins=grpc:. BRTB.proto
syntax = "proto3";

// 客户端到服务器发送消息的类型
enum ReceiveMessageType {
    StartID = 0;
    BetID = 1; // 下注信息
	SitDown = 2;//用户坐下消息
	GetTrend = 3;//获取走势图
	GetUserListInfo = 4; //获取玩家列表
	StandUp = 5;	//用户站立
	tempCard = 6;	//测试的牌
	BetReptID = 7;// 重复下注

}

// 服务器发送给客户端的消息类型
enum SendToClientMessageType {
    RestartID = 0;
    BetRet = 1; // 下注消息
    BetFailID = 2; // 下注失败
    BetSuccessMessageID = 3; // 下注成功的消息id
    SceneID = 4; // 场景ID
	Status = 6;		//状态消息
	Settle = 7;		//结算消息
	SitDownFail = 8; //坐下失败
	BetInfo = 9;		//下注信息消息
	TrendInfo = 10;	//服务器发送走势图
	UserListInfo = 11;//玩家列表
	SceneSettleInfo = 12;//场景上的玩家结算信息
	ExitRet = 13;//退出结果，在用户失败时发送
	KickOutUser = 14;//踢出玩家发送原因
	RoomRolesInfo = 15;	//房间规则信息
	RoomSenceInfo = 16;	//场次场景信息
	UserComeBack = 17;	//用户回来的结算消息
	GamePokerCount = 18;//游戏开始时发送扑克的张数
	UpdateMiSeatID = 19;//更新玩家咪牌的座位号
	PokerInfo = 20;//扑克消息
	BetReptRet = 21; //  重复下注
}

//游戏阶段
enum GameStatus{
	StartStatus = 0;
	StartGame = 1;	//开始游戏动画
	ShakeDice = 2;	//摇骰子
	StartMovie = 3;//开始动画
	BetStatus = 4; //下注阶段
	EndBetMovie = 5; //结束下注动画
	ShowPoker = 6;//显示牌
	SettleStatus = 7; //结算阶段，包括咪牌

}

message StatusMessage{
	int32 Status = 1;		//状态
	int32 StatusTime = 2;	//状态的持续时间
	int32 TotalStatusTime = 3;//状态的总时间
}

// 押注失败发送的消息
message BetFailMessage {
    string FailMessage = 1;
}

// 押注成功时发送的消息
message BetSuccessMessage {
    int32 SeatId = 1;//座位号，场景中的座位号
	int32 BetIndex = 2;//下注的下标
	int32 BetType = 3;//下注区域大小单双 点数 围
	int64 UserID=4;//用户ID
}

// 服务器收到的押注信息
message Bet {
    int32 BetType = 1;//下注区域大小单双 点数 围
	int32 BetIndex = 2;//下注的下标
}

//游戏中几个玩家的数据
message SeatUser {
    string Nick = 1; // 用户昵称
    string Head = 2; // 头像
    int64 Score = 3; // 分数
    bool IsBigWinner = 4; // 是否是大富翁
    bool IsMaster = 5; // 是否是神算子
	int32 SeatId=6;//在场景中的座位id
	int64 UserID = 7;//用户ID
	bool IsMillionaire = 8; // 是否是大赢家，
}

// 发送场景数据
message SceneMessage{
	repeated SeatUser UserData = 1;
}

message UserSitDown{
	int32 ChairNo = 1;//座位号
}

message UserSitDownFail{
	string FailReaSon = 1;//坐下失败
}   

//骰子消息
message PokerMsg{
	repeated int32 Dices = 1;//3个骰子数
	int32 BigSmall = 2; // 大小围 0大 1小 18围
    int32 SingleDouble = 3; // 2单 3双 18围
    int32 Count = 4; // 点数
}
//结算消息
message SettleMsg{
	repeated bool Win = 3; // ture赢 false输
	repeated int64 UserWin = 4;//玩家每个区域赢的钱
	int64 UserScore = 9; //用户当前的分数
	repeated int64 BetArea = 10;//下注区域的钱
	repeated int64 UserBet = 12;//用户自己下注
	int64 TotalWin = 15;//扣税以后总赢钱
}

message SceneBetInfo{
	repeated int64 BetArea = 1;//下注区域的钱
	repeated int64 UserBet = 4;//用户自己下注
	int64 UserBetTotal = 7;//玩家总下注
	int32 MasterBetType = 8;//神算子下注的区域，0庄，1，闲，2和,-1时表示无下注
}

message OneTrend{
repeated int32 Dices = 1;//3个骰子数
	int32 Count = 2;//点数
	int32 BigSmall = 3; // 大小围 0大 1小 18围
	int32 SingleDouble = 4; // 2单 3双 18围
}

message Trend{
	repeated OneTrend info = 1;
}

message UserInfo{
	string NikeName = 1;//昵称
	int64 UserGlod = 2;//玩家金币
	int64 BetGold = 3;//下注金币
	int32 WinCount =  4;//赢的次数
    string Head = 5; // 头像
    int32 icon=6;//称号0无称号， 1神算子，2大富豪，3大赢家 数字越高优先级越高
}

//用户列表
message UserList{
	repeated UserInfo UserList = 1;
}

message SceneUserInfo{
	int64 UserID = 1;
	int32 SceneSeatID = 2;
	repeated int64 UserWin = 4;//玩家每个区域赢的钱
	int64 UserScore = 8;
	int64 TotalWin = 9;//扣税以后总赢钱
	repeated int64 BetArea = 10;//场景下注区域的钱
	repeated int64 UserBet = 11;//场景下注区域的钱
}

//场景上的玩家结算信息
message SceneUserSettle{
	repeated SceneUserInfo UserList = 1;
}

message ExitFail{
	string FailReason = 1;//失败的原因
}

message KickOutUserMsg{
	string KickOutReason = 1;//踢出玩家发送原因
}

message RoomRolesInfoMsg{
	repeated int32 BetArr = 1; //下注数组
	int32 UserBetLimit = 2;
	int64 BetMinLimit = 3;//最低携带金币限制
}

//次消息一秒一次
message RoomSenceInfoMsg{
	int64 RoomID = 1;
	Trend TrendList = 2;
	StatusMessage GameStatus = 3;
	int64 BaseBet = 4;
	int64 UserLimit = 5;
	int64 OnlineNumber = 6;//在线人数
}

//测试
message tempCardMsg{
	repeated  int32 Dices = 1;//3个骰子数量
}

// 重复下注
message BetRept {
	repeated int64 BetArea = 1;
}